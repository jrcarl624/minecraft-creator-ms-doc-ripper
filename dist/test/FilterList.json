[{"type":"yamlHeader","data":{"author":"docsbryce","ms.author":"v-bbortree","title":"Entity Documentation - FilterList","ms.prod":"gaming"}},{"type":"heading","data":"Entity Documentation - Filter list"},{"type":"other","data":"Below is a list of all the available filters within Minecraft:Bedrock Edition for use with Entity JSON files."},{"type":"table","data":[{"Filter":"[clock_time](Filters/clock_time.md)","Description":"`clock_time` allows a creator to compare the current time with a float value in the range (0.0, 1.0)."},{"Filter":"[distance_to_nearest_player](Filters/distance_to_nearest_player.md)","Description":"`distance_to_nearest_player` compares the distance to the nearest Player with a float value."},{"Filter":"[has_ability](Filters/has_ability.md)","Description":"Returns true when the subject entity has the named ability."},{"Filter":"[has_biome_tag](Filters/has_biome_tag.md)","Description":"Tests whether the biome the subject is in has the specified tag."},{"Filter":"[has_component](Filters/has_component.md)","Description":"Returns true when the subject entity contains the named component."},{"Filter":"[has_container_open](Filters/has_container_open.md)","Description":"Returns true when the subject Player entity has opened a container."},{"Filter":"[has_damage](Filters/has_damage.md)","Description":"Returns true when the subject entity receives the named damage type."},{"Filter":"[has_equipment](Filters/has_equipment.md)","Description":"Tests for the presence of a named item in the designated slot of the subject entity."},{"Filter":"[has_mob_effect](Filters/has_mob_effect.md)","Description":"Tests whether the Subject has the specified mob effect."},{"Filter":"[has_ranged_weapon](Filters/has_ranged_weapon.md)","Description":"Returns true when the subject entity is holding a ranged weapon like a bow or crossbow."},{"Filter":"[has_tag](Filters/has_tag.md)","Description":"Returns true if the subject entity has the tag provided."},{"Filter":"[has_target](Filters/has_target.md)","Description":"Returns true if the subject entity has a valid target."},{"Filter":"[has_trade_supply](Filters/has_trade_supply.md)","Description":"Tests whether the target has any trade supply left. Will return false if the target cannot be traded with."},{"Filter":"[hourly_clock_time](Filters/hourly_clock_time.md)","Description":"Compares the current 24 hour time with an int value in the range[0, 24000]"},{"Filter":"[in_block](Filters/in_block.md)","Description":"Returns true when the subject entity is inside a specified Block type."},{"Filter":"[in_caravan](Filters/in_caravan.md)","Description":"Returns true if the subject entity is in a caravan."},{"Filter":"[in_clouds](Filters/in_clouds.md)","Description":"Returns true when the subject entity is in the clouds."},{"Filter":"[in_contact_with_water](Filters/in_contact_with_water.md)","Description":"Returns true when the subject entity in contact with any water: water, rain, splash water bottle."},{"Filter":"[in_lava](Filters/in_lava.md)","Description":"Returns true when the subject entity is in lava."},{"Filter":"[in_nether](Filters/in_nether.md)","Description":"Returns true when the subject entity is in Nether."},{"Filter":"[in_water_or_rain](Filters/in_water_or_rain.md)","Description":"Returns true when the subject entity is in water or rain."},{"Filter":"[in_water](Filters/in_water.md)","Description":"Returns true when the subject entity is in water."},{"Filter":"[inactivity_timer](Filters/inactivity_timer.md)","Description":"Tests if the specified duration in seconds of inactivity."},{"Filter":"[is_altitude](Filters/is_altitude.md)","Description":"Tests the current altitude against a provided value."},{"Filter":"[is_avoiding_mobs](Filters/is_avoiding_mobs.md)","Description":"Returns true if the subject entity is fleeing from other mobs."},{"Filter":"[is_biome](Filters/is_biome.md)","Description":"Tests whether the Subject is currently in the named biome."},{"Filter":"[is_block](Filters/is_block.md)","Description":"Returns true when the block has the given name."},{"Filter":"[is_brightness](Filters/is_brightness.md)","Description":"Tests the current brightness against a provided value in the range (0.0, 1.0)."},{"Filter":"[is_climbing](Filters/is_climbing.md)","Description":"Returns true if the subject entity is climbing."},{"Filter":"[is_color](Filters/is_color.md)","Description":"Returns true if the subject entity is the named color."},{"Filter":"[is_daytime](Filters/is_daytime.md)","Description":"Returns true during the daylight hours."},{"Filter":"[is_difficulty](Filters/is_difficulty.md)","Description":"Tests the current difficulty level of the game."},{"Filter":"[is_family](Filters/is_family.md)","Description":"Returns true when the subject entity is a member of the named family."},{"Filter":"[is_game_rule](Filters/is_game_rule.md)","Description":"Tests whether a named game rule is active."},{"Filter":"[is_humid](Filters/is_humid.md)","Description":"Tests whether the subject is in an area with humidity."},{"Filter":"[is_immobile](Filters/is_immobile.md)","Description":"Returns true if the subject entity is immobile. An entity is immobile if it lacks AI goals, has just changed dimensions or if it is a mob and has no health."},{"Filter":"[is_in_village](Filters/is_in_village.md)","Description":"Tests whether the Subject is inside the bounds of a village."},{"Filter":"[is_leashed](Filters/is_leashed.md)","Description":"Returns true if the subject entity is leashed."},{"Filter":"[is_leashed_to](Filters/is_leashed_to.md)","Description":"Returns true if the subject entity leashed to the calling entity."},{"Filter":"[is_mark_variant](Filters/is_mark_variant.md)","Description":"Returns true if the subject entity is the mark variant number provided."},{"Filter":"[is_moving](Filters/is_moving.md)","Description":"Returns true if the subject entity is moving."},{"Filter":"[is_owner](Filters/is_owner.md)","Description":"Returns true if the subject entity is the owner of the calling entity."},{"Filter":"[is_persistent](Filters/is_persistent.md)","Description":"Tests if the subject's persistence matches the bool value passed in."},{"Filter":"[is_riding](Filters/is_riding.md)","Description":"Returns true if the subject entity is riding on another entity."},{"Filter":"[is_skin_id](Filters/is_skin_id.md)","Description":"Returns true if the subject entity uses the skin id number provided."},{"Filter":"[is_sleeping](Filters/is_sleeping.md)","Description":"Tests whether the subject is sleeping."},{"Filter":"[is_sneaking](Filters/is_sneaking.md)","Description":"Tests whether the subject is sneaking."},{"Filter":"[is_snow_covered](Filters/is_snow_covered.md)","Description":"Tests whether the subject is in an area covered by snow."},{"Filter":"[is_target](Filters/is_target.md)","Description":"Returns true if the subject entity is the target of the calling entity."},{"Filter":"[is_temperature_type](Filters/is_temperature_type.md)","Description":"Tests whether the current temperature is a given type."},{"Filter":"[is_temperature_value](Filters/is_temperature_value.md)","Description":"Tests the current temperature against a provided value in the range (0.0, 1.0) where 0.0 is the coldest temp and 1.0 is the hottest."},{"Filter":"[is_underground](Filters/is_underground.md)","Description":"Returns true when the subject entity is underground. An entity is considered underground if there are non-solid blocks above it."},{"Filter":"[is_underwater](Filters/is_underwater.md)","Description":"Returns true when the subject entity is under water."},{"Filter":"[is_variant](Filters/is_variant.md)","Description":"Returns true if the subject entity is the variant number provided."},{"Filter":"[is_visible](Filters/is_visible.md)","Description":"Returns true if the subject entity is visible."},{"Filter":"[light_level](Filters/light_level.md)","Description":"Tests if the entity is outside of the specified light level range. The range is set between 0 and 16."},{"Filter":"[moon_intensity](Filters/moon_intensity.md)","Description":"Compares the current moon intensity with a float value in the range of 0.0 and 1.0"},{"Filter":"[moon_phase](Filters/moon_phase.md)","Description":"Compares the current moon intensity with a float value in the range of 0.0 and 1.0"},{"Filter":"[on_ground](Filters/on_ground.md)","Description":"Returns true when the subject entity is on the ground."},{"Filter":"[on_ladder](Filters/on_ladder.md)","Description":"Returns true when the subject entity is on a ladder."},{"Filter":"[random_chance](Filters/random_chance.md)","Description":"Returns true if the random chance rolls 0 out of a specified max range."},{"Filter":"[rider_count](Filters/rider_count.md)","Description":"Returns the number of riders on this entity."},{"Filter":"[surface_mob](Filters/surface_mob.md)","Description":"Tests if the subject is a surface mob."},{"Filter":"[trusts](Filters/trusts.md)","Description":"Returns true if the subject is trusted by entity."},{"Filter":"[weather_at_position](Filters/weather_at_position.md)","Description":"Tests the current weather, at the actor's position, against a provided weather value."},{"Filter":"[weather](Filters/weather.md)","Description":"Tests for the current weather state the entity is experiencing."}]}]