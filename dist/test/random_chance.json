[{"type":"yamlHeader","data":{"author":"mammerla","ms.author":"v-josjones","title":"Entity Documentation - random_chance","ms.prod":"gaming"}},{"type":"heading","data":"Entity Documentation - random_chance"},{"type":"other","data":"Returns true if the random chance rolls 0 out of a specified max range."},{"type":"other","data":"An example is if a `value` of 5 is set, a random number in the range of 0 - 5 will be selected."},{"type":"heading","data":"Parameters"},{"type":"table","data":[{"Name":"value","Default Value":"*not set*","Type":"Integer","Description":"(Required) An integer value."}]},{"type":"other","data":">[!Note]"},{"type":"other","data":">`random_chance` can also use `subject` and [operator](../Definitions/NestedTables/operator.md) parameters but they are optional."},{"type":"heading","data":"subject"},{"type":"table","data":[{"Options":"block","Description":"The block involved with the interaction."},{"Options":"damager","Description":"The damaging actor involved with the interaction."},{"Options":"other","Description":"The other member of an interaction, not the caller."},{"Options":"parent","Description":"The caller's current parent."},{"Options":"player","Description":"The player involved with the interaction."},{"Options":"self","Description":"The entity or object calling the test"},{"Options":"target","Description":"The caller's current target."}]},{"type":"heading","data":"operator"},{"type":"table","data":[{"Options":"!=","Description":"Test for inequality."},{"Options":"<","Description":"Test for less-than the value."},{"Options":"<=","Description":"Test for less-than or equal to the value."},{"Options":"<>","Description":"Test for inequality."},{"Options":"=","Description":"Test for equality."},{"Options":"==","Description":"Test for equality."},{"Options":">","Description":"Test for greater-than the value."},{"Options":">=","Description":"Test for greater-than or equal to the value."},{"Options":"equals","Description":"Test for equality."},{"Options":"not","Description":"Test for inequality."}]},{"type":"heading","data":"Examples"},{"type":"heading","data":"Full"},{"type":"code","data":{"test":"random_chance","subject":"self","operator":"equals","value":"0"},"language":"json"},{"type":"heading","data":"Short (using Defaults)"},{"type":"code","data":{"test":"random_chance","value":"0"},"language":"json"},{"type":"heading","data":"Vanilla entities examples"},{"type":"code","data":{"test":"random_chance","value":800},"language":"json"},{"type":"heading","data":"Vanilla entities examples using `random_chance`"},{"type":"list","data":["[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)","[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)"]}]