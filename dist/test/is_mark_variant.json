[{"type":"yamlHeader","data":{"author":"v-josjones","ms.author":"v-josjones","title":"Entity Documentation - is_mark_variant","ms.prod":"gaming"}},{"type":"heading","data":"Entity Documentation - is_mark_variant"},{"type":"other","data":"Returns true if the subject entity is the mark variant number provided."},{"type":"heading","data":"Parameters"},{"type":"table","data":[{"Name":"value","Default Value":"*not set*","Type":"Integer","Description":"(Required) An integer value."}]},{"type":"other","data":">[!Note]"},{"type":"other","data":">`is_mark_variant` can also use `subject` and [operator](../Definitions/NestedTables/operator.md) parameters but they are optional."},{"type":"heading","data":"subject"},{"type":"table","data":[{"Options":"block","Description":"The block involved with the interaction."},{"Options":"damager","Description":"The damaging actor involved with the interaction."},{"Options":"other","Description":"The other member of an interaction, not the caller."},{"Options":"parent","Description":"The caller's current parent."},{"Options":"player","Description":"The player involved with the interaction."},{"Options":"self","Description":"The entity or object calling the test"},{"Options":"target","Description":"The caller's current target."}]},{"type":"heading","data":"operator"},{"type":"table","data":[{"Options":"!=","Description":"Test for inequality."},{"Options":"<","Description":"Test for less-than the value."},{"Options":"<=","Description":"Test for less-than or equal to the value."},{"Options":"<>","Description":"Test for inequality."},{"Options":"=","Description":"Test for equality."},{"Options":"==","Description":"Test for equality."},{"Options":">","Description":"Test for greater-than the value."},{"Options":">=","Description":"Test for greater-than or equal to the value."},{"Options":"equals","Description":"Test for equality."},{"Options":"not","Description":"Test for inequality."}]},{"type":"heading","data":"Example"},{"type":"heading","data":"Full"},{"type":"code","data":{"test":"is_mark_variant","subject":"self","operator":"equals","value":"0"},"language":"json"},{"type":"heading","data":"Short (using Defaults)"},{"type":"code","data":{"test":"is_mark_variant","value":"0"},"language":"json"},{"type":"heading","data":"Vanilla entities examples"},{"type":"heading","data":"llama"},{"type":"code","data":{"minecraft:breedable":{"require_tame":true,"inherit_tamed":false,"love_filters":{"test":"is_mark_variant","subject":"self","operator":"!=","value":1},"breeds_with":{"mate_type":"minecraft:llama","baby_type":"minecraft:llama","breed_event":{"event":"minecraft:entity_born","target":"baby"}},"breed_items":["hay_block"]}},"language":"json","source":"../../../../Source/VanillaBehaviorPack/entities/llama.json","range":[58,72]},{"type":"heading","data":"Vanilla entities using `is_mark_variant`"},{"type":"list","data":["[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)","[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)","[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)","[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)"]}]