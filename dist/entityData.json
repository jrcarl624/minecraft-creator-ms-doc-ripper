{
	"components": {
		"minecraft:attack": {
			"properties": {
				"damage": {
					"type": "Range [a, b]",
					"description": "Range of the random amount of damage the melee attack deals. A negative value can heal the entity instead of hurting it",
					"default": "_not set_"
				},
				"effect_duration": {
					"type": "Decimal",
					"description": "Duration in seconds of the status ailment applied to the damaged entity",
					"default": "0.0"
				},
				"effect_name": {
					"type": "String",
					"description": "Identifier of the status ailment to apply to an entity attacked by this entity's melee attack",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:attack": {
						"damage": 2,
						"effect_duration": 10,
						"effect_name": "poison"
					}
				},
				{ "minecraft:attack": { "damage": 3 } }
			],
			"type": "attribute",
			"usedIn": [
				"axolotl",
				"bee",
				"blaze",
				"cat",
				"cave_spider",
				"creeper",
				"dolphin",
				"drowned",
				"elder_guardian",
				"ender_crystal",
				"ender_dragon",
				"enderman",
				"endermite",
				"glow_squid",
				"fox",
				"goat",
				"guardian",
				"hoglin",
				"husk",
				"iron_golem",
				"magma_cube",
				"ocelot",
				"panda",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"ravager",
				"silverfish",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"vex",
				"vindicator",
				"wither skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:spell_effects": {
			"examples": [
				{
					"minecraft:spell_effects": {
						"add_effects": [
							{
								"effect": "regeneration",
								"duration": 25,
								"amplifier": 2,
								"visible": false,
								"display_on_screen_animation": true
							},
							{ "effect": "instant_health", "duration": 0.05 }
						],
						"remove_effects": ["poison", "wither"]
					}
				},
				{
					"minecraft:spell_effects": {
						"add_effects": [
							{ "effect": "strength", "duration": 100 },
							{ "effect": "heal", "duration": 100 }
						],
						"remove_effects": "weakness"
					}
				}
			],
			"usedIn": ["`player`", "`zombie_villager_v2`", "`zombie_villager`"]
		},
		"minecraft:strength": {
			"properties": {
				"max": {
					"type": "Integer",
					"description": "The maximum strength of this entity",
					"default": "5"
				},
				"value": {
					"type": "Integer",
					"description": "The initial value of the strength",
					"default": "1"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:strength": { "max": 9000, "value": 1 } },
				{ "minecraft:strength": { "value": 1, "max": 5 } }
			],
			"type": "attribute",
			"usedIn": ["llama"]
		},
		"minecraft:addrider": {
			"properties": {
				"entity_type": {
					"type": "String",
					"description": "The entity type that will be riding this entity.",
					"default": "_not set_"
				},
				"spawn_event": {
					"type": "String",
					"description": "The spawn event that will be used when the riding entity is created.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:addrider": {
						"spawn_event": "minecraft:spawn_as_illager",
						"entity_type": "minecraft:villager"
					}
				},
				{
					"minecraft:addrider": {
						"entity_type": "minecraft:skeleton"
					}
				}
			],
			"type": "component",
			"usedIn": ["cave_spider", "ravager", "spider", "strider"]
		},
		"minecraft:admire_item": {
			"properties": {
				"cooldown_after_being_attacked": {
					"type": "Integer",
					"description": "Duration, in seconds, for which mob won't admire items if it was hurt",
					"default": "0"
				},
				"duration": {
					"type": "Integer",
					"description": "Duration, in seconds, that the mob is pacified.",
					"default": "10"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:admire_item": {
						"cooldown_after_being_attacked": 5,
						"duration": 10
					}
				},
				{
					"minecraft:admire_item": {
						"duration": 8,
						"cooldown_after_being_attacked": 20
					}
				}
			],
			"type": "component",
			"usedIn": ["piglin"]
		},
		"minecraft:ageable": {
			"properties": {
				"drop_items": {
					"type": "List",
					"description": "List of items that the entity drops when it grows up.",
					"default": "_not set_"
				},
				"duration": {
					"type": "Decimal",
					"description": "Amount of time before the entity grows up, -1 for always a baby.",
					"default": "1200.0"
				},
				"feed_items": {
					"type": "List",
					"description": "List of items that can be fed to the entity. Includes 'item' for the item name and 'growth' to define how much time it grows up by",
					"default": "_not set_"
				},
				"grow_up": {
					"type": "JSON Object",
					"description": "Event to run when this entity grows up.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:ageable": {
						"drop_items": "fish",
						"duration": 1200,
						"feed_items": ["carrot", "wheat"],
						"grow_up": {
							"event": "minecraft:ageable_grow_up",
							"target": "self"
						}
					}
				},
				{
					"minecraft:ageable": {
						"duration": 1200,
						"feed_items": ["carrot", "beetroot", "potato"],
						"grow_up": {
							"event": "minecraft:ageable_grow_up",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": [
				"axolotl",
				"bat",
				"bee",
				"chicken",
				"cow",
				"dolphin",
				"donkey",
				"fox",
				"goat",
				"hoglin",
				"horse",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"polar_bear",
				"rabbit",
				"sheep",
				"skeleton_horse",
				"strider",
				"turtle",
				"villager_v2",
				"villager",
				"wolf",
				"zombie_horse"
			]
		},
		"minecraft:angry": {
			"properties": {
				"angry_sound": {
					"type": "String",
					"description": "The sound event to play when the mob is angry",
					"default": "_not set_"
				},
				"broadcast_anger": {
					"type": "Boolean",
					"description": "If true, other entities of the same entity definition within the broadcastRange will also become angry",
					"default": "false"
				},
				"broadcast_anger_on_attack": {
					"type": "Boolean",
					"description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob attacks",
					"default": "false"
				},
				"broadcast_anger_on_being_attacked": {
					"type": "Boolean",
					"description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob is attacked",
					"default": "false"
				},
				"[broadcast_filters](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "Conditions that make this entry in the list valid",
					"default": "_not set_"
				},
				"broadcast_range": {
					"type": "Integer",
					"description": "Distance in blocks within which other entities of the same entity definition will become angry",
					"default": "20"
				},
				"broadcast_targets": {
					"type": "List",
					"description": "A list of entity families to broadcast anger to",
					"default": ""
				},
				"duration": {
					"type": "Integer",
					"description": "The amount of time in seconds that the entity will be angry",
					"default": "25"
				},
				"duration_delta": {
					"type": "Integer",
					"description": "Variance in seconds added to the duration [-delta, delta]",
					"default": "0"
				},
				"[filters](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "Filter out mob types that it should not attack while angry (other Piglins)",
					"default": ""
				},
				"sound_interval": {
					"type": "Range [a, b]",
					"description": "The range of time in seconds to randomly wait before playing the sound again",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:angry": {
						"angry_sound": "bark",
						"broadcast_anger": false,
						"broadcast_anger_on_attack": true,
						"broadcast_range": 10,
						"duration": 100,
						"calm_event": {
							"event": "minecraft:on_calm",
							"target": "self"
						}
					}
				},
				{
					"minecraft:angry": {
						"duration": 10,
						"duration_delta": 3,
						"calm_event": {
							"event": "minecraft:become_calm",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": [
				"bee",
				"cave_spider",
				"dolphin",
				"enderman",
				"hoglin",
				"llama_spit",
				"llama",
				"panda",
				"piglin_brute",
				"piglin",
				"polar_bear",
				"silverfish",
				"spider",
				"vindicator",
				"wandering_trader",
				"wolf",
				"zombie_pigman"
			]
		},
		"minecraft:annotation.break_door": {
			"properties": {
				"break_time": {
					"type": "Decimal",
					"description": "The time in seconds required to break through doors.",
					"default": "12.0"
				},
				"min_difficulty": {
					"type": "String",
					"description": "The minimum difficulty that the world must be on for this entity to break doors.",
					"default": "hard"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:annotation.break_door": {
						"break_time": 12,
						"min_difficulty": "hard"
					}
				},
				{
					"minecraft:annotation.break_door": {
						"break_time": 30,
						"min_difficulty": "normal"
					}
				}
			],
			"type": "component",
			"usedIn": [
				"drowned",
				"husk",
				"vindicator",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:annotation.open_door": {
			"examples": [
				{ "minecraft:annotation.open_door": {} },
				{ "minecraft:annotation.open_door": {} }
			],
			"usedIn": ["piglin_brute", "piglin", "villager_v2", "villager"]
		},
		"minecraft:area_attack": {
			"properties": {
				"cause": {
					"type": "String",
					"description": "The type of damage that is applied to entities that enter the damage range.",
					"default": "_not set_"
				},
				"[entity_filter](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "The set of entities that are valid to apply the damage to when within range.",
					"default": "_not set_"
				},
				"damage_per_tick": {
					"type": "Integer",
					"description": "How much damage per tick is applied to entities that enter the damage range.",
					"default": "2"
				},
				"damage_range": {
					"type": "Decimal",
					"description": "How close a hostile entity must be to have the damage applied.",
					"default": "0.2"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:area_attack": {
						"damage_range": 0.2,
						"damage_per_tick": 2,
						"cause": "contact",
						"entity_filter": {
							"test": "is_family",
							"subject": "other",
							"value": "monster"
						}
					}
				},
				{
					"minecraft:area_attack": {
						"damage_range": 0.2,
						"damage_per_tick": 2,
						"cause": "contact",
						"entity_filter": {
							"any_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "monster"
								}
							]
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["area_effect_cloud", "pufferfish"]
		},
		"minecraft:attack_cooldown": {
			"properties": {
				"attack_cooldown_complete_event": {
					"type": "JSON Object",
					"description": "Event to be run when the cooldown is complete.",
					"default": "_not set_"
				},
				"attack_cooldown_time": {
					"type": "Range [a, b]",
					"description": "Amount of time in seconds for the cooldown. Can be specified as a number or a pair of numbers (min and max).",
					"default": "[0.0, 1.0]"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:attack_cooldown": {
						"attack_cooldown_complete_event": {
							"event": "attack_cooldown_complete_event",
							"target": "self"
						},
						"attack_cooldown_time": [0.1, 1]
					}
				},
				{
					"minecraft:attack_cooldown": {
						"attack_cooldown_time": [10, 15],
						"attack_cooldown_complete_event": {
							"event": "attack_cooldown_complete_event",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["axolotl", "goat", "hoglin", "piglin"]
		},
		"minecraft:barter": {
			"properties": {
				"barter_table": {
					"type": "String",
					"description": "Loot table that's used to drop a random item.",
					"default": "_not set_"
				},
				"cooldown_after_being_attacked": {
					"type": "Integer",
					"description": "Duration, in seconds, for which mob won't barter items if it was hurt",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:barter": {
						"barter_table": "loot_tables/entities/custom_villager_barter.json",
						"cooldown_after_being_attacked": 5
					}
				},
				{
					"minecraft:barter": {
						"barter_table": "loot_tables/entities/piglin_barter.json",
						"cooldown_after_being_attacked": 20
					}
				}
			],
			"type": "component",
			"usedIn": ["piglin"]
		},
		"minecraft:block_climber": {
			"examples": [{ "minecraft:block_climber": {} }, null],
			"usedIn": ["player"]
		},
		"minecraft:block_sensor": {
			"properties": {
				"on_break": {
					"type": "List",
					"description": "List of blocks to watch for being broken to fire off a specified event. If a block is in multiple lists, multiple events will fire.",
					"default": "_not set_"
				},
				"sensor_radius": {
					"type": "Decimal",
					"description": "The maximum radial distance in which a specified block can be detected. The biggest radius is 32.0.",
					"default": "16.0"
				},
				"sources": {
					"type": "List",
					"description": "List of sources that break the block to listen for. If none are specified, all block breaks will be detected.",
					"default": "[]"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:block_sensor": {
						"sensor_radius": 16,
						"on_break": [
							{
								"block_list": ["minecraft:gold_block"],
								"on_block_broken": "important_block_destroyed_event"
							}
						]
					}
				},
				{
					"minecraft:block_sensor": {
						"sensor_radius": 16,
						"on_break": [
							{
								"block_list": [
									"minecraft:gold_block",
									"minecraft:gilded_blackstone",
									"minecraft:nether_gold_ore",
									"minecraft:deepslate_gold_ore",
									"minecraft:raw_gold_block",
									"minecraft:gold_ore",
									"minecraft:chest",
									"minecraft:trapped_chest",
									"minecraft:ender_chest",
									"minecraft:barrel",
									"minecraft:shulker_box",
									"minecraft:undyed_shulker_box"
								],
								"on_block_broken": "important_block_destroyed_event"
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"block_list": {
						"type": "List",
						"description": "List of blocks that will trigger the senor.",
						"default": "_not set_"
					},
					"on_block_broken": {
						"type": "String",
						"description": "Event to run when a block breaks",
						"default": "_not set_"
					}
				}
			},
			"usedIn": ["bee", "piglin"]
		},
		"minecraft:boostable": {
			"properties": {
				"boost_items": {
					"type": "List",
					"description": "List of items that can be used to boost while riding this entity.",
					"default": "_not set_"
				},
				"duration": {
					"type": "Decimal",
					"description": "Time in seconds for the boost.",
					"default": "3.0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Factor by which the entity's normal speed increases. E.g. 2.0 means go twice as fast.",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:boostable": {
						"duration": 5,
						"speed_multiplier": 1.25,
						"boost_items": [
							{
								"item": "carrotOnAStick",
								"damage": 3,
								"replace_item": "fishing_rod"
							}
						]
					}
				},
				{
					"minecraft:boostable": {
						"speed_multiplier": 2,
						"duration": 3,
						"boost_items": [
							{
								"item": "carrotOnAStick",
								"damage": 2,
								"replace_item": "fishing_rod"
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"damage": {
						"type": "Integer",
						"description": "This is the damage that the item will take each time it is used.",
						"default": "1"
					},
					"item": {
						"type": "String",
						"description": "Name of the item that can be used to boost.",
						"default": "_not set_"
					},
					"replace_item": {
						"type": "String",
						"description": "The item used to boost will become this item once it is used up.",
						"default": "_not set_"
					}
				}
			},
			"usedIn": ["pig", "strider"]
		},
		"minecraft:boss": {
			"properties": {
				"hud_range": {
					"type": "Integer",
					"description": "The max distance from the boss at which the boss's health bar is present on the players screen.",
					"default": "55"
				},
				"name": {
					"type": "String",
					"description": "The name that will be displayed above the boss's health bar.",
					"default": "_not set_"
				},
				"should_darken_sky": {
					"type": "false",
					"description": "Whether the sky should darken in the presence of the boss.",
					"default": "Boolean"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:boss": {
						"hud_range": 55,
						"name": "Spooky Boss!",
						"should_darken_sky": true
					}
				},
				{
					"minecraft:boss": {
						"should_darken_sky": true,
						"hud_range": 55
					}
				}
			],
			"type": "component",
			"usedIn": ["ender_dragon", "wither"]
		},
		"minecraft:break_blocks": {
			"properties": {
				"breakable_blocks": {
					"type": "List",
					"description": "A list of the blocks that can be broken as this entity moves around",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:break_blocks": {
						"breakable_blocks": ["grass", "dirt"]
					}
				},
				{ "despawn_from_distance": {} }
			],
			"type": "component",
			"usedIn": ["ravager"]
		},
		"minecraft:breathable": {
			"properties": {
				"breathe_blocks": {
					"type": "List",
					"description": "List of blocks this entity can breathe in, in addition to the above.",
					"default": "_not set_"
				},
				"breathes_air": {
					"type": "Boolean",
					"description": "If true, this entity can breathe in air.",
					"default": "true"
				},
				"breathes_lava": {
					"type": "Boolean",
					"description": "If true, this entity can breathe in lava.",
					"default": "true"
				},
				"breathes_solids": {
					"type": "Boolean",
					"description": "If true, this entity can breathe in solid blocks.",
					"default": "false"
				},
				"breathes_water": {
					"type": "Boolean",
					"description": "If true, this entity can breathe in water.",
					"default": "false"
				},
				"generates_bubbles": {
					"type": "Boolean",
					"description": "If true, this entity will have visible bubbles while in water.",
					"default": "true"
				},
				"inhale_time": {
					"type": "Decimal",
					"description": "Time in seconds to recover breath to maximum.",
					"default": "0"
				},
				"non_breathe_blocks": {
					"type": "List",
					"description": "List of blocks this entity can't breathe in, in addition to the other \"breathes\" parameters.",
					"default": "_not set_"
				},
				"suffocate_time": {
					"type": "Integer",
					"description": "Time in seconds between suffocation damage.",
					"default": "-20"
				},
				"total_supply": {
					"type": "Integer",
					"description": "Time in seconds the entity can hold its breath.",
					"default": "15"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:breathable": {
						"breathes_air": true,
						"breathes_lava": false,
						"breathes_solids": false,
						"breathes_water": false,
						"generates_bubbles": true,
						"inhale_time": 0,
						"suffocate_time": -20,
						"total_supply": 15
					}
				},
				{
					"minecraft:breathable": {
						"total_supply": 240,
						"suffocate_time": 0,
						"breathes_air": true,
						"breathes_water": false,
						"generates_bubbles": false
					}
				},
				{
					"minecraft:breathable": {
						"total_supply": 15,
						"suffocate_time": 0,
						"breathes_air": true,
						"breathes_water": true
					}
				}
			],
			"type": "component",
			"usedIn": [
				"axolotl",
				"bat",
				"bee",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"enderman",
				"endermite",
				"evocation_illager",
				"fish",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"horse",
				"husk",
				"llama",
				"magma_cube",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"tropicalfish",
				"turtle",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:breedable": {
			"properties": {
				"allow_sitting": {
					"type": "Boolean",
					"description": "If true, entities can breed while sitting",
					"default": "false"
				},
				"blend_attributes": {
					"type": "Boolean",
					"description": "If true, the entities will blend their attributes in the offspring after they breed. For example, horses blend their health, movement, and jump_strength in their offspring.",
					"default": "true"
				},
				"breed_cooldown": {
					"type": "Decimal",
					"description": "Time in seconds before the Entity can breed again.",
					"default": "60"
				},
				"breed_items": {
					"type": "List",
					"description": "The list of items that can be used to get the entity into the 'love' state",
					"default": "_not set_"
				},
				"[breeds_with](#breeds_with)": {
					"type": "List",
					"description": "The list of entity definitions that this entity can breed with.",
					"default": "_not set_"
				},
				"causes_pregnancy": {
					"type": "Boolean",
					"description": "If true, the entity will become pregnant instead of spawning a baby.",
					"default": "false"
				},
				"[deny_parents_variant](#deny_parents_variant)": {
					"type": "JSON Object",
					"description": "Determines how likely the baby of parents with the same variant will deny that variant and take a random variant within the given range instead.",
					"default": "_not set_"
				},
				"[environment_requirements](#environment_requirements)": {
					"type": "List",
					"description": "The list of nearby block requirements to get the entity into the 'love' state.",
					"default": "_not set_"
				},
				"extra_baby_chance": {
					"type": "Decimal",
					"description": "Chance that up to 16 babies will spawn between 0.0 and 1.0, where 1.0 is 100%.",
					"default": "0"
				},
				"inherit_tamed": {
					"type": "Boolean",
					"description": "If true, the babies will be automatically tamed if its parents are",
					"default": "true"
				},
				"[love_filters](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "The filters to run when attempting to fall in love.",
					"default": "_not set_"
				},
				"[mutation_factor](#mutation_factor)": {
					"type": "JSON Object",
					"description": "Determines how likely the babies are to NOT inherit one of their parent's variances. Values are between 0.0 and 1.0, with a higher number meaning more likely to mutate.",
					"default": "_not set_"
				},
				"require_full_health": {
					"type": "Boolean",
					"description": "If true, the entity needs to be at full health before it can breed.",
					"default": "false"
				},
				"require_tame": {
					"type": "Boolean",
					"description": "If true, the entities need to be tamed first before they can breed.",
					"default": "true"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:breedable": {
						"allow_sitting": false,
						"blend_attributes": false,
						"breed_cooldown": false,
						"breed_items": ["carrot", "bamboo"],
						"breeds_with": {
							"mate_type": "minecraft:panda",
							"baby_type": "minecraft:panda",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						},
						"deny_parents_variant": {
							"chance": 0.00098,
							"min_variant": 0,
							"max_variant": 1
						},
						"environment_requirements": {
							"blocks": "grass",
							"count": 10,
							"radius": 10
						},
						"causes_pregnancy": false,
						"extra_baby_chance": 0,
						"inherit_tamed": true,
						"love_filters": {
							"test": "has_damage",
							"subject": "self",
							"operator": "=",
							"value": false
						},
						"mutation_factor": {
							"color": 0.25,
							"extra_variant": 0.35,
							"variant": 0.5
						},
						"require_full_health": false,
						"require_tame": true
					}
				},
				{
					"minecraft:breedable": {
						"require_tame": true,
						"inherit_tamed": false,
						"breeds_with": [
							{
								"mate_type": "minecraft:horse",
								"baby_type": "minecraft:horse",
								"breed_event": {
									"event": "minecraft:entity_born",
									"target": "baby"
								}
							},
							{
								"mate_type": "minecraft:donkey",
								"baby_type": "minecraft:mule",
								"breed_event": {
									"event": "minecraft:entity_born",
									"target": "baby"
								}
							}
						],
						"breed_items": [
							"golden_carrot",
							"golden_apple",
							"appleEnchanted"
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"color": {
						"type": "Decimal",
						"description": "The percentage chance of a mutation on the entity's color.",
						"default": "0"
					},
					"extra_variant": {
						"type": "Decimal",
						"description": "The percentage chance of a mutation on the entity's extra variant type.",
						"default": "0"
					},
					"variant": {
						"type": "Decimal",
						"description": "The percentage chance of a mutation on the entity's variant type.",
						"default": "0"
					}
				}
			},
			"usedIn": [
				"axolotl",
				"bee",
				"cat",
				"chicken",
				"cow",
				"donkey",
				"fox",
				"goat",
				"hoglin",
				"horse",
				"llama",
				"mooshroom",
				"ocelot",
				"panda",
				"pig",
				"rabbit",
				"sheep",
				"strider",
				"turtle",
				"wolf"
			]
		},
		"minecraft:bribeable": {
			"properties": {
				"bribe_cooldown": {
					"type": "Decimal",
					"description": "Time in seconds before the Entity can be bribed again.",
					"default": "2.0"
				},
				"bribe_items": {
					"type": "List",
					"description": "The list of items that can be used to bribe the entity.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:bribeable": {
						"bribe_cooldown": 2,
						"bribe_items": "stick"
					}
				},
				{ "minecraft:bribeable": { "bribe_items": ["fish", "salmon"] } }
			],
			"type": "component",
			"usedIn": ["dolphin"]
		},
		"minecraft:buoyant": {
			"properties": {
				"apply_gravity": {
					"type": "Boolean",
					"description": "Applies gravity each tick. Causes more of a wave simulation, but will cause more gravity to be applied outside liquids.",
					"default": "true"
				},
				"base_buoyancy": {
					"type": "Decimal",
					"description": "Base buoyancy used to calculate how much will a mob float.",
					"default": "1.0"
				},
				"big_wave_probability": {
					"type": "Decimal",
					"description": "Probability for a big wave hitting the entity. Only used if `simulate_waves` is true.",
					"default": "0.03"
				},
				"big_wave_speed": {
					"type": "Decimal",
					"description": "Multiplier for the speed to make a big wave. Triggered depending on `big_wave_probability`.",
					"default": "10.0"
				},
				"drag_down_on_buoyancy_removed": {
					"type": "Decimal",
					"description": "How much an actor will be dragged down when the Buoyancy Component is removed.",
					"default": "0.0"
				},
				"liquid_blocks": {
					"type": "List",
					"description": "List of blocks this entity can float on. **Must be a liquid block.**",
					"default": "_not set_"
				},
				"simulate_waves": {
					"type": "Boolean",
					"description": "Should the movement simulate waves going through.",
					"default": "true"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:buoyant": {
						"apply_gravity": true,
						"base_buoyancy": 1,
						"simulate_waves": true,
						"big_wave_probability": 0.03,
						"big_wave_speed": 10,
						"drag_down_on_buoyancy_removed": 0,
						"liquid_blocks": [
							"minecraft:water",
							"minecraft:flowing_water"
						]
					}
				},
				{
					"minecraft:buoyant": {
						"base_buoyancy": 1,
						"apply_gravity": true,
						"simulate_waves": true,
						"big_wave_probability": 0.03,
						"big_wave_speed": 10,
						"liquid_blocks": [
							"minecraft:water",
							"minecraft:flowing_water"
						]
					}
				}
			],
			"type": "component",
			"usedIn": ["boat", "xp_orb"]
		},
		"minecraft:burns_in_daylight": {
			"examples": [
				{ "minecraft:burns_in_daylight": {} },
				{ "minecraft:burns_in_daylight": {} }
			],
			"usedIn": [
				"drowned",
				"magma_cube",
				"phantom",
				"skeleton",
				"stray",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:celebrate_hunt": {
			"properties": {
				"broadcast": {
					"type": "Boolean",
					"description": "If true, celebration will be broadcasted to other entities in the radius.",
					"default": "true"
				},
				"[celeberation_targets](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "The list of conditions that target of hunt must satisfy to initiate celebration.",
					"default": "_not set_"
				},
				"celebrate_sound": {
					"type": "String",
					"description": "The sound event to play when the mob is celebrating",
					"default": "_not set_"
				},
				"duration": {
					"type": "Integer",
					"description": "Duration, in seconds, of celebration",
					"default": "4"
				},
				"radius": {
					"type": "Decimal",
					"description": "If broadcast is enabled, specifies the radius in which it will notify other entities for celebration.",
					"default": "16"
				},
				"sound_interval": {
					"type": "Range [a, b]",
					"description": "The range of time in seconds to randomly wait before playing the sound again",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:celebrate_hunt": {
						"broadcast": true,
						"celebration_targets": {
							"all_of": [{ "test": "is_family", "value": "cow" }]
						},
						"celebrate_sound": "celebrate",
						"duration": 4,
						"radius": 16,
						"sound_interval": { "range_min": 1, "range_max": 5 }
					}
				},
				{
					"minecraft:celebrate_hunt": {
						"celebration_targets": {
							"all_of": [
								{ "test": "is_family", "value": "hoglin" }
							]
						},
						"broadcast": true,
						"duration": 10,
						"celebrate_sound": "celebrate",
						"sound_interval": { "range_min": 2, "range_max": 5 },
						"radius": 16
					}
				}
			],
			"type": "component",
			"usedIn": ["piglin"]
		},
		"minecraft:combat_regeneration": {
			"properties": {
				"regeneration_duration": {
					"type": "Integer",
					"description": "The duration in seconds that the mob will gain Regeneration I.",
					"default": "5"
				},
				"apply_to_self": {
					"type": "Boolean",
					"description": "Whether the mob will grant itself Combat Regeneration if it kills the target.",
					"default": "False"
				},
				"apply_to_family": {
					"type": "Boolean",
					"description": "Whether the mob will grant mobs of the same type Combat Regeneration if they kill the target.",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:combat_regeneration": {
						"regeneration_duration": 7,
						"apply_to_self": true,
						"apply_to_family": false
					}
				}
			],
			"type": "component"
		},
		"minecraft:conditional_bandwidth_optimization": {
			"properties": {
				"conditional_values": {
					"type": "List",
					"description": "The object containing the conditional bandwidth optimization values.",
					"default": "_not set_"
				},
				"default_values": {
					"type": "JSON Object",
					"description": "The object containing the default bandwidth optimization values.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:conditional_bandwidth_optimization": {
						"conditional_values": {
							"max_dropped_ticks": 20,
							"max_optimized_distance": 200,
							"use_motion_prediction_hints": false
						},
						"default_values": {
							"max_dropped_ticks": 10,
							"max_optimized_distance": 100,
							"use_motion_prediction_hints": false
						}
					}
				},
				{
					"minecraft:conditional_bandwidth_optimization": {
						"default_values": {
							"max_optimized_distance": 80,
							"max_dropped_ticks": 10,
							"use_motion_prediction_hints": true
						}
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"max_dropped_ticks": {
						"type": "Integer",
						"description": "In relation to the optimization value, determines the maximum ticks spatial update packets can be not sent.",
						"default": "_not set_"
					},
					"max_optimized_distance": {
						"type": "Integer",
						"description": "The maximum distance considered during bandwidth optimizations. Any value below the max is interpolated to find optimization, and any value greater than or equal to this max results in max optimization.",
						"default": "_not set_"
					},
					"use_motion_prediction_hints": {
						"type": "Boolean",
						"description": "When set to true, smaller motion packets will be sent during drop packet intervals, resulting in the same amount of packets being sent as without optimizations but with much less data being sent. This should be used when actors are travelling very quickly or teleporting to prevent visual oddities.",
						"default": "false"
					}
				}
			},
			"usedIn": [
				"area_effect_cloud",
				"armor_stand",
				"arrow",
				"bat",
				"bee",
				"blaze",
				"boat",
				"cat",
				"cave_spider",
				"chest_minecart",
				"chicken",
				"command_block_minecart",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"dragon_fireball",
				"drowned",
				"egg",
				"elder_guardian",
				"ender_crystal",
				"ender_dragon",
				"ender_pearl",
				"enderman",
				"endermite",
				"evocation_illager",
				"eye_of_ender_signal",
				"fireball",
				"fireworks_rocket",
				"fish",
				"fishing_hook",
				"fox",
				"ghast",
				"guardian",
				"hoglin",
				"hopper_minecart",
				"horse",
				"husk",
				"iron_golem",
				"lightning_bolt",
				"lingering_potion",
				"llama_spit",
				"llama",
				"magma_cube",
				"minecart",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker_bullet",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"small_fireball",
				"snow_golem",
				"snowball",
				"spider",
				"splash_potion",
				"squid",
				"stray",
				"strider",
				"thrown_trident",
				"tnt_minecart",
				"tnt",
				"tripod_camera",
				"tropicalfish",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither_skull_dangerous",
				"wither_skull",
				"wither",
				"wolf",
				"xp_bottle",
				"xp_orb",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:custom_hit_test": {
			"properties": {
				"hitboxes": {
					"type": "Array",
					"description": "Comma-separated array of hitboxes.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:custom_hit_test": {
						"hitboxes": [
							{ "width": 1, "height": 1, "pivot": [0, 0, 0] }
						]
					}
				},
				{
					"minecraft:custom_hit_test": {
						"hitboxes": [
							{ "width": 1, "height": 0.85, "pivot": [0, 0.5, 0] }
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"height": {
						"type": "Decimal",
						"description": "Height of the hitbox in blocks. A negative value will be assumed to be 0.",
						"default": "_not set_"
					},
					"width": {
						"type": "Decimal",
						"description": "Width and Depth of the hitbox in blocks. A negative value will be assumed to be 0.",
						"default": "_not set_"
					},
					"pivot": {
						"type": "Vector [a,b,c]",
						"description": "The offset from the entity's anchor where the hitbox will spawn",
						"default": "_not set_"
					}
				}
			},
			"usedIn": ["hoglin", "zoglin"]
		},
		"minecraft:damage_over_time": {
			"properties": {
				"damage_per_hurt": {
					"type": "Integer",
					"description": "Amount of damage caused each hurt.",
					"default": "1"
				},
				"time_between_hurt": {
					"type": "Decimal",
					"description": "Time in seconds between damage.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:damage_over_time": {
						"damage_per_hurt": 1,
						"time_between_hurt": 0
					}
				},
				{
					"minecraft:damage_over_time": {
						"damage_per_hurt": 1,
						"time_between_hurt": 0
					}
				}
			],
			"type": "component",
			"usedIn": ["axolotl", "dolphin"]
		},
		"minecraft:damage_sensor": {
			"properties": {
				"List": {
					"type": "",
					"description": "List of triggers with the events to call when taking specific kinds of damage.",
					"default": "triggers"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:damage_sensor": {
						"triggers": {
							"on_damage": {
								"filters": {
									"test": "has_damage",
									"value": "fire"
								},
								"event": "minecraft:stop_drop_roll",
								"target": "self"
							}
						}
					}
				},
				{
					"minecraft:damage_sensor": {
						"triggers": {
							"cause": "fall",
							"deals_damage": true,
							"damage_modifier": -20
						}
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"[filters](../FilterList.md)": {
						"type": "Minecraft Filter",
						"description": "Filters to use to define specific tests",
						"default": "_not set_"
					},
					"event": {
						"type": "String",
						"description": "Defines what event to run",
						"default": "_not set_"
					}
				}
			},
			"usedIn": [
				"axolotl",
				"bat",
				"bee",
				"blaze",
				"cat",
				"chicken",
				"creeper",
				"ender_dragon",
				"fox",
				"ghast",
				"goat",
				"iron_golem",
				"llama",
				"magma_cube",
				"mooshroom",
				"npc",
				"ocelot",
				"parrot",
				"pig",
				"pillager",
				"skeleton_horse",
				"skeleton",
				"snow_golem",
				"turtle",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"wither"
			]
		},
		"minecraft:despawn": {
			"properties": {
				"despawn_from_distance": {
					"type": "JSON Object",
					"description": "Specifies if the \"min_distance\" and \"max_distance\" are used in the standard despawn rules.",
					"default": "_not set_"
				},
				"despawn_from_chance": {
					"type": "Boolean",
					"description": "Determines if \"min_range_random_chance\" is used in the standard despawn rules.",
					"default": "true"
				},
				"despawn_from_inactivity": {
					"type": "Boolean",
					"description": "Determines if the \"min_range_inactivity_timer\" is used in the standard despawn rules.",
					"default": "true"
				},
				"despawn_from_simulation_edge": {
					"type": "Boolean",
					"description": "Determines if the mob is instantly despawned at the edge of simulation distance in the standard despawn rules.",
					"default": "true"
				},
				"[filters](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "The list of conditions that must be satisfied before the Actor is despawned. If a filter is defined then standard despawn rules are ignored.",
					"default": "_not set_"
				},
				"min_range_inactivity_timer": {
					"type": "Integer",
					"description": "The amount of time in seconds that the mob must be inactive.",
					"default": "30"
				},
				"min_range_random_chance": {
					"type": "Integer",
					"description": "A random chance between 1 and the given value.",
					"default": "800"
				},
				"remove_child_entities": {
					"type": "Boolean",
					"description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned.",
					"default": "false"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:despawn": {
						"despawn_from_distance": {
							"max_distance": 128,
							"min_distance": 32
						},
						"despawn_from_chance": false,
						"despawn_from_inactivity": false,
						"despawn_from_simulation_edge": true,
						"min_range_inactivity_timer": 30,
						"min_range_random_chance": 800,
						"remove_child_entities": false,
						"filters": { "test": "has_damage", "target": "self" }
					}
				},
				{
					"minecraft:despawn": {
						"filters": {
							"any_of": [
								{
									"all_of": [
										{
											"test": "is_persistent",
											"value": false
										},
										{
											"test": "distance_to_nearest_player",
											"operator": ">",
											"value": 54
										}
									]
								},
								{
									"all_of": [
										{
											"test": "is_persistent",
											"value": false
										},
										{
											"test": "inactivity_timer",
											"subject": "self",
											"value": 30
										},
										{
											"test": "random_chance",
											"value": 800
										},
										{
											"test": "distance_to_nearest_player",
											"operator": ">",
											"value": 32
										}
									]
								}
							]
						}
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"max_distance": {
						"type": "Integer",
						"description": "Maximum distance for standard despawn rules to instantly despawn the mob.",
						"default": "128"
					},
					"min_distance": {
						"type": "Integer",
						"description": "Minimum distance for standard despawn rules to try to despawn the mob.",
						"default": "32"
					}
				}
			},
			"usedIn": [
				"axolotl",
				"bat",
				"blaze",
				"cat",
				"cave_spider",
				"chest_minecart",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"enderman",
				"endermite",
				"fish",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"horse",
				"husk",
				"llama",
				"magma_cube",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"spider",
				"squid",
				"stray",
				"strider",
				"tropicalfish",
				"turtle",
				"vex",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:drying_out_timer": {
			"properties": {
				"total_time": {
					"type": "Decimal",
					"description": "Amount of time in seconds to dry out fully.",
					"default": "0.0"
				},
				"dried_out_event": {
					"type": "JSON Object",
					"description": "Event to fire when the drying out time runs out.",
					"default": "_not set_"
				},
				"recover_after_dried_out_event": {
					"type": "String",
					"description": "Event to fire when entity was already dried out but received increase in water supply.",
					"default": "_not set_"
				},
				"stopped_drying_out_event": {
					"type": "String",
					"description": "Event to fire when entity stopped drying out, for example got into water or under rain.",
					"default": "_not set_"
				},
				"water_bottle_refill_time": {
					"type": "Decimal",
					"description": "Optional amount of additional time in seconds given by using splash water bottle on entity.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:drying_out_timer": {
						"total_time": 200,
						"dried_out_event": { "event": "towel_off" },
						"recover_drying_out_event": {
							"event": "recover_after_dried_out"
						},
						"stopped_drying_out_event": {
							"event": "fell_into_water"
						},
						"water_bottle_refill_time": 100
					}
				},
				{
					"minecraft:drying_out_timer": {
						"total_time": 300,
						"water_bottle_refill_time": 90,
						"dried_out_event": { "event": "dried_out" },
						"stopped_drying_out_event": {
							"event": "stop_drying_out"
						},
						"recover_after_dried_out_event": {
							"event": "recover_after_dried_out"
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["axolotl", "dolphin"]
		},
		"minecraft:economy_trade_table": {
			"properties": {
				"convert_trades_economy": {
					"type": "Boolean",
					"description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1.",
					"default": "False"
				},
				"cured_discount": {
					"type": "Range [a, b]",
					"description": "How much should the discount be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (low-tier trade discount and high-tier trade discount)",
					"default": "[-5, -20]"
				},
				"display_name": {
					"type": "String",
					"description": "Name to be displayed while trading with this entity",
					"default": "_not set_"
				},
				"hero_demand_discount": {
					"type": "Integer",
					"description": "Used in legacy prices to determine how much should Demand be modified by when the player has the `Hero of the Village` mob effect",
					"default": "-4"
				},
				"max_cured_discount": {
					"type": "Range [a, b]",
					"description": "The max the discount can be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (low-tier trade discount and high-tier trade discount)",
					"default": "[-25, -63]"
				},
				"max_nearby_cured_discount": {
					"type": "Integer",
					"description": "The max the discount can be modified by when the player has cured a nearby Zombie Villager",
					"default": "-200"
				},
				"nearby_cured_discount": {
					"type": "Integer",
					"description": "How much should the discount be modified by when the player has cured a nearby Zombie Villager",
					"default": "-25"
				},
				"new_screen": {
					"type": "Boolean",
					"description": "Used to determine if trading with entity opens the new trade screen",
					"default": "False"
				},
				"persist_trades": {
					"type": "Boolean",
					"description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades.",
					"default": "False"
				},
				"show_trade_screen": {
					"type": "Boolean",
					"description": "Show an in game trade screen when interacting with the mob.",
					"default": "True"
				},
				"table": {
					"type": "String",
					"description": "File path relative to the resource pack root for this entity's trades",
					"default": "_not set_"
				},
				"use_legacy_price_formula": {
					"type": "Boolean",
					"description": "Determines whether the legacy formula is used to determines the trade prices.",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:economy_trade_table": {
						"convert_trades_economy": false,
						"cured_discount": [-5, -20],
						"display_name": "Got something that might interest you",
						"hero_demand_discount": -4,
						"max_cured_discount": [-25, -63],
						"max_nearby_cured_discount": -200,
						"nearby_cured_discount": -25,
						"new_screen": false,
						"persist_trades": false,
						"show_trade_screen": true,
						"table": "trading/economy_trades/farmer_trades.json",
						"use_legacy_price_formula": false
					}
				},
				{
					"minecraft:economy_trade_table": {
						"display_name": "entity.wandering_trader.name",
						"table": "trading/economy_trades/wandering_trader_trades.json",
						"new_screen": true
					}
				}
			],
			"type": "component",
			"usedIn": ["villager_v2", "wandering_trader"]
		},
		"minecraft:entity_sensor": {
			"properties": {
				"[event_filters](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "The set of conditions that must be satisfied to fire the event.",
					"default": "_not set_"
				},
				"event": {
					"type": "String",
					"description": "Event to fire when the conditions are met.",
					"default": "_not set_"
				},
				"maximum_count": {
					"type": "Integer",
					"description": "The maximum number of entities that must pass the filter conditions for the event to send.",
					"default": "-1"
				},
				"minimum_count": {
					"type": "Integer",
					"description": "The minimum number of entities that must pass the filter conditions for the event to send.",
					"default": "1"
				},
				"relative_range": {
					"type": "Boolean",
					"description": "If true the sensor range is additive on top of the entity's size.",
					"default": "True"
				},
				"require_all": {
					"type": "Boolean",
					"description": "If true requires all nearby entities to pass the filter conditions for the event to send.",
					"default": "False"
				},
				"sensor_range": {
					"type": "Decimal",
					"description": "The maximum distance another entity can be from this and have the filters checked against it.",
					"default": "10"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:entity_sensor": {
						"maximum_count": -1,
						"minimum_count": 1,
						"relative_range": true,
						"require_all": false,
						"sensor_range": 10,
						"event_filters": { "test": "has_trade_supply" },
						"event": "minecraft:offer_trade"
					}
				},
				{
					"minecraft:entity_sensor": {
						"sensor_range": 2.5,
						"relative_range": false,
						"minimum_count": 1,
						"event_filters": {
							"any_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "mob"
								},
								{
									"all_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"none_of": {
												"test": "has_ability",
												"subject": "other",
												"value": "instabuild"
											}
										}
									]
								}
							]
						},
						"event": "minecraft:start_half_puff"
					}
				}
			],
			"type": "component",
			"usedIn": ["pufferfish"]
		},
		"minecraft:environment_sensor": {
			"properties": {
				"triggers": {
					"type": "List",
					"description": "The list of triggers that fire when the environment conditions match the given filter criteria.",
					"default": "_not set_"
				},
				"event": {
					"type": "string",
					"description": "The event to run when the conditions for this trigger are met.",
					"default": "_not set_"
				},
				"filters": {
					"type": "List / Filter",
					"description": "The list of conditions for this trigger to execute.",
					"default": "_not set_"
				},
				"target": {
					"type": "string",
					"description": "The target of the event.",
					"default": "self"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:environment_sensor": {
						"triggers": [
							{
								"filters": {
									"all_of": [
										{ "test": "is_daytime", "value": true },
										{
											"test": "has_target",
											"operator": "==",
											"value": false
										}
									]
								},
								"event": "minecraft:fox_configure_docile_day"
							}
						]
					}
				},
				{
					"minecraft:environment_sensor": {
						"triggers": [
							{
								"filters": {
									"all_of": [
										{ "test": "is_daytime", "value": true },
										{
											"test": "has_target",
											"operator": "==",
											"value": false
										}
									]
								},
								"event": "minecraft:fox_configure_docile_day"
							},
							{
								"filters": {
									"all_of": [
										{
											"test": "is_daytime",
											"value": false
										},
										{
											"test": "has_target",
											"operator": "==",
											"value": false
										}
									]
								},
								"event": "minecraft:fox_configure_docile_night"
							}
						]
					}
				}
			],
			"type": "component",
			"usedIn": [
				"axolotl",
				"bee",
				"cave_spider",
				"dolphin",
				"fox",
				"hoglin",
				"husk",
				"llama",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"skeleton",
				"spider",
				"stray",
				"strider",
				"zombie"
			]
		},
		"minecraft:equippable": {
			"properties": {
				"slots": {
					"type": "List",
					"description": "List of slots and the item that can be equipped.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:equippable": {
						"slots": [
							{
								"slot": 0,
								"item": "saddle",
								"accepted_items": ["saddle"],
								"on_equip": {
									"event": "minecraft:horse_saddled"
								},
								"on_unequip": {
									"event": "minecraft:horse_unsaddled"
								}
							}
						]
					}
				},
				{
					"minecraft:equippable": {
						"slots": [
							{
								"slot": 0,
								"item": "saddle",
								"accepted_items": ["saddle"],
								"on_equip": {
									"event": "minecraft:horse_saddled"
								},
								"on_unequip": {
									"event": "minecraft:horse_unsaddled"
								}
							},
							{
								"slot": 1,
								"item": "horsearmoriron",
								"accepted_items": [
									"horsearmorleather",
									"horsearmoriron",
									"horsearmorgold",
									"horsearmordiamond"
								]
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"accepted_items": {
						"type": "List",
						"description": "The list of items that can go in this slot.",
						"default": "_not set_"
					},
					"interact_text": {
						"type": "String",
						"description": "Text to be displayed when the entity can be equipped with this item when playing with Touch-screen controls.",
						"default": "_not set_"
					},
					"item": {
						"type": "String",
						"description": "Identifier of the item that can be equipped for this slot.",
						"default": "_not set_"
					},
					"on_equip": {
						"type": "JSON Object",
						"description": "Event to trigger when this entity is equipped with this item.",
						"default": "_not set_"
					},
					"on_unequip": {
						"type": "JSON Object",
						"description": "Event to trigger when this item is removed from this entity.",
						"default": "_not set_"
					},
					"slot": {
						"type": "Integer",
						"description": "The slot number of this slot.",
						"default": "0"
					}
				}
			},
			"usedIn": ["donkey", "horse", "llama", "mule"]
		},
		"minecraft:equip_item": {
			"examples": [
				{ "minecraft:equip_item": {} },
				{ "minecraft:equip_item": {} }
			],
			"usedIn": [
				"drowned",
				"fox",
				"husk",
				"piglin",
				"pillager",
				"skeleton",
				"stray",
				"wither_skeleton",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:exhaustion_values": {
			"properties": { "undefined": { "default": "0.01" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:exhaustion_values": {
						"heal": 3,
						"jump": 0.2,
						"sprint_jump": 0.8,
						"mine": 0.025,
						"attack": 0.3,
						"damage": 0.1,
						"walk": 0.01,
						"sprint": 0.01,
						"swim": 0.015
					}
				},
				{
					"minecraft:exhaustion_values": {
						"heal": 6,
						"jump": 0.05,
						"sprint_jump": 0.2,
						"mine": 0.005,
						"attack": 0.1,
						"damage": 0.1,
						"walk": 0,
						"sprint": 0.01,
						"swim": 0.01
					}
				}
			],
			"type": "component",
			"usedIn": ["player"]
		},
		"minecraft:experience_reward": {
			"properties": {
				"on_bred": {
					"type": "Molang",
					"description": "A Molang expression defining the amount of experience rewarded when this entity is successfully bred. An array of expressions adds each expression's result together for a final total.",
					"default": "0"
				},
				"on_death": {
					"type": "Molang",
					"description": "A Molang expression defining the amount of experience rewarded when this entity dies. An array of expressions adds each expression's result together for a final total.",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:experience_reward": {
						"on_bred": 0,
						"on_death": 0
					}
				},
				{
					"minecraft:experience_reward": {
						"on_bred": "Math.Random(1,7)",
						"on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
					}
				}
			],
			"type": "component",
			"usedIn": [
				"axolotl",
				"bee",
				"blaze",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"enderman",
				"endermite",
				"evocation_illager",
				"fish",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"horse",
				"husk",
				"llama",
				"magma_cube",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"spider",
				"squid",
				"stray",
				"strider",
				"tropicalfish",
				"turtle",
				"vex",
				"vindicator",
				"witch",
				"wither_skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:explode": {
			"properties": {
				"breaks_blocks": {
					"type": "Boolean",
					"description": "If true, the explosion will destroy blocks in the explosion radius.",
					"default": "True"
				},
				"causes_fire": {
					"type": "Boolean",
					"description": "If true, blocks in the explosion radius will be set on fire.",
					"default": "False"
				},
				"destroy_affected_by_griefing": {
					"type": "Boolean",
					"description": "If true, whether the explosion breaks blocks is affected by the mob griefing game rule.",
					"default": "False"
				},
				"fire_affected_by_griefing": {
					"type": "Boolean",
					"description": "If true, whether the explosion causes fire is affected by the mob griefing game rule.",
					"default": "False"
				},
				"fuse_length": {
					"type": "Range [a, b]",
					"description": "The range for the random amount of time the fuse will be lit before exploding, a negative value means the explosion will be immediate.",
					"default": "[0.0, 0.0]"
				},
				"fuse_lit": {
					"type": "Boolean",
					"description": "If true, the fuse is already lit when this component is added to the entity.",
					"default": "False"
				},
				"max_resistance": {
					"type": "Decimal",
					"description": "A blocks explosion resistance will be capped at this value when an explosion occurs.",
					"default": "3.40282e+38"
				},
				"power": {
					"type": "Decimal",
					"description": "The radius of the explosion in blocks and the amount of damage the explosion deals.",
					"default": "3"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:explode": {
						"breaks_blocks": true,
						"causes_fire": false,
						"destroy_affected_by_griefing": false,
						"fire_affected_by_griefing": false,
						"fuse_length": [0, 0],
						"fuse_lit": false,
						"max_resistance": 3.40282e38,
						"power": 3
					}
				},
				{
					"minecraft:explode": {
						"fuse_length": 4,
						"fuse_lit": true,
						"power": 4,
						"causes_fire": false
					}
				}
			],
			"type": "component",
			"usedIn": [
				"creeper",
				"ender_crystal",
				"fireball",
				"tnt_minecart",
				"tnt",
				"wither_skull_dangerous",
				"wither_skull"
			]
		},
		"minecraft:flocking": {
			"properties": {
				"block_distance": {
					"type": "Decimal",
					"description": "The distance in blocks that the entity will look at and move from.",
					"default": "0"
				},
				"block_weight": {
					"type": "Decimal",
					"description": "The weight of the push back away from blocks.",
					"default": "0"
				},
				"breach_influence": {
					"type": "Decimal",
					"description": "The amount of push back given to a flocker that breaches out of the water.",
					"default": "0"
				},
				"cohesion_threshold": {
					"type": "Decimal",
					"description": "The threshold in which to start applying cohesion.",
					"default": "1"
				},
				"cohesion_weight": {
					"type": "Decimal",
					"description": "The weight applied for the cohesion steering of the flock.",
					"default": "1"
				},
				"goal_weight": {
					"type": "Decimal",
					"description": "The weight on which to apply on the goal output.",
					"default": "0"
				},
				"high_flock_limit": {
					"type": "Integer",
					"description": "Determines the high bound amount of entities that can be allowed in the flock.",
					"default": "0"
				},
				"in_water": {
					"type": "Boolean",
					"description": "Tells the Flocking Component if the entity exists in water.",
					"default": "False"
				},
				"influence_radius": {
					"type": "Decimal",
					"description": "The area around the entity that allows others to be added to the flock.",
					"default": "0"
				},
				"innner_cohesion_threshold": {
					"type": "Decimal",
					"description": "The distance in which the flocker will stop applying cohesion.",
					"default": "0"
				},
				"loner_chance": {
					"type": "Decimal",
					"description": "The percentage chance between 0-1 that a fish will spawn and not want to join flocks. Invalid values will be capped at the end points.",
					"default": "0"
				},
				"low_flock_limit": {
					"type": "Integer",
					"description": "Determines the low bound amount of entities that can be allowed in the flock.",
					"default": "0"
				},
				"match_variants": {
					"type": "Boolean",
					"description": "Tells the flockers that they can only match similar entities that also match the variant, mark variants, and color data of the other potential flockers.",
					"default": "False"
				},
				"max_height": {
					"type": "Decimal",
					"description": "The max height allowable in the air or water.",
					"default": "0"
				},
				"min_height": {
					"type": "Decimal",
					"description": "The min height allowable in the air or water.",
					"default": "0"
				},
				"separation_threshold": {
					"type": "Decimal",
					"description": "The distance that is determined to be to close to another flocking and to start applying separation.",
					"default": "2"
				},
				"separation_weight": {
					"type": "Decimal",
					"description": "The weight applied to the separation of the flock.",
					"default": "1"
				},
				"use_center_of_mass": {
					"type": "Boolean",
					"description": "Tells the flockers that they will follow flocks based on the center of mass.",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:flocking": {
						"block_distance": 0,
						"block_weight": 0,
						"breach_influence": 0,
						"cohesion_threshold": 1,
						"cohesion_weight": 0,
						"goal_weight": 0,
						"high_flock_limit": 0,
						"in_water": false,
						"influence_radius": 0,
						"innner_cohesion_threshold": 0,
						"loner_chance": 0,
						"low_flock_limit": 0,
						"match_variants": false,
						"max_height": 0,
						"min_height": 0,
						"separation_threshold": 2,
						"separation_weight": 2,
						"use_center_of_mass": false
					}
				},
				{
					"minecraft:flocking": {
						"in_water": true,
						"match_variants": false,
						"use_center_of_mass": true,
						"low_flock_limit": 4,
						"high_flock_limit": 8,
						"goal_weight": 2,
						"loner_chance": 0.1,
						"influence_radius": 3,
						"breach_influence": 7,
						"separation_weight": 1.75,
						"separation_threshold": 0.95,
						"cohesion_weight": 2,
						"cohesion_threshold": 1.95,
						"innner_cohesion_threshold": 1.25,
						"min_height": 1.5,
						"max_height": 6,
						"block_distance": 2,
						"block_weight": 0.85
					}
				}
			],
			"type": "component",
			"usedIn": [
				"dolphin",
				"fish",
				"pufferfish",
				"salmon",
				"tropicalfish"
			]
		},
		"minecraft:genetics": {
			"properties": {
				"genes": {
					"type": "List",
					"description": "The list of genes that this entity has and will cross with a partner during breeding.",
					"default": "_not set_"
				},
				"mutation_rate": {
					"type": "Decimal",
					"description": "Chance that an allele will be replaced with a random one instead of the parent's allele during birth.",
					"default": "0.03125"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:genetics": {
						"genes": [
							{
								"allele_range": {
									"range_max": 0,
									"range_min": 0
								},
								"genetic_variants": [
									{
										"birth_event": {
											"event": "minecraft:born_screamer",
											"target": "self"
										},
										"main_allele": {
											"range_min": 1,
											"range_max": 2
										}
									}
								],
								"name": "gene"
							}
						],
						"mutation_rate": 0.03125
					}
				},
				{
					"minecraft:genetics": {
						"mutation_rate": 0.03125,
						"genes": [
							{
								"name": "panda_variant",
								"allele_range": {
									"range_min": 0,
									"range_max": 15
								},
								"genetic_variants": [
									{
										"main_allele": 0,
										"birth_event": {
											"event": "minecraft:panda_lazy",
											"target": "self"
										}
									},
									{
										"main_allele": 1,
										"birth_event": {
											"event": "minecraft:panda_worried",
											"target": "self"
										}
									},
									{
										"main_allele": 2,
										"birth_event": {
											"event": "minecraft:panda_playful",
											"target": "self"
										}
									},
									{
										"main_allele": 3,
										"birth_event": {
											"event": "minecraft:panda_aggressive",
											"target": "self"
										}
									},
									{
										"both_allele": {
											"range_min": 4,
											"range_max": 7
										},
										"birth_event": {
											"event": "minecraft:panda_weak",
											"target": "self"
										}
									},
									{
										"both_allele": {
											"range_min": 8,
											"range_max": 9
										},
										"birth_event": {
											"event": "minecraft:panda_brown",
											"target": "self"
										}
									}
								]
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"1": {
					"birth_event": {
						"type": "String",
						"description": "Event to run when this mob is created and matches the allele conditions.",
						"default": "_not set_"
					},
					"both_allele": {
						"type": "Integer",
						"description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with both. Can also be a range of integers.",
						"default": "-1"
					},
					"either_allele": {
						"type": "Integer",
						"description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with either. Can also be a range of integers.",
						"default": "-1"
					},
					"hidden_allele": {
						"type": "Integer",
						"description": "If this value is non-negative, compare the mob's hidden allele with this value for a match. Can also be a range of integers.",
						"default": "-1"
					},
					"main_allele": {
						"type": "Integer",
						"description": "If this value is non-negative, compare the mob's main allele with this value for a match. Can also be a range of integers.",
						"default": "-1"
					},
					"mutation_rate": {
						"type": "Decimal",
						"description": "If this value is non-negative, overrides the chance for this gene that an allele will be replaced with a random one instead of the parent's allele during birth. Non-negative values greater than `1` will be the same as the value `1`.",
						"default": "-1"
					}
				}
			},
			"usedIn": ["goat", "panda"]
		},
		"minecraft:giveable": {
			"properties": {
				"cooldown": {
					"type": "Decimal",
					"description": "An optional cool down in seconds to prevent spamming interactions.",
					"default": "0.0"
				},
				"items": {
					"type": "List",
					"description": "The list of items that can be given to the entity to place in their inventory.",
					"default": "_not set_"
				},
				"on_give": {
					"type": "JSON Object",
					"description": "Event to fire when the correct item is given.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:giveable": {
						"triggers": {
							"cooldown": 3,
							"items": ["bamboo", "cake"],
							"on_give": {
								"event": "minecraft:on_calm",
								"target": "self"
							}
						}
					}
				},
				{
					"minecraft:giveable": {
						"triggers": {
							"cooldown": 3,
							"items": ["bamboo", "cake"],
							"on_give": {
								"event": "minecraft:on_calm",
								"target": "self"
							}
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["panda"]
		},
		"minecraft:group_size": {
			"properties": {
				"filters": {
					"type": "Minecraft Filter",
					"description": "The list of conditions that must be satisfied for other entities to be counted towards group size.",
					"default": "_not set_"
				},
				"radius": {
					"type": "Decimal",
					"description": "Radius from center of entity.",
					"default": "16"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:group_size": {
						"filters": { "test": "has_ranged_weapon" },
						"radius": 16
					}
				},
				{
					"minecraft:group_size": {
						"radius": 32,
						"filters": {
							"all_of": [
								{
									"test": "has_component",
									"operator": "!=",
									"value": "minecraft:is_baby"
								},
								{ "test": "is_family", "value": "piglin" }
							]
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["hoglin", "piglin"]
		},
		"minecraft:grows_crop": {
			"properties": {
				"chance": {
					"type": "Decimal",
					"description": "Value between 0-1. Chance of success per tick.",
					"default": "0"
				},
				"charges": {
					"type": "Integer",
					"description": "Number of charges",
					"default": "10"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:grows_crop": { "chance": 0, "charges": 10 } },
				{ "minecraft:grows_crop": { "charges": 10, "chance": 0.03 } }
			],
			"type": "component",
			"usedIn": ["bee"]
		},
		"minecraft:healable": {
			"properties": {
				"filters": {
					"type": "Minecraft Filter",
					"description": "The filter group that defines the conditions for using this item to heal the entity.",
					"default": "_not set_"
				},
				"force_use": {
					"type": "Boolean",
					"description": "Determines if item can be used regardless of entity being at full health.",
					"default": "False"
				},
				"items": {
					"type": "Array",
					"description": "The array of items that can be used to heal this entity.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:healable": {
						"filters": { "test": "has_damage", "value": "fatal" },
						"force_use": false,
						"items": [{ "heal_amount": 1, "item": "carrot" }]
					}
				},
				{
					"minecraft:healable": {
						"items": [
							{ "item": "porkchop", "heal_amount": 3 },
							{ "item": "cooked_porkchop", "heal_amount": 8 },
							{ "item": "fish", "heal_amount": 2 },
							{ "item": "salmon", "heal_amount": 2 },
							{ "item": "clownfish", "heal_amount": 1 },
							{ "item": "pufferfish", "heal_amount": 1 },
							{ "item": "cooked_fish", "heal_amount": 5 },
							{ "item": "cooked_salmon", "heal_amount": 6 },
							{ "item": "beef", "heal_amount": 3 },
							{ "item": "cooked_beef", "heal_amount": 8 },
							{ "item": "chicken", "heal_amount": 2 },
							{ "item": "cooked_chicken", "heal_amount": 6 },
							{ "item": "muttonRaw", "heal_amount": 2 },
							{ "item": "muttonCooked", "heal_amount": 6 },
							{ "item": "rotten_flesh", "heal_amount": 4 },
							{ "item": "rabbit", "heal_amount": 3 },
							{ "item": "cooked_rabbit", "heal_amount": 5 },
							{ "item": "rabbit_stew", "heal_amount": 10 }
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"heal_amount": {
						"type": "Integer",
						"description": "The amount of health this entity gains when fed this item.",
						"default": "1"
					},
					"item": {
						"type": "String",
						"description": "Item identifier that can be used to heal this entity.",
						"default": "_not set_"
					}
				}
			},
			"usedIn": [
				"cat",
				"donkey",
				"horse",
				"llama",
				"mule",
				"parrot",
				"wolf"
			]
		},
		"minecraft:home": {
			"properties": {
				"home_block_list": {
					"type": "List",
					"description": "Optional block list that the home position will be associated with. If any of the blocks no longer exist at that position, the home restriction is removed. Example syntax: minecraft:sand. Not supported: minecraft:sand:1",
					"default": "_not set_"
				},
				"restriction_radius": {
					"type": "Integer",
					"description": "The radius that the entity will be restricted to in relation to its home",
					"default": "-1"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:home": {
						"home_block_list": [],
						"restriction_radius": -1
					}
				},
				{
					"minecraft:home": {
						"restriction_radius": 22,
						"home_block_list": [
							"minecraft:bee_nest",
							"minecraft:beehive"
						]
					}
				}
			],
			"type": "component",
			"usedIn": [
				"bee",
				"elder_guardian",
				"guardian",
				"piglin_brute",
				"turtle"
			]
		},
		"minecraft:hurt_on_condition": {
			"properties": {
				"damage_conditions": {
					"type": "Array",
					"description": "List of damage conditions that, when met, can cause damage to the entity.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:hurt_on_condition": {
						"damage_conditions": [
							{
								"filters": {
									"test": "in_water",
									"subject": "self",
									"operator": "==",
									"value": true
								},
								"causes": "drowning",
								"damage_per_tick": 1
							}
						]
					}
				},
				{
					"minecraft:hurt_on_condition": {
						"damage_conditions": [
							{
								"filters": {
									"test": "in_lava",
									"subject": "self",
									"operator": "==",
									"value": true
								},
								"cause": "lava",
								"damage_per_tick": 4
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"[filters](../FilterList.md)": {
						"type": "Minecraft Filter",
						"description": "Filter used to test for",
						"default": "_not set_"
					},
					"cause": {
						"type": "String",
						"description": "The kind of damage that is caused to the entity. Various armors and spells use this to determine if the entity is immune.",
						"default": "_not set_"
					},
					"damange_per_tick": {
						"type": "Integer",
						"description": "Amount of damage done each tick that the conditions are met.",
						"default": "_not set_"
					}
				}
			},
			"usedIn": [
				"armor_stand",
				"arrow",
				"axolotl",
				"bat",
				"bee",
				"blaze",
				"boat",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"enderman",
				"endermite",
				"evocation_illager",
				"fish",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"hopper_minecart",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker_bullet",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"strider",
				"tripod_camera",
				"tropicalfish",
				"turtle",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wolf",
				"zombie_horse",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:inside_block_notifier": {
			"properties": {
				"block_list": {
					"type": "List",
					"description": "List of blocks, with certain block states, that we are monitoring to see if the entity is inside.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:inside_block_notifier": {
						"block_list": [
							{
								"block": {
									"name": "minecraft:bubble_column",
									"states": { "drag_down": true }
								},
								"entered_block_event": {
									"event": "minecraft:entered_bubble_column_down",
									"target": "self"
								},
								"exited_block_event": {
									"event": "minecraft:exited_bubble_column",
									"target": "self"
								}
							}
						]
					}
				},
				{
					"minecraft:inside_block_notifier": {
						"block_list": [
							{
								"block": {
									"name": "minecraft:bubble_column",
									"states": { "drag_down": true }
								},
								"entered_block_event": {
									"event": "minecraft:entered_bubble_column_down",
									"target": "self"
								},
								"exited_block_event": {
									"event": "minecraft:exited_bubble_column",
									"target": "self"
								}
							},
							{
								"block": {
									"name": "minecraft:bubble_column",
									"states": { "drag_down": false }
								},
								"entered_block_event": {
									"event": "minecraft:entered_bubble_column_up",
									"target": "self"
								},
								"exited_block_event": {
									"event": "minecraft:exited_bubble_column",
									"target": "self"
								}
							}
						]
					}
				}
			],
			"type": "component",
			"usedIn": ["boat"]
		},
		"minecraft:insomnia": {
			"properties": {
				"days_until_insomnia": {
					"type": "Decimal",
					"description": "Number of days the mob has to stay up until the insomnia effect begins.",
					"default": "3.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:insomnia": { "days_until_insomnia": 3 } },
				{ "minecraft:insomnia": { "days_until_insomnia": 3 } }
			],
			"type": "component",
			"usedIn": ["player"]
		},
		"minecraft:instant_despawn": {
			"properties": {
				"remove_child_entities": {
					"type": "Boolean",
					"description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned.",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:instant_despawn": {
						"remove_child_entities": false
					}
				}
			],
			"type": "component"
		},
		"minecraft:interact": {
			"properties": {
				"add_items": {
					"type": "JSON Object",
					"description": "Loot table with items to add to the player's inventory upon successful interaction.",
					"default": ""
				},
				"cooldown": {
					"type": "Decimal",
					"description": "Time in seconds before this entity can be interacted with again.",
					"default": "0.0"
				},
				"cooldown_after_being_attacked": {
					"type": "Decimal",
					"description": "Time in seconds before this entity can be interacted with after being attacked.",
					"default": "0.0"
				},
				"health_amount": {
					"type": "Integer",
					"description": "The amount of health this entity will recover or hurt when interacting with this item. Negative values will harm the entity.",
					"default": "0"
				},
				"hurt_item": {
					"type": "Integer",
					"description": "The amount of damage the item will take when used to interact with this entity. A value of 0 means the item won't lose durability.",
					"default": "0"
				},
				"interact_text": {
					"type": "String",
					"description": "Text to show when the player is able to interact in this way with this entity when playing with Touch-screen controls.",
					"default": "_not set_"
				},
				"on_interact": {
					"type": "String",
					"description": "Event to fire when the interaction occurs.",
					"default": "_not set_"
				},
				"particle_on_start": {
					"type": "JSON Object",
					"description": "Particle effect that will be triggered at the start of the interaction.",
					"default": "_not set_"
				},
				"play_sounds": {
					"type": "String",
					"description": "List of sounds to play when the interaction occurs.",
					"default": "_not set_"
				},
				"spawn_entities": {
					"type": "String",
					"description": "List of entities to spawn when the interaction occurs.",
					"default": "_not set_"
				},
				"spawn_items": {
					"type": "JSON Object",
					"description": "Loot table with items to drop on the ground upon successful interaction.",
					"default": "_not set_"
				},
				"swing": {
					"type": "Boolean",
					"description": "If true, the player will do the 'swing' animation when interacting with this entity.",
					"default": "false"
				},
				"transform_to_item": {
					"type": "String",
					"description": "The item used will transform to this item upon successful interaction. Format: `itemName:auxValue`",
					"default": "_not set_"
				},
				"use_item": {
					"type": "Boolean",
					"description": "If true, the interaction will use an item.",
					"default": "false"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:interact": {
						"interactions": [
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "has_equipment",
												"domain": "hand",
												"subject": "other",
												"value": "bucket:0"
											}
										]
									}
								},
								"add_items": {
									"table": "loot_tables/gameplay/entities/cow_milking.json"
								},
								"cooldown": 0,
								"cooldown_after_being_attacked": 0,
								"hurt_item": 0,
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"swing": true,
								"use_item": true,
								"transform_to_item": "bucket:1",
								"play_sounds": "milk",
								"interact_text": "action.interact.milk",
								"spawn_entities": "minecraft:cow_adult",
								"spawn_items": {
									"table": "loot_tables/entities/cow.json"
								}
							}
						]
					}
				},
				{
					"minecraft:interact": {
						"interactions": [
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "bowl"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "has_component",
												"operator": "!=",
												"value": "minecraft:transformation"
											}
										]
									},
									"event": "minecraft:flowerless",
									"target": "self"
								},
								"add_items": {
									"table": "loot_tables/gameplay/entities/mooshroom_milking.json"
								},
								"use_item": true,
								"play_sounds": "milk_suspiciously",
								"interact_text": "action.interact.moostew"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:2"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 7
											}
										]
									},
									"event": "minecraft:ate_allium",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:3"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 3
											}
										]
									},
									"event": "minecraft:ate_bluet",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:1"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 6
											}
										]
									},
									"event": "minecraft:ate_orchid",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:9"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 1
											}
										]
									},
									"event": "minecraft:ate_cornflower",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "yellow_flower"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 5
											}
										]
									},
									"event": "minecraft:ate_dandelion",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:10"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 4
											}
										]
									},
									"event": "minecraft:ate_lily",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:8"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 8
											}
										]
									},
									"event": "minecraft:ate_daisy",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:0"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 0
											}
										]
									},
									"event": "minecraft:ate_poppy",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"any_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:4"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:5"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:6"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "red_flower:7"
											}
										],
										"all_of": [
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 2
											}
										]
									},
									"event": "minecraft:ate_tulip",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "wither_rose"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											},
											{
												"test": "is_mark_variant",
												"subject": "self",
												"operator": "!=",
												"value": 9
											}
										]
									},
									"event": "minecraft:ate_rose",
									"target": "self"
								},
								"use_item": true,
								"play_sounds": "eat",
								"particle_on_start": {
									"particle_type": "smoke",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.feed"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "shears"
											},
											{
												"test": "has_component",
												"operator": "!=",
												"value": "minecraft:transformation"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 0
											}
										]
									},
									"event": "become_cow",
									"target": "self"
								},
								"use_item": false,
								"hurt_item": 1,
								"play_sounds": "shear",
								"spawn_items": {
									"table": "loot_tables/entities/mooshroom_shear.json"
								},
								"particle_on_start": {
									"particle_type": "largeexplode",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.mooshear"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "shears"
											},
											{
												"test": "has_component",
												"operator": "!=",
												"value": "minecraft:transformation"
											},
											{
												"test": "is_variant",
												"subject": "self",
												"operator": "==",
												"value": 1
											}
										]
									},
									"event": "become_cow",
									"target": "self"
								},
								"use_item": false,
								"hurt_item": 1,
								"play_sounds": "shear",
								"spawn_items": {
									"table": "loot_tables/entities/brown_mooshroom_shear.json"
								},
								"particle_on_start": {
									"particle_type": "largeexplode",
									"particle_y_offset": 0.25,
									"particle_offset_towards_interactor": true
								},
								"interact_text": "action.interact.mooshear"
							},
							{
								"on_interact": {
									"filters": {
										"all_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "bucket:0"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "player"
											}
										]
									}
								},
								"use_item": true,
								"transform_to_item": "bucket:1",
								"play_sounds": "milk",
								"interact_text": "action.interact.milk"
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"_not set_": {
						"type": "table",
						"description": "File path, relative to the Behavior Pack's path, to the loot table file.",
						"default": "String"
					}
				}
			},
			"usedIn": [
				"cow",
				"creeper",
				"donkey",
				"goat",
				"llama",
				"mooshroom",
				"mule",
				"pig",
				"piglin",
				"sheep",
				"shulker",
				"snow_golem",
				"strider",
				"tnt_minecart",
				"zombie_villager_v2",
				"zombie_villager"
			]
		},
		"minecraft:inventory": {
			"properties": {
				"additional_slots_per_strength": {
					"type": "Integer",
					"description": "Number of slots that this entity can gain per extra strength",
					"default": "0"
				},
				"can_be_siphoned_from": {
					"type": "Boolean",
					"description": "If true, the contents of this inventory can be removed by a hopper",
					"default": "False"
				},
				"container_type": {
					"type": "String",
					"description": "Type of container this entity has. Can be horse, minecart_chest, chest_boat, minecart_hopper, inventory, container or hopper",
					"default": "none"
				},
				"inventory_size": {
					"type": "Integer",
					"description": "Number of slots the container has",
					"default": "5"
				},
				"private": {
					"type": "Boolean",
					"description": "If true, the entity will not drop its inventory on death",
					"default": "False"
				},
				"restrict_to_owner": {
					"type": "Boolean",
					"description": "If true, the entity's inventory can only be accessed by its owner or itself",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:inventory": {
						"additional_slots_per_strength": 0,
						"can_be_siphoned_from": false,
						"inventory_size": 5,
						"private": false,
						"restrict_to_owner": false
					}
				},
				{
					"minecraft:inventory": {
						"container_type": "minecart_chest",
						"inventory_size": 27,
						"can_be_siphoned_from": true
					}
				}
			],
			"type": "component",
			"usedIn": [
				"chest_minecart",
				"command_block_minecart",
				"donkey",
				"hopper_minecart",
				"horse",
				"llama",
				"mule",
				"panda",
				"piglin",
				"villager_v2",
				"villager"
			]
		},
		"minecraft:item_hopper": {
			"examples": [
				{ "minecraft:item_hopper": {} },
				{ "minecraft:item_hopper": {} }
			],
			"usedIn": ["hopper_minecart"]
		},
		"minecraft:jump.dynamic": {
			"examples": [
				{ "minecraft:jump.dynamic": {} },
				{ "minecraft:jump.dynamic": {} }
			],
			"usedIn": ["rabbit"]
		},
		"minecraft:jump.static": {
			"properties": {
				"jump_power": {
					"type": "Decimal",
					"description": "The initial vertical velocity for the jump",
					"default": "0.42"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:jump.static": { "jump_power": 0.42 } },
				{ "minecraft:jump.static": {} }
			],
			"type": "component",
			"usedIn": [
				"axolotl",
				"bat",
				"bee",
				"blaze",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"enderman",
				"endermite",
				"evocation_illager",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"magma_cube",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"parrot",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"ravager",
				"sheep",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"strider",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:leashable": {
			"properties": {
				"can_be_stolen": {
					"type": "Boolean",
					"description": "If true, players can leash this entity even if it is already leashed to another mob.",
					"default": "False"
				},
				"hard_distance": {
					"type": "Decimal",
					"description": "Distance in blocks at which the leash stiffens, restricting movement.",
					"default": "6"
				},
				"max_distance": {
					"type": "Decimal",
					"description": "Distance in blocks at which the leash breaks.",
					"default": "10"
				},
				"on_leash": {
					"type": "JSON Object",
					"description": "Event to call when this entity is leashed.",
					"default": "_not set_"
				},
				"on_unleash": {
					"type": "JSON Object",
					"description": "Event to call when this entity is unleashed.",
					"default": "_not set_"
				},
				"soft_distance": {
					"type": "Decimal",
					"description": "Distance in blocks at which the 'spring' effect starts acting to keep this entity close to the entity that leashed it.",
					"default": "4"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:leashable": {
						"soft_distance": 4,
						"hard_distance": 6,
						"max_distance": 10,
						"on_leash": {
							"event": "minecraft:on_leash",
							"target": "self"
						},
						"on_unleash": {
							"event": "minecraft:on_unleash",
							"target": "self"
						}
					}
				},
				{
					"minecraft:leashable": {
						"soft_distance": 4,
						"hard_distance": 6,
						"max_distance": 10,
						"on_leash": {
							"event": "minecraft:on_leash",
							"target": "self"
						},
						"on_unleash": {
							"event": "minecraft:on_unleash",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": [
				"axolotl",
				"bee",
				"boat",
				"cat",
				"chicken",
				"cow",
				"dolphin",
				"donkey",
				"fox",
				"glow_squid",
				"goat",
				"hoglin",
				"horse",
				"iron_golem",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"parrot",
				"pig",
				"polar_bear",
				"rabbit",
				"sheep",
				"skeleton_horse",
				"snow_golem",
				"squid",
				"strider",
				"wolf",
				"zoglin",
				"zombie_horse"
			]
		},
		"minecraft:lookat": {
			"properties": {
				"allow_invulnerable": {
					"type": "Boolean",
					"description": "If true, invulnerable entities (e.g. Players in creative mode) are considered valid targets.",
					"default": "False"
				},
				"filters": {
					"type": "Minecraft Filter",
					"description": "Defines the entities that can trigger this component.",
					"default": "_not set_"
				},
				"look_cooldown": {
					"type": "Range [a, b]",
					"description": "The range for the random amount of time during which the entity is 'cooling down' and won't get angered or look for a target.",
					"default": "[0, 0]"
				},
				"look_event": {
					"type": "String",
					"description": "The event identifier to run when the entities specified in filters look at this entity.",
					"default": "_not set_"
				},
				"search_radius": {
					"type": "Decimal",
					"description": "Maximum distance this entity will look for another entity looking at it.",
					"default": "10"
				},
				"set_target": {
					"type": "Boolean",
					"description": "If true, this entity will set the attack target as the entity that looked at it.",
					"default": "True"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:lookat": {
						"allow_invulnerable": false,
						"filters": { "test": "has_target" },
						"look_cooldown": [0, 0],
						"look_event": "minecraft:get_angry",
						"search_radius": 10,
						"set_target": true
					}
				},
				{
					"minecraft:lookat": {
						"search_radius": 64,
						"set_target": true,
						"look_cooldown": 5,
						"filters": {
							"all_of": [
								{
									"subject": "other",
									"test": "is_family",
									"value": "player"
								},
								{
									"test": "has_equipment",
									"domain": "head",
									"subject": "other",
									"operator": "not",
									"value": "carved_pumpkin"
								}
							]
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["enderman"]
		},
		"minecraft:managed_wandering_trader": {
			"examples": [
				{ "minecraft:managed_wandering_trader": {} },
				{ "minecraft:managed_wandering_trader": {} }
			],
			"usedIn": ["wandering_trader"]
		},
		"minecraft:mob_effect": {
			"properties": {
				"[entity_filter](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "The set of entities that are valid to apply the mob effect to.",
					"default": "_not set_"
				},
				"effect_range": {
					"type": "Decimal",
					"description": "How close a hostile entity must be to have the mob effect applied.",
					"default": "0.2"
				},
				"effect_time": {
					"type": "Integer",
					"description": "How long the applied mob effect lasts in seconds.",
					"default": "10"
				},
				"mob_effect": {
					"type": "String",
					"description": "The mob effect that is applied to entities that enter this entities effect range.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:mob_effect": {
						"entity_filter": {
							"test": "has_damage",
							"subject": "self",
							"operator": "not",
							"value": "poison"
						},
						"effect_range": 0.2,
						"effect_time": 10,
						"mob_effect": "poison"
					}
				},
				{
					"minecraft:mob_effect": {
						"effect_range": 0.2,
						"mob_effect": "poison",
						"effect_time": 10,
						"entity_filter": {
							"any_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "monster"
								}
							]
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["pufferfish"]
		},
		"minecraft:movement.amphibious": {
			"properties": {
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:movement.amphibious": { "max_turn": 30 } },
				{ "minecraft:movement.amphibious": { "max_turn": 5 } }
			],
			"type": "component",
			"usedIn": ["axolotl", "turtle"]
		},
		"minecraft:movement.basic": {
			"properties": {
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:movement.basic": { "max_turn": 30 } },
				{ "minecraft:movement.basic": {} }
			],
			"type": "component",
			"usedIn": [
				"bat",
				"blaze",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"donkey",
				"enderman",
				"endermite",
				"evocation_illager",
				"fox",
				"glow_squid",
				"goat",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"ravager",
				"sheep",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"strider",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:movement.fly": {
			"properties": {
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:movement.fly": { "max_turn": 30 } },
				{ "minecraft:movement.fly": {} }
			],
			"type": "component",
			"usedIn": ["parrot"]
		},
		"minecraft:movement.generic": {
			"properties": {
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:movement.generic": { "max_turn": 30 } },
				{ "minecraft:movement.generic": {} }
			],
			"type": "component",
			"usedIn": ["drowned"]
		},
		"minecraft:movement.hover": {
			"properties": {
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:movement.hover": { "max_turn": 30 } },
				null
			],
			"type": "component",
			"usedIn": ["bee"]
		},
		"minecraft:movement.jump": {
			"properties": {
				"jump_delay": {
					"type": "Range [a, b]",
					"description": "Delay after landing when using the slime move control.",
					"default": "[0.0, 0.0]"
				},
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:movement.jump": {
						"jump_delay": [0, 0],
						"max_turn": 30
					}
				},
				{ "minecraft:movement.jump": { "jump_delay": [0.5, 1.5] } }
			],
			"type": "component",
			"usedIn": ["magma_cube", "slime"]
		},
		"minecraft:movement.skip": {
			"properties": {
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:movement.skip": { "max_turn": 30 } },
				{ "minecraft:movement.skip": {} }
			],
			"type": "component",
			"usedIn": ["rabbit"]
		},
		"minecraft:movement.sway": {
			"properties": {
				"max_turn": {
					"type": "Decimal",
					"description": "The maximum number in degrees the mob can turn per tick.",
					"default": "30.0"
				},
				"sway_amplitude": {
					"type": "Decimal",
					"description": "Strength of the sway movement.",
					"default": "0.05"
				},
				"sway_frequency": {
					"type": "Decimal",
					"description": "Multiplier for the frequency of the sway movement.",
					"default": "0.5"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:movement.sway": {
						"max_turn": 30,
						"sway_amplitude": 0.05,
						"sway_frequency": 0.5
					}
				},
				{ "minecraft:movement.sway": { "sway_amplitude": 0 } }
			],
			"type": "component",
			"usedIn": [
				"elder_guardian",
				"fish",
				"guardian",
				"pufferfish",
				"salmon",
				"tropicalfish"
			]
		},
		"minecraft:nameable": {
			"properties": {
				"allow_name_tag_renaming": {
					"type": "Boolean",
					"description": "If true, this entity can be renamed with name tags",
					"default": "True"
				},
				"always_show": {
					"type": "Boolean",
					"description": "If true, the name will always be shown",
					"default": "False"
				},
				"default_trigger": {
					"type": "String",
					"description": "Trigger to run when the entity gets named",
					"default": "_not set_"
				},
				"name_actions": {
					"type": "JSON Object",
					"description": "Describes the special names for this entity and the events to call when the entity acquires those names",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:nameable": {
						"allow_name_tag_renaming": true,
						"always_show": false,
						"default_trigger": {
							"event": "minecraft:celebrate",
							"target": "self"
						},
						"name_actions": [
							{
								"name_filter": "bacon",
								"on_named": {
									"event": "minecraft:spawn_child",
									"target": "self"
								}
							}
						]
					}
				},
				{ "minecraft:nameable": {} }
			],
			"type": "component",
			"nested": {
				"0": {
					"name_filter": {
						"type": "String",
						"description": "List of special names that will cause the events defined in 'on_named' to fire",
						"default": "_not set_"
					},
					"on_named": {
						"type": "String",
						"description": "Event to be called when this entity acquires the name specified in 'name_filter'",
						"default": "_not set_"
					}
				}
			},
			"usedIn": [
				"armor_stand",
				"axolotl",
				"bat",
				"bee",
				"blaze",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"enderman",
				"endermite",
				"evocation_illager",
				"fish",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"magma_cube",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"strider",
				"tropicalfish",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"witch",
				"wither_skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:navigation.climb": {
			"properties": {
				"avoid_damage_blocks": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
					"default": "False"
				},
				"avoid_portals": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
					"default": "False"
				},
				"avoid_sun": {
					"type": "Boolean",
					"description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
					"default": "False"
				},
				"avoid_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid water when creating a path",
					"default": "False"
				},
				"blocks_to_avoid": {
					"type": "List",
					"description": "Tells the pathfinder which blocks to avoid when creating a path",
					"default": "_not set_"
				},
				"can_breach": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
					"default": "False"
				},
				"can_break_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door and break it",
					"default": "False"
				},
				"can_jump": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump up blocks",
					"default": "True"
				},
				"can_open_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
					"default": "False"
				},
				"can_open_iron_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
					"default": "False"
				},
				"can_pass_doors": {
					"type": "Boolean",
					"description": "Whether a path can be created through a door",
					"default": "True"
				},
				"can_path_from_air": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can start pathing when in the air",
					"default": "False"
				},
				"can_path_over_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
					"default": "False"
				},
				"can_path_over_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the water",
					"default": "False"
				},
				"can_sink": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
					"default": "True"
				},
				"can_swim": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
					"default": "False"
				},
				"can_walk": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground outside water",
					"default": "True"
				},
				"can_walk_in_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
					"default": "False"
				},
				"is_amphibious": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground underwater",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:navigation.climb": {
						"avoid_damage_blocks": false,
						"avoid_portals": false,
						"avoid_sun": false,
						"avoid_water": false,
						"blocks_to_avoid": [],
						"can_breach": false,
						"can_break_doors": false,
						"can_jump": true,
						"can_open_doors": false,
						"can_open_iron_doors": false,
						"can_pass_doors": true,
						"can_path_from_air": false,
						"can_path_over_lava": false,
						"can_path_over_water": false,
						"can_sink": true,
						"can_swim": false,
						"can_walk": true,
						"can_walk_in_lava": false,
						"is_amphibious": false
					}
				},
				{
					"minecraft:navigation.climb": {
						"can_path_over_water": true
					}
				}
			],
			"type": "component",
			"usedIn": ["cave_spider", "spider"]
		},
		"minecraft:navigation.float": {
			"properties": {
				"avoid_damage_blocks": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
					"default": "False"
				},
				"avoid_portals": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
					"default": "False"
				},
				"avoid_sun": {
					"type": "Boolean",
					"description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
					"default": "False"
				},
				"avoid_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid water when creating a path",
					"default": "False"
				},
				"blocks_to_avoid": {
					"type": "List",
					"description": "Tells the pathfinder which blocks to avoid when creating a path",
					"default": "_not set_"
				},
				"can_breach": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
					"default": "False"
				},
				"can_break_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door and break it",
					"default": "False"
				},
				"can_jump": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump up blocks",
					"default": "True"
				},
				"can_open_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
					"default": "False"
				},
				"can_open_iron_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
					"default": "False"
				},
				"can_pass_doors": {
					"type": "Boolean",
					"description": "Whether a path can be created through a door",
					"default": "True"
				},
				"can_path_from_air": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can start pathing when in the air",
					"default": "False"
				},
				"can_path_over_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
					"default": "False"
				},
				"can_path_over_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the water",
					"default": "False"
				},
				"can_sink": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
					"default": "True"
				},
				"can_swim": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
					"default": "False"
				},
				"can_walk": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground outside water",
					"default": "True"
				},
				"can_walk_in_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
					"default": "False"
				},
				"is_amphibious": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground underwater",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:navigation.float": {
						"avoid_damage_blocks": false,
						"avoid_portals": false,
						"avoid_sun": false,
						"avoid_water": false,
						"blocks_to_avoid": [],
						"can_breach": false,
						"can_break_doors": false,
						"can_jump": true,
						"can_open_doors": false,
						"can_open_iron_doors": false,
						"can_pass_doors": true,
						"can_path_from_air": false,
						"can_path_over_lava": false,
						"can_path_over_water": false,
						"can_sink": true,
						"can_swim": false,
						"can_walk": true,
						"can_walk_in_lava": false,
						"is_amphibious": false
					}
				},
				{
					"minecraft:navigation.float": {
						"can_path_over_water": true
					}
				}
			],
			"type": "component",
			"usedIn": ["bat", "ghast"]
		},
		"minecraft:navigation.fly": {
			"properties": {
				"avoid_damage_blocks": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
					"default": "False"
				},
				"avoid_portals": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
					"default": "False"
				},
				"avoid_sun": {
					"type": "Boolean",
					"description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
					"default": "False"
				},
				"avoid_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid water when creating a path",
					"default": "False"
				},
				"blocks_to_avoid": {
					"type": "List",
					"description": "Tells the pathfinder which blocks to avoid when creating a path",
					"default": "_not set_"
				},
				"can_breach": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
					"default": "False"
				},
				"can_break_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door and break it",
					"default": "False"
				},
				"can_jump": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump up blocks",
					"default": "True"
				},
				"can_open_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
					"default": "False"
				},
				"can_open_iron_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
					"default": "False"
				},
				"can_pass_doors": {
					"type": "Boolean",
					"description": "Whether a path can be created through a door",
					"default": "True"
				},
				"can_path_from_air": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can start pathing when in the air",
					"default": "False"
				},
				"can_path_over_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
					"default": "False"
				},
				"can_path_over_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the water",
					"default": "False"
				},
				"can_sink": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
					"default": "True"
				},
				"can_swim": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
					"default": "False"
				},
				"can_walk": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground outside water",
					"default": "True"
				},
				"can_walk_in_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
					"default": "False"
				},
				"is_amphibious": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground underwater",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:navigation.fly": {
						"avoid_damage_blocks": false,
						"avoid_portals": false,
						"avoid_sun": false,
						"avoid_water": false,
						"blocks_to_avoid": [],
						"can_breach": false,
						"can_break_doors": false,
						"can_jump": true,
						"can_open_doors": false,
						"can_open_iron_doors": false,
						"can_pass_doors": true,
						"can_path_from_air": false,
						"can_path_over_lava": false,
						"can_path_over_water": false,
						"can_sink": true,
						"can_swim": false,
						"can_walk": true,
						"can_walk_in_lava": false,
						"is_amphibious": false
					}
				},
				{
					"minecraft:navigation.fly": {
						"can_path_over_water": true,
						"can_path_from_air": true
					}
				}
			],
			"type": "component",
			"usedIn": ["parrot"]
		},
		"minecraft:navigation.generic": {
			"properties": {
				"avoid_damage_blocks": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
					"default": "False"
				},
				"avoid_portals": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
					"default": "False"
				},
				"avoid_sun": {
					"type": "Boolean",
					"description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
					"default": "False"
				},
				"avoid_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid water when creating a path",
					"default": "False"
				},
				"blocks_to_avoid": {
					"type": "List",
					"description": "Tells the pathfinder which blocks to avoid when creating a path",
					"default": "_not set_"
				},
				"can_breach": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
					"default": "False"
				},
				"can_break_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door and break it",
					"default": "False"
				},
				"can_jump": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump up blocks",
					"default": "True"
				},
				"can_open_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
					"default": "False"
				},
				"can_open_iron_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
					"default": "False"
				},
				"can_pass_doors": {
					"type": "Boolean",
					"description": "Whether a path can be created through a door",
					"default": "True"
				},
				"can_path_from_air": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can start pathing when in the air",
					"default": "False"
				},
				"can_path_over_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
					"default": "False"
				},
				"can_path_over_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the water",
					"default": "False"
				},
				"can_sink": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
					"default": "True"
				},
				"can_swim": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
					"default": "False"
				},
				"can_walk": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground outside water",
					"default": "True"
				},
				"can_walk_in_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
					"default": "False"
				},
				"is_amphibious": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground underwater",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:navigation.generic": {
						"avoid_damage_blocks": false,
						"avoid_portals": false,
						"avoid_sun": false,
						"avoid_water": false,
						"blocks_to_avoid": [],
						"can_breach": false,
						"can_break_doors": false,
						"can_jump": true,
						"can_open_doors": false,
						"can_open_iron_doors": false,
						"can_pass_doors": true,
						"can_path_from_air": false,
						"can_path_over_lava": false,
						"can_path_over_water": false,
						"can_sink": true,
						"can_swim": false,
						"can_walk": true,
						"can_walk_in_lava": false,
						"is_amphibious": false
					}
				},
				{
					"minecraft:navigation.generic": {
						"is_amphibious": false,
						"can_path_over_water": false,
						"can_swim": true,
						"can_walk": false,
						"can_breach": false,
						"can_sink": false
					}
				}
			],
			"type": "component",
			"usedIn": [
				"axolotl",
				"dolphin",
				"drowned",
				"elder_guardian",
				"fish",
				"guardian",
				"pufferfish",
				"salmon",
				"tropicalfish",
				"turtle"
			]
		},
		"minecraft:navigation.hover": {
			"properties": {
				"avoid_damage_blocks": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
					"default": "False"
				},
				"avoid_portals": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
					"default": "False"
				},
				"avoid_sun": {
					"type": "Boolean",
					"description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
					"default": "False"
				},
				"avoid_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid water when creating a path",
					"default": "False"
				},
				"blocks_to_avoid": {
					"type": "List",
					"description": "Tells the pathfinder which blocks to avoid when creating a path",
					"default": "_not set_"
				},
				"can_breach": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
					"default": "False"
				},
				"can_break_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door and break it",
					"default": "False"
				},
				"can_jump": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump up blocks",
					"default": "True"
				},
				"can_open_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
					"default": "False"
				},
				"can_open_iron_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
					"default": "False"
				},
				"can_pass_doors": {
					"type": "Boolean",
					"description": "Whether a path can be created through a door",
					"default": "True"
				},
				"can_path_from_air": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can start pathing when in the air",
					"default": "False"
				},
				"can_path_over_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
					"default": "False"
				},
				"can_path_over_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the water",
					"default": "False"
				},
				"can_sink": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
					"default": "True"
				},
				"can_swim": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
					"default": "False"
				},
				"can_walk": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground outside water",
					"default": "True"
				},
				"can_walk_in_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
					"default": "False"
				},
				"is_amphibious": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground underwater",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:navigation.hover": {
						"avoid_damage_blocks": false,
						"avoid_portals": false,
						"avoid_sun": false,
						"avoid_water": false,
						"blocks_to_avoid": [],
						"can_breach": false,
						"can_break_doors": false,
						"can_jump": true,
						"can_open_doors": false,
						"can_open_iron_doors": false,
						"can_pass_doors": true,
						"can_path_from_air": false,
						"can_path_over_lava": false,
						"can_path_over_water": false,
						"can_sink": true,
						"can_swim": false,
						"can_walk": true,
						"can_walk_in_lava": false,
						"is_amphibious": false
					}
				},
				{
					"minecraft:navigation.hover": {
						"can_path_over_water": true,
						"can_sink": false,
						"can_pass_doors": false,
						"can_path_from_air": true,
						"avoid_water": true,
						"avoid_damage_blocks": true,
						"avoid_sun": false
					}
				}
			],
			"type": "component",
			"usedIn": ["bee"]
		},
		"minecraft:navigation.swim": {
			"properties": {
				"avoid_damage_blocks": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
					"default": "False"
				},
				"avoid_portals": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
					"default": "False"
				},
				"avoid_sun": {
					"type": "Boolean",
					"description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
					"default": "False"
				},
				"avoid_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid water when creating a path",
					"default": "False"
				},
				"blocks_to_avoid": {
					"type": "List",
					"description": "Tells the pathfinder which blocks to avoid when creating a path",
					"default": "_not set_"
				},
				"can_breach": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
					"default": "False"
				},
				"can_break_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door and break it",
					"default": "False"
				},
				"can_jump": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump up blocks",
					"default": "True"
				},
				"can_open_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
					"default": "False"
				},
				"can_open_iron_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
					"default": "False"
				},
				"can_pass_doors": {
					"type": "Boolean",
					"description": "Whether a path can be created through a door",
					"default": "True"
				},
				"can_path_from_air": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can start pathing when in the air",
					"default": "False"
				},
				"can_path_over_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
					"default": "False"
				},
				"can_path_over_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the water",
					"default": "False"
				},
				"can_sink": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
					"default": "True"
				},
				"can_swim": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
					"default": "False"
				},
				"can_walk": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground outside water",
					"default": "True"
				},
				"can_walk_in_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
					"default": "False"
				},
				"is_amphibious": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground underwater",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:navigation.swim": {
						"avoid_damage_blocks": false,
						"avoid_portals": false,
						"avoid_sun": false,
						"avoid_water": false,
						"blocks_to_avoid": [],
						"can_breach": false,
						"can_break_doors": false,
						"can_jump": true,
						"can_open_doors": false,
						"can_open_iron_doors": false,
						"can_pass_doors": true,
						"can_path_from_air": false,
						"can_path_over_lava": false,
						"can_path_over_water": false,
						"can_sink": true,
						"can_swim": false,
						"can_walk": true,
						"can_walk_in_lava": false,
						"is_amphibious": false
					}
				}
			],
			"type": "component"
		},
		"minecraft:navigation.walk": {
			"properties": {
				"avoid_damage_blocks": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
					"default": "False"
				},
				"avoid_portals": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
					"default": "False"
				},
				"avoid_sun": {
					"type": "Boolean",
					"description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
					"default": "False"
				},
				"avoid_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder to avoid water when creating a path",
					"default": "False"
				},
				"blocks_to_avoid": {
					"type": "List",
					"description": "Tells the pathfinder which blocks to avoid when creating a path",
					"default": "_not set_"
				},
				"can_breach": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
					"default": "False"
				},
				"can_break_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door and break it",
					"default": "False"
				},
				"can_jump": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can jump up blocks",
					"default": "True"
				},
				"can_open_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
					"default": "False"
				},
				"can_open_iron_doors": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
					"default": "False"
				},
				"can_pass_doors": {
					"type": "Boolean",
					"description": "Whether a path can be created through a door",
					"default": "True"
				},
				"can_path_from_air": {
					"type": "Boolean",
					"description": "Tells the pathfinder that it can start pathing when in the air",
					"default": "False"
				},
				"can_path_over_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
					"default": "False"
				},
				"can_path_over_water": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel on the surface of the water",
					"default": "False"
				},
				"can_sink": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
					"default": "True"
				},
				"can_swim": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
					"default": "False"
				},
				"can_walk": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground outside water",
					"default": "True"
				},
				"can_walk_in_lava": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
					"default": "False"
				},
				"is_amphibious": {
					"type": "Boolean",
					"description": "Tells the pathfinder whether or not it can walk on the ground underwater",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:navigation.walk": {
						"avoid_damage_blocks": false,
						"avoid_portals": false,
						"avoid_sun": false,
						"avoid_water": false,
						"blocks_to_avoid": [],
						"can_breach": false,
						"can_break_doors": false,
						"can_jump": true,
						"can_open_doors": false,
						"can_open_iron_doors": false,
						"can_pass_doors": true,
						"can_path_from_air": false,
						"can_path_over_lava": false,
						"can_path_over_water": false,
						"can_sink": true,
						"can_swim": false,
						"can_walk": true,
						"can_walk_in_lava": false,
						"is_amphibious": false
					}
				},
				{
					"minecraft:navigation.walk": {
						"is_amphibious": true,
						"can_path_over_water": true,
						"can_pass_doors": true,
						"can_open_doors": true,
						"can_walk": true,
						"avoid_water": true
					}
				}
			],
			"type": "component",
			"usedIn": [
				"blaze",
				"cat",
				"chicken",
				"cow",
				"creeper",
				"donkey",
				"enderman",
				"endermite",
				"evocation_illager",
				"fox",
				"glow_squid",
				"goat",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"magma_cube",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"rabbit",
				"ravager",
				"sheep",
				"shulker_bullet",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"snow_golem",
				"squid",
				"stray",
				"strider",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:out_of_control": {
			"examples": [
				{ "minecraft:out_of_control": {} },
				{
					"minecraft:above_bubble_column_up": {
						"minecraft:buoyant": {
							"base_buoyancy": 1,
							"apply_gravity": true,
							"simulate_waves": false,
							"liquid_blocks": [
								"minecraft:water",
								"minecraft:flowing_water"
							],
							"drag_down_on_buoyancy_removed": 0.7
						},
						"minecraft:out_of_control": {}
					}
				}
			],
			"usedIn": ["boat"]
		},
		"minecraft:peek": {
			"properties": {
				"on_close": {
					"type": "JSON Object",
					"description": "Event to call when the entity is done peeking.",
					"default": "_not set_"
				},
				"on_open": {
					"type": "JSON Object",
					"description": "Event to call when the entity starts peeking.",
					"default": "_not set_"
				},
				"on_target_open": {
					"type": "JSON Object",
					"description": "Event to call when the entity's target entity starts peeking.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:peek": {
						"on_close": { "event": "minecraft:stop_peeping" },
						"on_open": { "event": "minecraft:start_peeping" },
						"on_target_open": {
							"event": "minecraft:ive_been_spotted"
						}
					}
				},
				{
					"minecraft:peek": {
						"on_open": { "event": "minecraft:on_open" },
						"on_close": { "event": "minecraft:on_close" },
						"on_target_open": { "event": "minecraft:on_open" }
					}
				}
			],
			"type": "component",
			"usedIn": ["shulker"]
		},
		"minecraft:persistent": {
			"examples": [
				{ "minecraft:persistent": {} },
				{ "minecraft:persistent": {} }
			],
			"usedIn": [
				"armor_stand",
				"ender_dragon",
				"evocation_illager",
				"iron_golem",
				"llama",
				"npc",
				"snow_golem",
				"villager_v2",
				"villager",
				"wither"
			]
		},
		"minecraft:physics": {
			"properties": {
				"has_collision": {
					"type": "Boolean",
					"description": "Whether or not the object collides with things.",
					"default": "True"
				},
				"has_gravity": {
					"type": "Boolean",
					"description": "Whether or not the entity is affected by gravity.",
					"default": "True"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:physics": {
						"has_collision": true,
						"has_gravity": true
					}
				},
				{ "minecraft:physics": {} }
			],
			"type": "component",
			"usedIn": [
				"area_effect_cloud",
				"armor_stand",
				"arrow",
				"axolotl",
				"bat",
				"bee",
				"blaze",
				"boat",
				"cat",
				"cave_spider",
				"chest_minecart",
				"chicken",
				"command_block_minecart",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"dragon_fireball",
				"drowned",
				"egg",
				"elder_guardian",
				"ender_crystal",
				"ender_dragon",
				"ender_pearl",
				"enderman",
				"endermite",
				"evocation_illager",
				"eye_of_ender_signal",
				"fireball",
				"fireworks_rocket",
				"fish",
				"fishing_hook",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"hopper_minecart",
				"horse",
				"husk",
				"iron_golem",
				"lingering_potion",
				"llama_spit",
				"llama",
				"magma_cube",
				"minecart",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker_bullet",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"small_fireball",
				"snow_golem",
				"snowball",
				"spider",
				"splash_potion",
				"squid",
				"stray",
				"strider",
				"thrown_trident",
				"tnt_minecart",
				"tnt",
				"tripod_camera",
				"tropicalfish",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither_skull_dangerous",
				"wither_skull",
				"wither",
				"wolf",
				"xp_bottle",
				"xp_orb",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:preferred_path": {
			"properties": {
				"default_block_cost": {
					"type": "Decimal",
					"description": "Cost for non-preferred blocks",
					"default": "0"
				},
				"jump_cost": {
					"type": "Integer",
					"description": "Added cost for jumping up a node",
					"default": "0"
				},
				"max_fall_blocks": {
					"type": "Integer",
					"description": "Distance mob can fall without taking damage",
					"default": "3"
				},
				"preferred_path_blocks": {
					"type": "List",
					"description": "A list of blocks with their associated cost",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:preferred_path": {
						"default_block_cost": 2,
						"jump_cost": 0,
						"max_fall_blocks": 3,
						"preferred_path_blocks": []
					}
				},
				{
					"minecraft:preferred_path": {
						"max_fall_blocks": 1,
						"jump_cost": 5,
						"default_block_cost": 1.5,
						"preferred_path_blocks": [
							{ "cost": 0, "blocks": ["grass_path"] },
							{
								"cost": 1,
								"blocks": [
									"cobblestone",
									"stone",
									"stonebrick",
									"sandstone",
									"mossy_cobblestone",
									"stone_slab",
									"stone_slab2",
									"stone_slab3",
									"stone_slab4",
									"double_stone_slab",
									"double_stone_slab2",
									"double_stone_slab3",
									"double_stone_slab4",
									"wooden_slab",
									"double_wooden_slab",
									"planks",
									"brick_block",
									"nether_brick",
									"red_nether_brick",
									"end_bricks",
									"red_sandstone",
									"stained_glass",
									"glass",
									"glowstone",
									"prismarine",
									"emerald_block",
									"diamond_block",
									"lapis_block",
									"gold_block",
									"redstone_block",
									"purple_glazed_terracotta",
									"white_glazed_terracotta",
									"orange_glazed_terracotta",
									"magenta_glazed_terracotta",
									"light_blue_glazed_terracotta",
									"yellow_glazed_terracotta",
									"lime_glazed_terracotta",
									"pink_glazed_terracotta",
									"gray_glazed_terracotta",
									"silver_glazed_terracotta",
									"cyan_glazed_terracotta",
									"blue_glazed_terracotta",
									"brown_glazed_terracotta",
									"green_glazed_terracotta",
									"red_glazed_terracotta",
									"black_glazed_terracotta"
								]
							},
							{
								"cost": 50,
								"blocks": [
									"bed",
									"lectern",
									"composter",
									"grindstone",
									"blast_furnace",
									"smoker",
									"fletching_table",
									"cartography_table",
									"brewing_stand",
									"smithing_table",
									"cauldron",
									"barrel",
									"loom",
									"stonecutter"
								]
							}
						]
					}
				}
			],
			"type": "component",
			"usedIn": ["iron_golem", "villager_v2"]
		},
		"minecraft:projectile": {
			"properties": {
				"angle_offset": {
					"type": "Decimal",
					"description": "Determines the angle at which the projectile is thrown",
					"default": "0"
				},
				"catch_fire": {
					"type": "Boolean",
					"description": "If true, the entity hit will be set on fire",
					"default": "False"
				},
				"crit_particle_on_hurt": {
					"type": "Boolean",
					"description": "If true, the projectile will produce additional particles when a critical hit happens",
					"default": "False"
				},
				"destroy_on_hurt": {
					"type": "Boolean",
					"description": "If true, this entity will be destroyed when hit",
					"default": "False"
				},
				"filter": {
					"type": "String",
					"description": "Entity Definitions defined here can't be hurt by the projectile",
					"default": "_not set_"
				},
				"fire_affected_by_griefing": {
					"type": "Boolean",
					"description": "If true, whether the projectile causes fire is affected by the mob griefing game rule",
					"default": "False"
				},
				"gravity": {
					"type": "Decimal",
					"description": "The gravity applied to this entity when thrown. The higher the value, the faster the entity falls",
					"default": "0.05"
				},
				"hit_sound": {
					"type": "String",
					"description": "The sound that plays when the projectile hits something",
					"default": "_not set_"
				},
				"homing": {
					"type": "Boolean",
					"description": "If true, the projectile homes in to the nearest entity",
					"default": "False"
				},
				"inertia": {
					"type": "Decimal",
					"description": "The fraction of the projectile's speed maintained every frame while traveling in air",
					"default": "0.99"
				},
				"is_dangerous": {
					"type": "Boolean",
					"description": "If true, the projectile will be treated as dangerous to the players",
					"default": "False"
				},
				"knockback": {
					"type": "Boolean",
					"description": "If true, the projectile will knock back the entity it hits",
					"default": "True"
				},
				"lightning": {
					"type": "Boolean",
					"description": "If true, the entity hit will be struck by lightning",
					"default": "False"
				},
				"liquid_inertia": {
					"type": "Decimal",
					"description": "The fraction of the projectile's speed maintained every frame while traveling in water",
					"default": "0.6"
				},
				"multiple_targets": {
					"type": "Boolean",
					"description": "If true, the projectile can hit multiple entities per flight",
					"default": "True"
				},
				"offset": {
					"type": "Vector [a, b, c]",
					"description": "The offset from the entity's anchor where the projectile will spawn",
					"default": "[0, 0, 0]"
				},
				"on_fire_time": {
					"type": "Decimal",
					"description": "Time in seconds that the entity hit will be on fire for",
					"default": "5"
				},
				"particle": {
					"type": "String",
					"description": "Particle to use upon collision",
					"default": "iconcrack"
				},
				"potion_effect": {
					"type": "Integer",
					"description": "Defines the effect the arrow will apply to the entity it hits",
					"default": "-1"
				},
				"power": {
					"type": "Decimal",
					"description": "Determines the velocity of the projectile",
					"default": "1.3"
				},
				"reflect_on_hurt": {
					"type": "Boolean",
					"description": "If true, this entity will be reflected back when hit",
					"default": "False"
				},
				"semi_random_diff_damage": {
					"type": "Boolean",
					"description": "If true, damage will be randomized based on damage and speed",
					"default": "False"
				},
				"shoot_sound": {
					"type": "String",
					"description": "The sound that plays when the projectile is shot",
					"default": "_not set_"
				},
				"shoot_target": {
					"type": "Boolean",
					"description": "If true, the projectile will be shot towards the target of the entity firing it",
					"default": "True"
				},
				"should_bounce": {
					"type": "Boolean",
					"description": "If true, the projectile will bounce upon hit",
					"default": "False"
				},
				"splash_potion": {
					"type": "Boolean",
					"description": "If true, the projectile will be treated like a splash potion",
					"default": "False"
				},
				"splash_range": {
					"type": "Decimal",
					"description": "Radius in blocks of the 'splash' effect",
					"default": "4"
				},
				"uncertainty_base": {
					"type": "Decimal",
					"description": "The base accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel \\* uncertaintyMultiplier",
					"default": "0"
				},
				"uncertainty_multiplier": {
					"type": "Decimal",
					"description": "Determines how much difficulty affects accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel \\* uncertaintyMultiplier",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:projectile": {
						"angle_offset": 0,
						"catch_fire": false,
						"crit_particle_on_hurt": false,
						"destroy_on_hurt": false,
						"fire_affected_by_griefing": false,
						"gravity": 0.05,
						"homing": false,
						"inertia": 0.99,
						"is_dangerous": false,
						"knockback": true,
						"lightning": false,
						"liquid_inertia": 0.6,
						"multiple_targets": true,
						"offset": [0, 0.5, 0],
						"on_fire_time": 5,
						"particle": "ironcrack",
						"potion_effect": -1,
						"power": 1.3,
						"reflect_on_hurt": false,
						"semi_random_diff_damage": false,
						"shoot_target": true,
						"should_bounce": false,
						"splash_potion": false,
						"splash_range": 4,
						"uncertainty_base": 0,
						"uncertainty_multiplier": 0
					}
				},
				{
					"minecraft:projectile": {
						"on_hit": {
							"impact_damage": {
								"damage": [1, 5],
								"knockback": true,
								"semi_random_diff_damage": false,
								"destroy_on_hit": true
							},
							"stick_in_ground": { "shake_time": 0.35 },
							"arrow_effect": {}
						},
						"hit_sound": "bow.hit",
						"power": 1.6,
						"gravity": 0.05,
						"uncertainty_base": 16,
						"uncertainty_multiplier": 4,
						"anchor": 1,
						"should_bounce": true,
						"offset": [0, -0.1, 0]
					}
				}
			],
			"type": "component",
			"usedIn": [
				"arrow",
				"dragon_fireball",
				"egg",
				"ender_pearl",
				"fireball",
				"fishing_hook",
				"lingering_potion",
				"llama_spit",
				"shulker_bullet",
				"small_fireball",
				"snowball",
				"splash_potion",
				"thrown_trident",
				"wither_skull_dangerous",
				"wither_skull",
				"xp_bottle"
			]
		},
		"minecraft:pushable": {
			"properties": {
				"is_pushable": {
					"type": "Boolean",
					"description": "Whether the entity can be pushed by other entities.",
					"default": "True"
				},
				"is_pushable_by_piston": {
					"type": "Boolean",
					"description": "Whether the entity can be pushed by pistons safely.",
					"default": "True"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:pushable": {
						"is_pushable": true,
						"is_pushable_by_piston": true
					}
				},
				{
					"minecraft:pushable": {
						"is_pushable": true,
						"is_pushable_by_piston": true
					}
				}
			],
			"type": "component",
			"usedIn": [
				"armor_stand",
				"arrow",
				"axolotl",
				"bee",
				"blaze",
				"boat",
				"cat",
				"cave_spider",
				"chest_minecart",
				"chicken",
				"command_block_minecart",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"dragon_fireball",
				"drowned",
				"egg",
				"elder_guardian",
				"ender_crystal",
				"ender_pearl",
				"enderman",
				"endermite",
				"evocation_illager",
				"eye_of_ender_signal",
				"fireball",
				"fireworks_rocket",
				"fish",
				"fishing_hook",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"hopper_minecart",
				"horse",
				"husk",
				"iron_golem",
				"lingering_potion",
				"llama_spit",
				"llama",
				"magma_cube",
				"minecart",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"small_fireball",
				"snow_golem",
				"snowball",
				"spider",
				"splash_potion",
				"squid",
				"stray",
				"strider",
				"thrown_trident",
				"tnt_minecart",
				"tnt",
				"tropicalfish",
				"turtle",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither_skull_dangerous",
				"wither_skull",
				"wither",
				"wolf",
				"xp_bottle",
				"xp_orb",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:raid_trigger": {
			"properties": {
				"triggered_event": {
					"type": "String",
					"description": "Event to run we attempt to trigger a raid on the village.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:raid_trigger": {
						"triggered_event": "minecraft:prepare_for_war"
					}
				},
				{
					"minecraft:raid_trigger": {
						"triggered_event": {
							"event": "minecraft:remove_raid_trigger",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["player"]
		},
		"minecraft:rail_movement": {
			"properties": {
				"max_speed": {
					"type": "Decimal",
					"description": "Maximum speed that this entity will move at when on the rail.",
					"default": "0.4"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:rail_movement": { "max_speed": 0.4 } },
				{ "minecraft:rail_movement": {} }
			],
			"type": "component",
			"usedIn": [
				"chest_minecart",
				"command_block_minecart",
				"hopper_minecart",
				"minecart",
				"tnt_minecart"
			]
		},
		"minecraft:rail_sensor": {
			"properties": {
				"check_block_types": {
					"type": "Boolean",
					"description": "If true, on tick this entity will trigger its on_deactivate behavior",
					"default": "False"
				},
				"eject_on_activate": {
					"type": "Boolean",
					"description": "If true, this entity will eject all of its riders when it passes over an activated rail",
					"default": "True"
				},
				"eject_on_deactivate": {
					"type": "Boolean",
					"description": "If true, this entity will eject all of its riders when it passes over a deactivated rail",
					"default": "False"
				},
				"on_activate": {
					"type": "JSON Object",
					"description": "Event to call when the rail is activated",
					"default": "_not set_"
				},
				"on_deactivate": {
					"type": "JSON Object",
					"description": "Event to call when the rail is deactivated",
					"default": "_not set_"
				},
				"tick_command_block_on_activate": {
					"type": "Boolean",
					"description": "If true, command blocks will start ticking when passing over an activated rail",
					"default": "True"
				},
				"tick_command_block_on_deactivate": {
					"type": "Boolean",
					"description": "If false, command blocks will stop ticking when passing over a deactivated rail",
					"default": "False"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:rail_sensor": {
						"check_block_types": false,
						"eject_on_activate": true,
						"eject_on_deactivate": false,
						"on_activate": {
							"event": "minecraft:command_block_activate"
						},
						"on_deactivate": {
							"event": "minecraft:hopper_activate"
						},
						"tick_command_block_on_activate": true,
						"tick_command_block_on_deactivate": false
					}
				},
				{ "minecraft:rail_sensor": { "eject_on_activate": true } }
			],
			"type": "component",
			"usedIn": [
				"command_block_minecart",
				"hopper_minecart",
				"minecart",
				"tnt_minecart"
			]
		},
		"minecraft:ravager_blocked": {
			"properties": {
				"knockback_strength": {
					"type": "Decimal",
					"description": "The strength with which blocking entities should be knocked back",
					"default": "3.0"
				},
				"reaction_choices": {
					"type": "List",
					"description": "A list of weighted responses to the melee attack being blocked",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:ravager_blocked": {
						"knockback_strength": 3,
						"reaction_choices": []
					}
				},
				{
					"minecraft:ravager_blocked": {
						"knockback_strength": 3,
						"reaction_choices": [
							{
								"weight": 1,
								"value": {
									"event": "minecraft:become_stunned",
									"target": "self"
								}
							},
							{ "weight": 1 }
						]
					}
				}
			],
			"type": "component",
			"usedIn": ["ravager"]
		},
		"minecraft:rideable": {
			"properties": {
				"controlling_seat": {
					"type": "Integer",
					"description": "The seat that designates the driver of the entity. This is only observed by the horse/boat styles of riding; minecarts/entities with \"minecraft:controlled_by_player\" give control to any player in any seat.",
					"default": "0"
				},
				"crouching_skip_interact": {
					"type": "Boolean",
					"description": "If true, this entity can't be interacted with if the entity interacting with it is crouching",
					"default": "True"
				},
				"family_types": {
					"type": "List",
					"description": "List of entities that can ride this entity",
					"default": "_not set_"
				},
				"interact_text": {
					"type": "String",
					"description": "The text to display when the player can interact with the entity when playing with Touch-screen controls",
					"default": "_not set_"
				},
				"priority": {
					"type": "Integer",
					"description": "This field may exist in old data but isn't used by minecraft:rideable.",
					"default": "0"
				},
				"pull_in_entities": {
					"type": "Boolean",
					"description": "If true, this entity will pull in entities that are in the correct family_types into any available seats",
					"default": "False"
				},
				"rider_can_interact": {
					"type": "Boolean",
					"description": "If true, this entity will be picked when looked at by the rider",
					"default": "False"
				},
				"seat_count": {
					"type": "Integer",
					"description": "The number of entities that can ride this entity at the same time",
					"default": "1"
				},
				"seats": {
					"type": "List",
					"description": "The list of positions and number of riders for each position for entities riding this entity",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:rideable": {
						"controlling_seat": 0,
						"crouching_skip_interact": true,
						"family_types": [],
						"priority": 0,
						"pull_in_entities": false,
						"rider_can_interact": false,
						"seat_count": 1,
						"seats": {
							"lock_rider_rotation": 181,
							"max_rider_count": "seat_count",
							"min_rider_count": 0,
							"position": [0, 0, 0],
							"rotate_rider_by": 0
						}
					}
				},
				{
					"minecraft:rideable": {
						"seat_count": 2,
						"interact_text": "action.interact.ride.boat",
						"pull_in_entities": true,
						"seats": [
							{
								"position": [0, -0.2, 0],
								"min_rider_count": 0,
								"max_rider_count": 1,
								"rotate_rider_by": -90,
								"lock_rider_rotation": 90
							},
							{
								"position": [0.2, -0.2, 0],
								"min_rider_count": 2,
								"max_rider_count": 2,
								"rotate_rider_by": "query.has_any_family('blaze', 'creeper', 'enderman', 'illager', 'magmacube', 'piglin', 'player', 'skeleton', 'slime', 'villager', 'wandering_trader', 'witch', 'zombie', 'zombie_pigman') ? -90 : 0",
								"lock_rider_rotation": 90
							},
							{
								"position": [-0.6, -0.2, 0],
								"min_rider_count": 2,
								"max_rider_count": 2,
								"rotate_rider_by": "query.has_any_family('blaze', 'creeper', 'enderman', 'illager', 'magmacube', 'piglin', 'player', 'skeleton', 'slime', 'villager', 'wandering_trader', 'witch', 'zombie', 'zombie_pigman') ? -90 : 0",
								"lock_rider_rotation": 90
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"lock_rider_rotation": {
						"type": "Decimal",
						"description": "Angle in degrees that a rider is allowed to rotate while riding this entity. Omit this property for no limit",
						"default": "181"
					},
					"max_rider_count": {
						"type": "Integer",
						"description": "Defines the maximum number of riders that can be riding this entity for this seat to be valid",
						"default": "seat_count"
					},
					"min_rider_count": {
						"type": "Integer",
						"description": "Defines the minimum number of riders that need to be riding this entity before this seat can be used",
						"default": "0"
					},
					"position": {
						"type": "Vector [a, b, c]",
						"description": "Position of this seat relative to this entity's position",
						"default": "[0, 0, 0]"
					},
					"rotate_rider_by": {
						"type": "Molang",
						"description": "Offset to rotate riders by",
						"default": "0"
					}
				}
			},
			"usedIn": [
				"boat",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"donkey",
				"hoglin",
				"horse",
				"husk",
				"llama",
				"minecart",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"player",
				"ravager",
				"sheep",
				"skeleton_horse",
				"spider",
				"strider",
				"wolf",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:scaffolding_climber": {
			"examples": [{ "minecraft:scaffolding_climber": {} }]
		},
		"minecraft:scale_by_age": {
			"properties": {
				"end_scale": {
					"type": "Decimal",
					"description": "Ending scale of the entity when it's fully grown.",
					"default": "1"
				},
				"start_scale": {
					"type": "Decimal",
					"description": "Initial scale of the newborn entity.",
					"default": "1"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:scale_by_age": {
						"end_scale": 1,
						"start_scale": 1
					}
				},
				{
					"minecraft:scale_by_age": {
						"start_scale": 0.5,
						"end_scale": 1
					}
				}
			],
			"type": "component",
			"usedIn": [
				"donkey",
				"horse",
				"mule",
				"skeleton_horse",
				"zombie_horse"
			]
		},
		"minecraft:scheduler": {
			"properties": {
				"scheduled_events": {
					"type": "List",
					"description": "The list of triggers that fire when the conditions match the given filter criteria. If any filter criteria overlap the first defined event will be picked.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:scheduler": {
						"scheduled_events": [
							{
								"filters": [
									{ "test": "has_damage", "value": false },
									{ "test": "is_daytime", "value": false }
								],
								"event": "minecraft:sleepy_time"
							}
						]
					}
				},
				{
					"minecraft:scheduler": {
						"min_delay_secs": 0,
						"max_delay_secs": 0,
						"scheduled_events": [
							{
								"filters": [
									{ "test": "is_sleeping", "value": true }
								],
								"event": "minecraft:ambient_sleep"
							},
							{
								"filters": {
									"all_of": [
										{
											"test": "is_daytime",
											"value": false
										},
										{
											"test": "distance_to_nearest_player",
											"operator": ">",
											"value": 16
										}
									]
								},
								"event": "minecraft:ambient_night"
							},
							{
								"filters": {
									"all_of": [
										{
											"test": "is_sleeping",
											"value": false
										},
										{
											"any_of": [
												{
													"test": "is_daytime",
													"value": true
												},
												{
													"test": "distance_to_nearest_player",
													"operator": "<=",
													"value": 16
												}
											]
										}
									]
								},
								"event": "minecraft:ambient_normal"
							}
						]
					}
				}
			],
			"type": "component",
			"usedIn": ["fox", "villager_v2"]
		},
		"minecraft:shareables": {
			"properties": {
				"all_items": {
					"type": "Boolean",
					"description": "A bucket for all other items in the game. Note this category is always least priority items.",
					"default": "False"
				},
				"all_items_max_amount": {
					"type": "Integer",
					"description": "Maximum number of this item the mob will hold.",
					"default": "-1"
				},
				"all_items_surplus_amount": {
					"type": "Integer",
					"description": "Number of this item considered extra that the entity wants to share.",
					"default": "-1"
				},
				"all_items_want_amount": {
					"type": "Integer",
					"description": "Number of this item this entity wants to share.",
					"default": "-1"
				},
				"items": {
					"type": "List",
					"description": "List of items that the entity wants to share.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:shareables": {
						"all_items": true,
						"all_items_max_amount": 1,
						"all_items_surplus_amount": 4,
						"all_items_want_amount": 3,
						"items": [
							{
								"item": "minecraft:wheat",
								"admire": false,
								"barter": false,
								"consume_item": false,
								"craft_into": "minecraft:bread",
								"priority": 0,
								"max_amount": 3,
								"pickup_limit": -1,
								"pickup_only": true,
								"store_in_inventory": true,
								"surplus_amount": 4,
								"want_amount": 3
							}
						]
					}
				},
				{
					"minecraft:shareables": {
						"items": [
							{
								"item": "minecraft:netherite_sword",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 0
							},
							{
								"item": "minecraft:diamond_sword",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 1
							},
							{
								"item": "minecraft:iron_sword",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 2
							},
							{
								"item": "minecraft:stone_sword",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 3
							},
							{
								"item": "minecraft:golden_sword",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 4
							},
							{
								"item": "minecraft:wooden_sword",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 5
							},
							{
								"item": "minecraft:wooden_shovel",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:stone_shovel",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:golden_shovel",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:iron_shovel",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:diamond_shovel",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:netherite_shovel",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:wooden_pickaxe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:stone_pickaxe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:golden_pickaxe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:iron_pickaxe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:diamond_pickaxe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:netherite_pickaxe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:wooden_axe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:stone_axe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:golden_axe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:iron_axe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:diamond_axe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:netherite_axe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:wooden_hoe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:stone_hoe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:golden_hoe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:iron_hoe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:diamond_hoe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:netherite_hoe",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:netherite_helmet",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 0
							},
							{
								"item": "minecraft:diamond_helmet",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 1
							},
							{
								"item": "minecraft:iron_helmet",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 2
							},
							{
								"item": "minecraft:chainmail_helmet",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 3
							},
							{
								"item": "minecraft:golden_helmet",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 4
							},
							{
								"item": "minecraft:leather_helmet",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 5
							},
							{
								"item": "minecraft:turtle_helmet",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 6
							},
							{
								"item": "minecraft:skull:0",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 7
							},
							{
								"item": "minecraft:skull:1",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 7
							},
							{
								"item": "minecraft:carved_pumpkin",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 7
							},
							{
								"item": "minecraft:netherite_chestplate",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 0
							},
							{
								"item": "minecraft:diamond_chestplate",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 1
							},
							{
								"item": "minecraft:iron_chestplate",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 2
							},
							{
								"item": "minecraft:chainmail_chestplate",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 3
							},
							{
								"item": "minecraft:golden_chestplate",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 4
							},
							{
								"item": "minecraft:leather_chestplate",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 5
							},
							{
								"item": "minecraft:netherite_leggings",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 0
							},
							{
								"item": "minecraft:diamond_leggings",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 1
							},
							{
								"item": "minecraft:iron_leggings",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 2
							},
							{
								"item": "minecraft:chainmail_leggings",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 3
							},
							{
								"item": "minecraft:golden_leggings",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 4
							},
							{
								"item": "minecraft:leather_leggings",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 5
							},
							{
								"item": "minecraft:netherite_boots",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 0
							},
							{
								"item": "minecraft:diamond_boots",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 1
							},
							{
								"item": "minecraft:iron_boots",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 2
							},
							{
								"item": "minecraft:chainmail_boots",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 3
							},
							{
								"item": "minecraft:golden_boots",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 4
							},
							{
								"item": "minecraft:leather_boots",
								"want_amount": 1,
								"surplus_amount": 1,
								"priority": 5
							}
						]
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"admire": {
						"type": "Boolean",
						"description": "Mob will admire the item after picking up by looking at it. For this to happen the mob needs to have an [Admire](minecraftComponent_admire_item.md) component and an [Admire](../EntityGoals/minecraftBehavior_admire_item.md) goal.",
						"default": "False"
					},
					"barter": {
						"type": "Boolean",
						"description": "Mob will barter for the item after picking it up. For this to work the mob needs to have a [Barter](minecraftComponent_barter.md) component and a [Barter](../EntityGoals/minecraftBehavior_barter.md) goal.",
						"default": "False"
					},
					"consume_item": {
						"type": "Boolean",
						"description": "Determines whether the mob will consume the item or not.",
						"default": "False"
					},
					"craft_into": {
						"type": "String",
						"description": "Defines the item this entity wants to craft with the item defined by \"item\". Should be an item name.",
						"default": "_not set_"
					},
					"item": {
						"type": "String",
						"description": "The name of the item. Aux value can be specified, for instance `minecraft:skull:1`.",
						"default": "_not set_"
					},
					"max_amount": {
						"type": "Integer",
						"description": "Maximum number of this item the mob will hold.",
						"default": "_not set_"
					},
					"pickup_limit": {
						"type": "Integer",
						"description": "Maximum number of this item the mob will pick up during a single goal tick.",
						"default": "_not set_"
					},
					"pickup_only": {
						"type": "Boolean",
						"description": "Determines whether the mob can only pickup the item and not drop it.",
						"default": "false"
					},
					"priority": {
						"type": "Integer",
						"description": "Prioritizes which items the entity prefers. 0 is the highest priority.",
						"default": "_not set_"
					},
					"stored_in_inventory": {
						"type": "Boolean",
						"description": "Determines whether the mob will try to put the item in its inventory if it has the inventory component and if it can't be equipped.",
						"default": "_not set_"
					},
					"surplus_amount": {
						"type": "Integer",
						"description": "Number of this item considered extra that the entity wants to share.",
						"default": "_not set_"
					},
					"want_amount": {
						"type": "Integer",
						"description": "Number of this item this entity wants to have.",
						"default": "_not set_"
					}
				}
			},
			"usedIn": [
				"drowned",
				"fox",
				"husk",
				"piglin",
				"pillager",
				"skeleton",
				"stray",
				"villager_v2",
				"villager",
				"wither_skeleton",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:shooter(entity)": {
			"properties": {
				"aux_val": {
					"type": "Integer",
					"description": "ID of the Potion effect to be applied on hit",
					"default": "-1"
				},
				"def": {
					"type": "String",
					"description": "Actor definition to use as projectile for the ranged attack. The actor definition must have the projectile component to be able to be shot as a projectile",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:shooter": {
						"aux_val": -1,
						"def": "minecraft:small_fireball"
					}
				},
				{ "minecraft:shooter": { "def": "minecraft:fireball" } }
			],
			"type": "component",
			"usedIn": [
				"blaze",
				"drowned",
				"ender_dragon",
				"ghast",
				"llama",
				"piglin",
				"pillager",
				"shulker",
				"skeleton",
				"snow_golem",
				"stray"
			]
		},
		"minecraft:sittable": {
			"properties": {
				"sit_event": {
					"type": "String",
					"description": "Event to run when the entity enters the 'sit' state",
					"default": "_not set_"
				},
				"stand_event": {
					"type": "String",
					"description": "Event to run when the entity exits the 'sit' state",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:sittable": {
						"sit_event": "minecraft:taking_a_seat",
						"stand_event": "minecraft:time_to_go"
					}
				},
				{ "minecraft:sittable": {} }
			],
			"type": "component",
			"usedIn": ["cat", "ocelot", "parrot", "wolf"]
		},
		"minecraft:spawn_entity": {
			"properties": {
				"entities": {
					"type": "List of entities",
					"description": "A list of entities to spawn in",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:spawn_entity": {
						"entities": [
							{
								"filters": [
									{ "test": "is_daytime", "value": false }
								],
								"max_wait_time": 600,
								"min_wait_time": 300,
								"num_to_spawn": 1,
								"should_leash": false,
								"single_use": false,
								"spawn_event": "minecraft:entity_born",
								"spawn_item": "egg",
								"spawn_method": "born",
								"spawn_sound": "plop"
							}
						]
					}
				},
				{
					"minecraft:spawn_entity": {
						"entities": {
							"min_wait_time": 300,
							"max_wait_time": 600,
							"spawn_sound": "plop",
							"spawn_item": "egg",
							"filters": {
								"test": "rider_count",
								"subject": "self",
								"operator": "==",
								"value": 0
							}
						}
					}
				}
			],
			"type": "component",
			"nested": {
				"-1": {
					"filters": {
						"type": "Minecraft Filter",
						"description": "If present, the specified entity will only spawn if the filter evaluates to true.",
						"default": "_not set_"
					},
					"max_wait_time": {
						"type": "Integer",
						"description": "Maximum amount of time to randomly wait in seconds before another entity is spawned.",
						"default": "600"
					},
					"min_wait_time": {
						"type": "Integer",
						"description": "Minimum amount of time to randomly wait in seconds before another entity is spawned.",
						"default": "300"
					},
					"num_to_spawn": {
						"type": "Integer",
						"description": "The number of entities of this type to spawn each time that this triggers.",
						"default": "1"
					},
					"should_leash": {
						"type": "Boolean",
						"description": "If true, this the spawned entity will be leashed to the parent.",
						"default": "false"
					},
					"single_use": {
						"type": "Boolean",
						"description": "If true, this component will only ever spawn the specified entity once.",
						"default": "false"
					},
					"spawn_entity": {
						"type": "String",
						"description": "Identifier of the entity to spawn, leave empty to spawn the item defined by \"spawn_item\" instead.",
						"default": "_not set_"
					},
					"spawn_event": {
						"type": "String",
						"description": "Event to call when the entity is spawned.",
						"default": "minecraft:entity_born"
					},
					"spawn_item": {
						"type": "String",
						"description": "Item identifier of the item to spawn.",
						"default": "egg"
					},
					"spawn_method": {
						"type": "String",
						"description": "Method to use to spawn the entity.",
						"default": "born"
					},
					"spawn_sound": {
						"type": "String",
						"description": "Identifier of the sound effect to play when the entity is spawned.",
						"default": "plop"
					}
				}
			},
			"usedIn": ["chicken", "wandering_trader"]
		},
		"minecraft:tameable": {
			"properties": {
				"probability": {
					"type": "Decimal",
					"description": "The chance of taming the entity with each item use between 0.0 and 1.0, where 1.0 is 100%",
					"default": "1"
				},
				"tame_event": {
					"type": "JSON Object",
					"description": "Event to run when this entity becomes tamed",
					"default": "_not set_"
				},
				"tame_items": {
					"type": "List",
					"description": "The list of items that can be used to tame this entity",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:tameable": {
						"probability": 0.33,
						"tame_items": "bone",
						"tame_event": {
							"event": "minecraft:on_tame",
							"target": "self"
						}
					}
				},
				{
					"minecraft:tameable": {
						"probability": 0.33,
						"tame_items": "bone",
						"tame_event": {
							"event": "minecraft:on_tame",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["cat", "parrot", "wolf"]
		},
		"minecraft:tamemount": {
			"properties": {
				"attempt_temper_mod": {
					"type": "Integer",
					"description": "The amount the entity's temper will increase when mounted.",
					"default": "5"
				},
				"autoRejectItems": {
					"type": "JSON Object",
					"description": "The list of items that, if carried while interacting with the entity, will anger it.",
					"default": "_not set_"
				},
				"feed_items": {
					"type": "JSON Object",
					"description": "The list of items that can be used to increase the entity's temper and speed up the taming process.",
					"default": "_not set_"
				},
				"feed_text": {
					"type": "String",
					"description": "The text that shows in the feeding interact button.",
					"default": "_not set_"
				},
				"max_temper": {
					"type": "Integer",
					"description": "The maximum value for the entity's random starting temper.",
					"default": "100"
				},
				"min_temper": {
					"type": "Integer",
					"description": "The minimum value for the entity's random starting temper.",
					"default": "0"
				},
				"ride_text": {
					"type": "String",
					"description": "The text that shows in the riding interact button.",
					"default": "_not set_"
				},
				"tame_event": {
					"type": "JSON Object",
					"description": "Event that triggers when the entity becomes tamed.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:tamemount": {
						"min_temper": 0,
						"max_temper": 100,
						"feed_text": "action.interact.feed",
						"ride_text": "action.interact.mount",
						"feed_items": [{ "item": "wheat", "temper_mod": 3 }],
						"auto_reject_items": [{ "item": "horsearmorleather" }],
						"tame_event": {
							"event": "minecraft:on_tame",
							"target": "self"
						}
					}
				},
				{
					"minecraft:tamemount": {
						"min_temper": 0,
						"max_temper": 100,
						"feed_text": "action.interact.feed",
						"ride_text": "action.interact.mount",
						"feed_items": [
							{ "item": "wheat", "temper_mod": 3 },
							{ "item": "sugar", "temper_mod": 3 },
							{ "item": "apple", "temper_mod": 3 },
							{ "item": "golden_carrot", "temper_mod": 5 },
							{ "item": "golden_apple", "temper_mod": 10 },
							{ "item": "appleEnchanted", "temper_mod": 10 }
						],
						"auto_reject_items": [
							{ "item": "horsearmorleather" },
							{ "item": "horsearmoriron" },
							{ "item": "horsearmorgold" },
							{ "item": "horsearmordiamond" },
							{ "item": "saddle" }
						],
						"tame_event": {
							"event": "minecraft:on_tame",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"item": {
						"type": "String",
						"description": "Name of the item this entity likes and can be used to increase this entity's temper.",
						"default": "_not set_"
					}
				}
			},
			"usedIn": ["donkey", "horse", "llama", "mule"]
		},
		"minecraft:target_nearby_sensor": {
			"properties": {
				"inside_range": {
					"type": "Decimal",
					"description": "Maximum distance in blocks that another entity will be considered in the 'inside' range",
					"default": "1"
				},
				"must_see": {
					"type": "Boolean",
					"description": "Whether the other entity needs to be visible to trigger 'inside' events",
					"default": "False"
				},
				"on_inside_range": {
					"type": "JSON Object",
					"description": "Event to call when an entity gets in the inside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
					"default": "_not set_"
				},
				"on_outside_range": {
					"type": "JSON Object",
					"description": "Event to call when an entity gets in the outside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
					"default": "_not set_"
				},
				"on_vision_lost_inside_range": {
					"type": "JSON Object",
					"description": "Event to call when an entity exits visual range. Can specify 'event' for the name of the event and 'target' for the target of the event",
					"default": "_not set_"
				},
				"outside_range": {
					"type": "Decimal",
					"description": "Maximum distance in blocks that another entity will be considered in the 'outside' range",
					"default": "5"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:target_nearby_sensor": {
						"inside_range": 1,
						"must_see": false,
						"on_inside_range": {
							"event": "minecraft:i_see_you",
							"target": "self"
						},
						"on_outside_range": {
							"event": "minecraft:where_did_you_go",
							"target": "self"
						},
						"on_vision_lost_inside_range": {
							"event": "minecraft:ill_find_you",
							"target": "self"
						},
						"outside_range": 5
					}
				},
				{
					"minecraft:target_nearby_sensor": {
						"inside_range": 2.5,
						"outside_range": 6,
						"must_see": true,
						"on_inside_range": {
							"event": "minecraft:start_exploding",
							"target": "self"
						},
						"on_outside_range": {
							"event": "minecraft:stop_exploding",
							"target": "self"
						},
						"on_vision_lost_inside_range": {
							"event": "minecraft:stop_exploding",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["blaze", "creeper", "drowned", "guardian"]
		},
		"minecraft:teleport": {
			"properties": {
				"dark_teleport_chance": {
					"type": "Decimal",
					"description": "Modifies the chance that the entity will teleport if the entity is in darkness",
					"default": "0.01"
				},
				"light_teleport_chance": {
					"type": "Decimal",
					"description": "Modifies the chance that the entity will teleport if the entity is in daylight",
					"default": "0.01"
				},
				"max_random_teleport_time": {
					"type": "Decimal",
					"description": "Maximum amount of time in seconds between random teleports",
					"default": "20"
				},
				"min_random_teleport_time": {
					"type": "Decimal",
					"description": "Minimum amount of time in seconds between random teleports",
					"default": "0"
				},
				"random_teleport_cube": {
					"type": "Vector [a, b, c]",
					"description": "Entity will teleport to a random position within the area defined by this cube",
					"default": "[32, 16, 32]"
				},
				"random_teleports": {
					"type": "Boolean",
					"description": "If true, the entity will teleport randomly",
					"default": "True"
				},
				"target_distance": {
					"type": "Decimal",
					"description": "Maximum distance the entity will teleport when chasing a target",
					"default": "16"
				},
				"target_teleport_chance": {
					"type": "Decimal",
					"description": "The chance that the entity will teleport between 0.0 and 1.0. 1.0 means 100%",
					"default": "1"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:teleport": {
						"dark_teleport_chance": 0.01,
						"light_teleport_chance": 0.01,
						"max_random_teleport_time": 20,
						"min_random_teleport_time": 0,
						"random_teleport_cube": [32, 16, 32],
						"random_teleports": true,
						"target_distance": 16,
						"target_teleport_chance": 1
					}
				},
				{
					"minecraft:teleport": {
						"random_teleports": true,
						"max_random_teleport_time": 30,
						"random_teleport_cube": [32, 32, 32],
						"target_distance": 16,
						"target_teleport_chance": 0.05,
						"light_teleport_chance": 0.05
					}
				}
			],
			"type": "component",
			"usedIn": ["enderman"]
		},
		"minecraft:tick_world": {
			"properties": {
				"distance_to_players": {
					"type": "Decimal",
					"description": "The distance at which the closest player has to be before this entity despawns. This option will be ignored if never_despawn is true. Min: 128 blocks.",
					"default": "128"
				},
				"never_despawn": {
					"type": "Boolean",
					"description": "If true, this entity will not despawn even if players are far away. If false, distance_to_players will be used to determine when to despawn.",
					"default": "True"
				},
				"radius": {
					"type": "Integer",
					"description": "The area around the entity to tick. Default: 2. Allowed range: 2-6. Must be a positive integer.",
					"default": "2"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:tick_world": {
						"distance_to_players": 128,
						"never_despawn": true,
						"radius": 2
					}
				}
			],
			"type": "component"
		},
		"minecraft:timer": {
			"properties": {
				"looping": {
					"type": "Boolean",
					"description": "If true, the timer will restart every time after it fires.",
					"default": "True"
				},
				"randomInterval": {
					"type": "Boolean",
					"description": "If true, the amount of time on the timer will be random between the min and max values specified in time.",
					"default": "True"
				},
				"random_time_choices": {
					"type": "List",
					"description": "This is a list of objects, representing one value in seconds that can be picked before firing the event and an optional weight. Incompatible with time.",
					"default": "[ ]"
				},
				"time": {
					"type": "Range [a, b]",
					"description": "Amount of time in seconds for the timer. Can be specified as a number or a pair of numbers (min and max). Incompatible with random_time_choices.",
					"default": "[0.0, 0.0]"
				},
				"time_down_event": {
					"type": "JSON Object",
					"description": "Contains any events to fire when the time on the timer runs out.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:timer": {
						"looping": true,
						"randomInterval": true,
						"time": [0, 0],
						"time_down_event": { "event": "minecraft:times_up" }
					}
				},
				{
					"minecraft:timer": {
						"looping": false,
						"time": 30,
						"time_down_event": {
							"event": "minecraft:convert_to_zombie"
						}
					}
				}
			],
			"type": "component",
			"usedIn": [
				"bee",
				"boat",
				"guardian",
				"hoglin",
				"husk",
				"piglin_brute",
				"piglin",
				"player",
				"pufferfish",
				"ravager",
				"skeleton",
				"wandering_trader",
				"zombie"
			]
		},
		"minecraft:trade_table": {
			"properties": {
				"convert_trades_economy": {
					"type": "Boolean",
					"description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1.",
					"default": "False"
				},
				"display_name": {
					"type": "String",
					"description": "Name to be displayed while trading with this entity.",
					"default": "_not set_"
				},
				"new_screen": {
					"type": "Boolean",
					"description": "Used to determine if trading with entity opens the new trade screen.",
					"default": "False"
				},
				"persist_trades": {
					"type": "Boolean",
					"description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades.",
					"default": "False"
				},
				"table": {
					"type": "String",
					"description": "File path relative to the behavior pack root for this entity's trades.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:trade_table": {
						"convert_trades_economy": false,
						"display_name": "What are you buying?",
						"new_screen": false,
						"persist_trades": false
					}
				},
				{
					"minecraft:trade_table": {
						"display_name": "entity.villager.farmer",
						"table": "trading/farmer_trades.json",
						"convert_trades_economy": true
					}
				}
			],
			"type": "component",
			"usedIn": ["villager"]
		},
		"minecraft:trail": {
			"properties": {
				"block_type": {
					"type": "String",
					"description": "The type of block you wish to be spawned by the entity as it move about the world. Solid blocks may not be spawned at an offset of (0,0,0).",
					"default": "\"air\""
				},
				"[spawn_filter](../FilterList.md)": {
					"type": "Minecraft Filter",
					"description": "One or more conditions that must be met in order to cause the chosen block type to spawn.",
					"default": "_not set_"
				},
				"spawn_offset": {
					"type": "Vector [a, b, c]",
					"description": "The distance from the entities current position to spawn the block. Capped at up to 16 blocks away. The X value is left/right(-/+), the Z value is backward/forward(-/+), the Y value is below/above(-/+).",
					"default": "[0, 0, 0]"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:trail": {
						"block_type": "air",
						"spawn_filter": { "test": "is_daytime", "value": true },
						"spawn_offset": [0, 0, 0]
					}
				},
				{
					"minecraft:trail": {
						"block_type": "minecraft:snow_layer",
						"spawn_filter": {
							"test": "is_temperature_value",
							"operator": "<",
							"value": 0.81
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["snow_golem"]
		},
		"minecraft:transformation": {
			"properties": {
				"add": {
					"type": "JSON Object",
					"description": "List of components to add to the entity after the transformation",
					"default": "_not set_"
				},
				"begin_transform_sound": {
					"type": "String",
					"description": "Sound to play when the transformation starts",
					"default": "_not set_"
				},
				"drop_equipment": {
					"type": "Boolean",
					"description": "Cause the entity to drop all equipment upon transformation",
					"default": "False"
				},
				"drop_inventory": {
					"type": "Boolean",
					"description": "Cause the entity to drop all items in inventory upon transformation",
					"default": "False"
				},
				"into": {
					"type": "",
					"description": "String",
					"default": "_not set_"
				},
				"keep_level": {
					"type": "Boolean",
					"description": "If this entity has trades and has leveled up, it should maintain that level after transformation.",
					"default": "False"
				},
				"keep_owner": {
					"type": "Boolean",
					"description": "If this entity is owned by another entity, it should remain owned after transformation.",
					"default": "False"
				},
				"preserve_equipment": {
					"type": "Boolean",
					"description": "Cause the entity to keep equipment after going through transformation",
					"default": "False"
				},
				"transformation_sound": {
					"type": "String",
					"description": "Sound to play when the entity is done transforming",
					"default": "_not set_"
				},
				"delay": {
					"type": "JSON Object",
					"description": "Defines the properties of the delay for the transformation",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:transformation": {
						"into": "minecraft:drowned<minecraft:as_adult>",
						"transformation_sound": "convert_to_drowned",
						"drop_equipment": false,
						"drop_inventory": false,
						"keep_level": false,
						"delay": {
							"block_assist_chance": 0,
							"block_radius": 0,
							"block_max": 0,
							"value": 10
						}
					}
				},
				{
					"minecraft:transformation": {
						"into": "minecraft:zombie<minecraft:as_adult>",
						"transformation_sound": "convert_to_drowned",
						"drop_equipment": true,
						"delay": { "value": 15 }
					}
				}
			],
			"type": "component",
			"nested": {
				"0": {
					"block_assist_chance": {
						"type": "Decimal",
						"description": "Chance that the entity will look for nearby blocks that can speed up the transformation. Value must be between 0.0 and 1.0",
						"default": "0.0"
					},
					"block_chance": {
						"type": "Decimal",
						"description": "Chance that, once a block is found, will help speed up the transformation",
						"default": "0"
					},
					"block_max": {
						"type": "Integer",
						"description": "Maximum number of blocks the entity will look for to aid in the transformation. If not defined or set to 0, it will be set to the block radius",
						"default": "0"
					},
					"block_radius": {
						"type": "Integer",
						"description": "Distance in Blocks that the entity will search for blocks that can help the transformation",
						"default": "0"
					},
					"block_types": {
						"type": "List",
						"description": "List of blocks that can help the transformation of this entity",
						"default": "_not set_"
					},
					"value": {
						"type": "Decimal",
						"description": "Time in seconds before the entity transforms",
						"default": "0"
					}
				}
			},
			"usedIn": [
				"hoglin",
				"husk",
				"mooshroom",
				"pig",
				"piglin_brute",
				"piglin",
				"skeleton",
				"stray",
				"villager_v2",
				"villager",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:trusting": {
			"properties": {
				"probability": {
					"type": "Decimal",
					"description": "The chance of the entity trusting with each item use between 0.0 and 1.0, where 1.0 is 100%.",
					"default": "1.00"
				},
				"trust_event": {
					"type": "String",
					"description": "Event to run when this entity becomes trusting.",
					"default": "_not set_"
				},
				"trust_items": {
					"type": "List",
					"description": "The list of items that can be used to get the entity to trust players.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:trusting": {
						"probability": 1,
						"trust_items": ["emerald", "gold"],
						"trust_event": {
							"event": "minecraft:trust",
							"target": "self"
						}
					}
				},
				{
					"minecraft:trusting": {
						"probability": 0.33,
						"trust_items": ["fish", "salmon"],
						"trust_event": {
							"event": "minecraft:on_trust",
							"target": "self"
						}
					}
				}
			],
			"type": "component",
			"usedIn": ["ocelot"]
		},
		"minecraft:water_movement": {
			"properties": {
				"drag_factor": {
					"type": "Decimal",
					"description": "Drag factor to determine movement speed when in water.",
					"default": "0.8"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:water_movement": { "drag_factor": 0.8 } },
				{ "minecraft:water_movement": { "drag_factor": 0.98 } }
			],
			"type": "component",
			"usedIn": ["panda", "polar_bear", "turtle"]
		},
		"minecraft:behavior.admire_item": {
			"properties": {
				"admire_item_sound": {
					"type": "String",
					"description": "The sound event to play when admiring the item",
					"default": "_not set_"
				},
				"sound_interval": {
					"type": "Range [\"range_min\", \"range_max\"]",
					"description": "The range of time in seconds to randomly wait before playing the sound again.",
					"default": "0"
				},
				"on_admire_item_start": {
					"type": "[\"event\", \"target\"]",
					"description": "What happens when the entity starts admiring an item",
					"default": "_not set_"
				},
				"on_admire_item_stop": {
					"type": "[\"event\", \"target\"]",
					"description": "What happens when the entity stops admiring an item",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.admire_item": {
						"priority": 4,
						"admire_item_sound": "admire",
						"sound_interval": { "range_min": 0, "range_max": 5 },
						"on_admire_item_start": {
							"event": "admire_item_started_event",
							"target": "self"
						},
						"on_admire_item_stop": {
							"event": "admire_item_stopped_event",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.admire_item": {
						"priority": 2,
						"admire_item_sound": "admire",
						"sound_interval": { "range_min": 2, "range_max": 5 },
						"on_admire_item_start": {
							"event": "admire_item_started_event",
							"target": "self"
						},
						"on_admire_item_stop": {
							"event": "admire_item_stopped_event",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["piglin"]
		},
		"minecraft:behavior.avoid_block": {
			"properties": { "undefined": { "default": "1.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.avoid_block": {
						"priority": 1,
						"tick_interval": 5,
						"search_range": 8,
						"search_height": 4,
						"walk_speed_modifier": 1,
						"sprint_speed_modifier": 1,
						"avoid_block_sound": "retreat",
						"sound_interval": { "range_min": 2, "range_max": 5 },
						"target_selection_method": "nearest",
						"target_blocks": [
							"minecraft:warped_fungus",
							"minecraft:portal",
							"minecraft:respawn_anchor"
						],
						"on_escape": [
							{ "event": "escaped_event", "target": "self" }
						]
					}
				},
				{
					"minecraft:behavior.avoid_block": {
						"priority": 9,
						"tick_interval": 5,
						"search_range": 8,
						"search_height": 4,
						"sprint_speed_modifier": 1.1,
						"target_selection_method": "nearest",
						"target_blocks": [
							"minecraft:soul_fire",
							"minecraft:soul_lantern",
							"minecraft:soul_torch",
							"minecraft:item.soul_campfire"
						],
						"avoid_block_sound": "retreat",
						"sound_interval": { "range_min": 2, "range_max": 5 }
					}
				}
			],
			"type": "goal",
			"usedIn": ["hoglin", "piglin"]
		},
		"minecraft:behavior.avoid_mob_type": {
			"properties": { "undefined": { "default": "1.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.avoid_mob_type": {
						"priority": 6,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								"max_dist": 10,
								"walk_speed_multiplier": 0.8,
								"sprint_speed_multiplier": 1.33
							}
						]
					}
				},
				{
					"minecraft:behavior.avoid_mob_type": {
						"priority": 4,
						"remove_target": true,
						"entity_types": [
							{
								"filters": {
									"any_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "zombie_pigman"
										}
									]
								},
								"max_dist": 6
							},
							{
								"filters": {
									"any_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "zoglin"
										}
									]
								},
								"max_dist": 6,
								"sprint_speed_multiplier": 1.2,
								"check_if_outnumbered": true
							}
						],
						"on_escape_event": {
							"event": "become_calm_event",
							"target": "self"
						},
						"avoid_mob_sound": "retreat",
						"sound_interval": { "range_min": 2, "range_max": 5 }
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"cat",
				"creeper",
				"dolphin",
				"evocation_illager",
				"fish",
				"fox",
				"guardian",
				"hoglin",
				"ocelot",
				"panda",
				"phantom",
				"piglin",
				"rabbit",
				"salmon",
				"skeleton",
				"stray",
				"tropicalfish",
				"villager_v2",
				"villager",
				"wandering_trader",
				"wolf"
			]
		},
		"minecraft:behavior.barter": {
			"examples": [
				{ "minecraft:behavior.barter": { "priority": 1 } },
				{ "minecraft:behavior.barter": { "priority": 3 } }
			],
			"usedIn": ["piglin"]
		},
		"minecraft:behavior.beg": {
			"properties": {
				"items": {
					"type": "List",
					"description": "List of items that this mob likes",
					"default": "_not set_"
				},
				"look_distance": {
					"type": "Decimal",
					"description": "Distance in blocks the mob will beg from",
					"default": "8.0"
				},
				"look_time": {
					"type": "Range [\"range_min\", \"range_max\"]",
					"description": "The range of time in seconds this mob will stare at the player holding a food they like, begging for it",
					"default": "[2, 4]"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.beg": {
						"priority": 1,
						"items": ["bone", "egg"],
						"look_distance": 4,
						"look_time": { "range_min": 0, "range_max": 4 }
					}
				},
				{
					"minecraft:behavior.beg": {
						"priority": 9,
						"look_distance": 8,
						"look_time": [2, 4],
						"items": [
							"bone",
							"porkchop",
							"cooked_porkchop",
							"chicken",
							"cooked_chicken",
							"beef",
							"cooked_beef",
							"rotten_flesh",
							"muttonraw",
							"muttoncooked",
							"rabbit",
							"cooked_rabbit"
						]
					}
				}
			],
			"type": "goal",
			"usedIn": ["wolf"]
		},
		"minecraft:behavior.break_door": {
			"examples": [{ "minecraft:behavior.break_door": { "priority": 2 } }]
		},
		"minecraft:behavior.breed": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.breed": {
						"priority": 1,
						"speed_multiplier": 3
					}
				},
				{
					"minecraft:behavior.breed": {
						"priority": 3,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"axolotl",
				"bee",
				"cat",
				"chicken",
				"cow",
				"donkey",
				"fox",
				"goat",
				"hoglin",
				"horse",
				"llama",
				"mooshroom",
				"ocelot",
				"panda",
				"pig",
				"rabbit",
				"sheep",
				"strider",
				"turtle",
				"wolf"
			]
		},
		"minecraft:behavior.celebrate": {
			"properties": { "undefined": { "default": "[2, 7]" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:celebrate": {
						"minecraft:behavior.celebrate": {
							"priority": 5,
							"celebration_sound": "celebrate",
							"sound_interval": {
								"range_min": 2,
								"range_max": 7
							},
							"jump_interval": {
								"range_min": 1,
								"range_max": 3.5
							},
							"duration": 30,
							"on_celebration_end_event": {
								"event": "minecraft:stop_celebrating",
								"target": "self"
							}
						}
					}
				},
				{
					"minecraft:behavior.celebrate": {
						"priority": 5,
						"celebration_sound": "celebrate",
						"sound_interval": { "range_min": 2, "range_max": 7 },
						"jump_interval": { "range_min": 1, "range_max": 3.5 },
						"duration": 30,
						"on_celebration_end_event": {
							"event": "minecraft:stop_celebrating",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"evocation_illager",
				"pillager",
				"ravager",
				"villager",
				"villager_v2",
				"vindicator",
				"witch"
			]
		},
		"minecraft:behavior.celebrate_survive": {
			"properties": { "undefined": { "default": "[2, 7]" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:celebrate_survive": {
						"minecraft:behavior.celebrate_survive": {
							"priority": 5,
							"celebration_sound": "celebrate_survive",
							"sound_interval": {
								"range_min": 2,
								"range_max": 7
							},
							"jump_interval": {
								"range_min": 1,
								"range_max": 3.5
							},
							"duration": 30,
							"on_celebration_end_event": {
								"event": "minecraft:stop_celebrating",
								"target": "self"
							}
						}
					}
				},
				{
					"minecraft:behavior.celebrate_survive": {
						"priority": 5,
						"celebration_sound": "celebrate_survive",
						"sound_interval": { "range_min": 2, "range_max": 7 },
						"jump_interval": { "range_min": 1, "range_max": 3.5 },
						"duration": 30,
						"on_celebration_end_event": {
							"event": "minecraft:stop_celebrating",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"evocation_illager",
				"pillager",
				"ravager",
				"villager",
				"villager_v2",
				"vindicator",
				"witch"
			]
		},
		"minecraft:behavior.charge_attack": {
			"properties": { "undefined": { "default": "0.1428" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.charge_attack": {
						"max_distance": 3,
						"min_distance": 2,
						"speed_multiplier": 1,
						"success_rate": 0.25
					}
				},
				{ "minecraft:behavior.charge_attack": { "priority": 4 } }
			],
			"type": "goal",
			"usedIn": ["vex"]
		},
		"minecraft:behavior.charge_held_item": {
			"properties": { "items": { "type": "Array", "default": "NA" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.charge_held_item": {
						"priority": 3,
						"items": ["minecraft:arrow"]
					}
				},
				{
					"minecraft:behavior.charge_held_item": {
						"priority": 3,
						"items": ["minecraft:arrow"]
					}
				}
			],
			"type": "goal",
			"usedIn": ["piglin", "pillager"]
		},
		"minecraft:behavior.circle_around_anchor": {
			"properties": { "undefined": { "default": "1.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.circle_around_anchor": {
						"priority": 3,
						"items": ["minecraft:arrow"]
					}
				},
				{
					"minecraft:behavior.circle_around_anchor": {
						"priority": 3,
						"radius_change": 1,
						"radius_adjustment_chance": 0.004,
						"height_adjustment_chance": 0.002857,
						"goal_radius": 1,
						"angle_change": 15,
						"radius_range": [5, 15],
						"height_offset_range": [-4, 5],
						"height_above_target_range": [20, 40]
					}
				}
			],
			"type": "goal",
			"usedIn": ["phantom"]
		},
		"minecraft:behavior.controlled_by_player": {
			"properties": { "undefined": { "default": "1.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.controlled_by_player": {
						"mount_speed_multiplier": 1.45,
						"fractional_rotation": 0.5,
						"fractional_rotation_limit": 5
					}
				},
				{
					"minecraft:behavior.controlled_by_player": {
						"priority": 0,
						"mount_speed_multiplier": 1.45
					}
				}
			],
			"type": "goal",
			"usedIn": ["pig", "strider"]
		},
		"minecraft:behavior.defend_trusted_target": {
			"properties": {
				"aggro_sound": {
					"type": "String",
					"description": "Sound to occasionally play while defending.",
					"default": "_not set_"
				},
				"attack_interval": {
					"type": "Integer",
					"description": "Time in seconds between attacks",
					"default": "0"
				},
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types that this mob considers valid targets",
					"default": "_not set_"
				},
				"must_see": {
					"type": "Boolean",
					"description": "If true, only entities in this mob's viewing range can be selected as targets",
					"default": "false"
				},
				"must_see_forget_duration": {
					"type": "Decimal",
					"description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
					"default": "3.0"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Distance in blocks that the target can be within to launch an attack",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.defend_trusted_target": {
						"priority": 0,
						"within_radius": 25,
						"must_see": false,
						"aggro_sound": "mad",
						"sound_chance": 0.05,
						"on_defend_start": {
							"event": "minecraft:attack",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.defend_trusted_target": {
						"priority": 0,
						"within_radius": 25,
						"must_see": false,
						"aggro_sound": "mad",
						"sound_chance": 0.05,
						"on_defend_start": {
							"event": "minecraft:fox_configure_defending",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox"]
		},
		"minecraft:behavior.defend_village_target": {
			"properties": { "undefined": { "default": "{}" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.defend_village_target": {
						"mount_speed_multiplier": 1.45,
						"fractional_rotation": 0.5,
						"fractional_rotation_limit": 5
					}
				},
				{
					"minecraft:behavior.defend_village_target": {
						"priority": 1,
						"must_reach": true,
						"attack_chance": 0.05,
						"entity_types": {
							"filters": {
								"any_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "mob"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									}
								]
							}
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["iron_golem"]
		},
		"minecraft:behavior.delayed_attack": {
			"examples": [
				{
					"minecraft:behavior.delayed_attack": {
						"priority": 4,
						"attack_duration": 0.75,
						"attack_once": false,
						"cooldown_time": 1,
						"track_target": true,
						"require_complete_path": false,
						"random_stop_interval": 0,
						"reach_multiplier": 1.5,
						"speed_multiplier": 1,
						"hit_delay_pct": 0.5
					}
				},
				{
					"minecraft:behavior.delayed_attack": {
						"priority": 4,
						"attack_once": false,
						"track_target": true,
						"require_complete_path": false,
						"random_stop_interval": 0,
						"reach_multiplier": 1.5,
						"speed_multiplier": 1,
						"attack_duration": 0.75,
						"hit_delay_pct": 0.5
					}
				}
			],
			"usedIn": ["ravager"]
		},
		"minecraft:behavior.door_interact": {
			"examples": [
				{ "minecraft:behavior.door_interact": { "priority": 2 } }
			]
		},
		"minecraft:behavior.dragonchargeplayer": {
			"properties": { "undefined": { "default": "0.7" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.dragonchargeplayer": {
						"active_speed": 1,
						"continue_charge_threshold_time": 0.5,
						"flight_speed": 0.6,
						"target_zone": [10, 150],
						"turn_speed": 0.7
					}
				},
				{ "minecraft:behavior.dragonchargeplayer": { "priority": 1 } }
			],
			"type": "goal",
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.dragondeath": {
			"examples": [
				{ "minecraft:behavior.dragondeath": { "priority": 1 } },
				{ "minecraft:behavior.dragondeath": { "priority": 0 } }
			],
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.dragonflaming": {
			"properties": { "undefined": { "default": "2" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.dragonflaming": {
						"cooldown_time": 10,
						"flame_time": 0.5,
						"ground_flame_count": 4,
						"roar_time": 2
					}
				},
				{ "minecraft:behavior.dragonflaming": { "priority": 1 } }
			],
			"type": "goal",
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.dragonholdingpattern": {
			"examples": [
				{
					"minecraft:behavior.dragonholdingpattern": { "priority": 3 }
				},
				{ "minecraft:behavior.dragonholdingpattern": { "priority": 3 } }
			],
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.dragonlanding": {
			"examples": [
				{ "minecraft:behavior.dragonlanding": { "priority": 0 } },
				{ "minecraft:behavior.dragonlanding": { "priority": 0 } }
			],
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.dragonscanning": {
			"examples": [
				{ "minecraft:behavior.dragonscanning": { "priority": 3 } },
				{ "minecraft:behavior.dragonscanning": { "priority": 2 } }
			],
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.dragonstrafeplayer": {
			"properties": { "undefined": { "default": "10" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.dragonstrafeplayer": {
						"active_speed": 11,
						"fireball_range": 64,
						"flight_speed": 0.6,
						"switch_direction_probability": 0.125,
						"target_in_range_and_in_view_time": 0.25,
						"target_zone": [10, 150],
						"turn_speed": 0.7,
						"view_angle": 10
					}
				},
				{ "minecraft:behavior.dragonstrafeplayer": { "priority": 2 } }
			],
			"type": "goal",
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.dragontakeoff": {
			"examples": [
				{ "minecraft:behavior.dragontakeoff": { "priority": 1 } },
				{ "minecraft:behavior.dragontakeoff": { "priority": 0 } }
			],
			"usedIn": ["ender_dragon"]
		},
		"minecraft:behavior.drink_potion": {
			"properties": {
				"speed_modifier": {
					"type": "Decimal",
					"description": "The movement speed modifier to apply to the entity while it is drinking a potion. A value of 0 represents no change in speed.",
					"default": "0.0"
				},
				"potions": {
					"type": "List",
					"description": "A list of potions that this entity can drink.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.drink_potion": {
						"priority": 1,
						"speed_modifier": -0.2,
						"potions": [
							{
								"id": 7,
								"chance": 1,
								"filters": {
									"all_of": [
										{
											"any_of": [
												{
													"test": "hourly_clock_time",
													"operator": ">=",
													"value": 18000
												},
												{
													"test": "hourly_clock_time",
													"operator": "<",
													"value": 12000
												}
											]
										},
										{
											"test": "is_visible",
											"subject": "self",
											"value": true
										},
										{
											"any_of": [
												{
													"test": "is_avoiding_mobs",
													"subject": "self",
													"value": true
												},
												{
													"all_of": [
														{
															"test": "has_component",
															"subject": "self",
															"value": "minecraft:angry"
														},
														{
															"test": "is_family",
															"subject": "target",
															"operator": "!=",
															"value": "player"
														}
													]
												}
											]
										}
									]
								}
							},
							{
								"id": 8,
								"chance": 1,
								"filters": {
									"all_of": [
										{
											"test": "hourly_clock_time",
											"operator": ">=",
											"value": 12000
										},
										{
											"test": "hourly_clock_time",
											"operator": "<",
											"value": 18000
										},
										{
											"test": "is_visible",
											"subject": "self",
											"value": true
										},
										{
											"any_of": [
												{
													"test": "is_avoiding_mobs",
													"subject": "self",
													"value": true
												},
												{
													"test": "has_component",
													"subject": "self",
													"value": "minecraft:angry"
												}
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"type": "goal",
			"nested": {
				"0": {
					"chance": {
						"type": "Decimal",
						"description": "The percent chance (from 0.0 to 1.0) of this potion being selected when searching for a potion to use.",
						"default": "1.0"
					},
					"[filters](../FilterList.md)": {
						"type": "Minecraft Filter",
						"description": "The filters to use when determining if this potion can be selected.",
						"default": "_not set_"
					},
					"id": {
						"type": "Integer",
						"description": "The registry ID of the potion to use",
						"default": "-1"
					}
				}
			},
			"usedIn": ["wandering_trader"]
		},
		"minecraft:behavior.drop_item_for": {
			"properties": { "undefined": { "default": "[0, 1]" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.drop_item_for": {
						"priority": 1,
						"cooldown": 0.2,
						"drop_item_chance": 1,
						"offering_distance": 1,
						"minimum_teleport_distance": 2,
						"max_head_look_at_height": 10,
						"target_range": [1, 1, 1],
						"teleport_offset": [0, 1, 0],
						"time_of_day_range": [0, 1],
						"seconds_before_pickup": 0,
						"search_range": 5,
						"search_height": 2,
						"search_count": 0,
						"speed_multiplier": 1,
						"goal_radius": 1,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								"max_dist": 6
							}
						],
						"loot_table": "loot_tables/entities/cat_gift.json",
						"on_drop_attempt": {
							"event": "minecraft:cat_gifted_owner",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.drop_item_for": {
						"priority": 1,
						"seconds_before_pickup": 0,
						"cooldown": 0.25,
						"drop_item_chance": 0.7,
						"offering_distance": 5,
						"minimum_teleport_distance": 2,
						"max_head_look_at_height": 10,
						"target_range": [5, 5, 5],
						"teleport_offset": [0, 1, 0],
						"time_of_day_range": [0.74999, 0.8],
						"speed_multiplier": 1,
						"search_range": 5,
						"search_height": 2,
						"search_count": 0,
						"goal_radius": 1,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								"max_dist": 6
							}
						],
						"loot_table": "loot_tables/entities/cat_gift.json",
						"on_drop_attempt": {
							"event": "minecraft:cat_gifted_owner",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["cat"]
		},
		"minecraft:behavior.eat_block": {
			"properties": { "undefined": { "default": "1.8" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.eat_block": {
						"priority": 1,
						"success_chance": "query.is_baby ? 0.02 : 0.003",
						"time_until_eat": 3,
						"eat_and_replace_block_pairs": [
							{ "eat_block": "grass", "replace_block": "dirt" },
							{ "eat_block": "tallgrass", "replace_block": "air" }
						],
						"on_eat": {
							"event": "minecraft:on_eat_block",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.eat_block": {
						"priority": 6,
						"success_chance": "query.is_baby ? 0.02 : 0.001",
						"time_until_eat": 1.8,
						"eat_and_replace_block_pairs": [
							{ "eat_block": "grass", "replace_block": "dirt" },
							{ "eat_block": "tallgrass", "replace_block": "air" }
						],
						"on_eat": {
							"event": "minecraft:on_eat_block",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["sheep"]
		},
		"minecraft:behavior.eat_carried_item": {
			"properties": {
				"delay_before_eating": {
					"type": "Decimal",
					"description": "Time in seconds the mob should wait before eating the item.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.eat_carried_item": {
						"priority": 2,
						"delay_before_eating": 3.25
					}
				},
				{
					"minecraft:behavior.eat_carried_item": {
						"priority": 12,
						"delay_before_eating": 28
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox"]
		},
		"minecraft:behavior.enderman_leave_block": {
			"examples": [
				{
					"minecraft:behavior.enderman_leave_block": { "priority": 8 }
				},
				{
					"minecraft:behavior.enderman_leave_block": {
						"priority": 10
					}
				}
			],
			"usedIn": ["enderman"]
		},
		"minecraft:behavior.enderman_take_block": {
			"examples": [
				{ "minecraft:behavior.enderman_take_block": { "priority": 9 } },
				{ "minecraft:behavior.enderman_take_block": { "priority": 11 } }
			],
			"usedIn": ["enderman"]
		},
		"minecraft:behavior.equip_item": {
			"examples": [
				{ "minecraft:behavior.equip_item": { "priority": 3 } }
			],
			"usedIn": [
				"drowned",
				"fox",
				"husk",
				"piglin",
				"pillager",
				"skeleton",
				"stray",
				"wither_skeleton",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.explore_outskirts": {
			"properties": { "undefined": { "default": "2.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.explore_outskirts": {
						"priority": 2,
						"explore_dist": 5,
						"speed_multiplier": 1,
						"wait_time": 0
					}
				},
				{
					"wander_schedule_villager": {
						"minecraft:behavior.explore_outskirts": {
							"priority": 9,
							"next_xz": 5,
							"next_y": 3,
							"min_wait_time": 3,
							"max_wait_time": 10,
							"max_travel_time": 60,
							"speed_multiplier": 0.6,
							"explore_dist": 6,
							"min_perimeter": 1,
							"min_dist_from_target": 2.5,
							"timer_ratio": 2,
							"dist_from_boundary": [5, 0, 5]
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:behavior.fertilize_farm_block": {
			"properties": { "undefined": { "default": "0.50" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.fertilize_farm_block": {
						"goal_radius": 1.5,
						"max_fertilizer_usage": 1,
						"time_until_eat": 3,
						"search_cooldown_max_seconds": 8,
						"search_count": 9,
						"search_height": 1,
						"search_range": 1,
						"speed_multiplier": 0.5
					}
				},
				{ "minecraft:behavior.fertilize_farm_block": { "priority": 8 } }
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:behavior.find_cover": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.find_cover": {
						"priority": 2,
						"cooldown_time": 10,
						"speed_multiplier": 3
					}
				},
				{
					"minecraft:behavior.find_cover": {
						"priority": 0,
						"speed_multiplier": 1,
						"cooldown_time": 0
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox"]
		},
		"minecraft:behavior.find_mount": {
			"properties": {
				"avoid_water": {
					"type": "Boolean",
					"description": "If true, the mob will not go into water blocks when going towards a mount",
					"default": "false"
				},
				"mount_distance": {
					"type": "Decimal",
					"description": "This is the distance the mob needs to be, in blocks, from the desired mount to mount it. If the value is below 0, the mob will use its default attack distance",
					"default": "-1.0"
				},
				"start_delay": {
					"type": "Integer",
					"description": "Time the mob will wait before starting to move towards the mount",
					"default": "0"
				},
				"target_needed": {
					"type": "Boolean",
					"description": "If true, the mob will only look for a mount if it has a target",
					"default": "false"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within which the mob will look for a mount",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.find_mount": {
						"priority": 2,
						"within_radius": 16,
						"avoid_water": true,
						"start_delay": 100,
						"target_needed": false,
						"mount_distance": 2
					}
				},
				{
					"minecraft:behavior.find_mount": {
						"priority": 1,
						"within_radius": 16
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"husk",
				"parrot",
				"piglin",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.find_underwater_treasure": {
			"properties": {
				"search_range": {
					"type": "Integer",
					"description": "The range that the mob will search for a treasure chest within a ruin or shipwreck to move towards.",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"stop_distance": {
					"type": "Decimal",
					"description": "The distance the mob will move before stopping.",
					"default": "2.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.find_underwater_treasure": {
						"priority": 2,
						"search_range": 8,
						"cooldown_time": 10,
						"speed_multiplier": 3
					}
				},
				{
					"minecraft:behavior.find_underwater_treasure": {
						"priority": 2,
						"speed_multiplier": 2,
						"search_range": 30,
						"stop_distance": 50
					}
				}
			],
			"type": "goal",
			"usedIn": ["dolphin"]
		},
		"minecraft:behavior.flee_sun": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.flee_sun": {
						"priority": 2,
						"speed_multiplier": 1.5
					}
				},
				{
					"minecraft:behavior.flee_sun": {
						"priority": 2,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"drowned",
				"skeleton",
				"stray",
				"zombie_villager_v2",
				"zombie_villager"
			]
		},
		"minecraft:behavior.float": {
			"examples": [
				{ "minecraft:behavior.float": { "priority": 0 } },
				{ "minecraft:behavior.float": { "priority": 0 } }
			],
			"usedIn": [
				"bat",
				"bee",
				"blaze",
				"cat",
				"cave spider",
				"chicken",
				"cow",
				"creeper",
				"donkey",
				"enderman",
				"endermite",
				"evocation_illager",
				"fox",
				"goat",
				"ghast",
				"horse",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"parrot",
				"pig",
				"pillager",
				"polar_bear",
				"rabbit",
				"ravager",
				"sheep",
				"silverfish",
				"spider",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither",
				"wolf"
			]
		},
		"minecraft:behavior.float_wander": {
			"properties": {
				"float_duration": {
					"type": "Range [a, b]",
					"description": "Range of time in seconds the mob will float around before landing and choosing to do something else",
					"default": "[0.0, 0.0]"
				},
				"must_reach": {
					"type": "Boolean",
					"description": "If true, the point has to be reachable to be a valid target",
					"default": "false"
				},
				"random_reselect": {
					"type": "Boolean",
					"description": "If true, the mob will randomly pick a new point while moving to the previously selected one",
					"default": "false"
				},
				"xz_dist": {
					"type": "Integer",
					"description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
					"default": "10"
				},
				"y_dist": {
					"type": "Integer",
					"description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
					"default": "7"
				},
				"y_offset": {
					"type": "Decimal",
					"description": "Height in blocks to add to the selected target position",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.float_wander": {
						"xz_dist": 10,
						"y_dist": 7,
						"y_offset": -2,
						"random_reselect": true,
						"must_reach": false,
						"float_duration": [0.1, 0.35]
					}
				},
				{
					"minecraft:behavior.float_wander": {
						"priority": 2,
						"must_reach": true
					}
				}
			],
			"type": "goal",
			"usedIn": ["bat", "ghast"]
		},
		"minecraft:behavior.follow_caravan": {
			"properties": {
				"entity_count": {
					"type": "Integer",
					"description": "Number of entities that can be in the caravan",
					"default": "1"
				},
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types that this mob can follow in a caravan",
					"default": "_not set_"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.follow_caravan": {
						"priority": 2,
						"entity_count": 7,
						"speed_multiplier": 0.75,
						"entity_types": {
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "wolf"
							}
						}
					}
				},
				{
					"minecraft:behavior.follow_caravan": {
						"priority": 3,
						"speed_multiplier": 2.1,
						"entity_count": 10,
						"entity_types": {
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "llama"
							}
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["llama"]
		},
		"minecraft:behavior.follow_mob": {
			"properties": {
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks it will look for a mob to follow",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"stop_distance": {
					"type": "Decimal",
					"description": "The distance in blocks this mob stops from the mob it is following",
					"default": "2.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.follow_mob": {
						"priority": 2,
						"search_range": 5,
						"speed_multiplier": 0.5,
						"stop_distance": 3
					}
				},
				{
					"minecraft:behavior.follow_mob": {
						"priority": 3,
						"speed_multiplier": 1,
						"stop_distance": 3,
						"search_range": 20
					}
				}
			],
			"type": "goal",
			"usedIn": ["parrot"]
		},
		"minecraft:behavior.follow_owner": {
			"properties": { "undefined": { "default": "2.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.follow_owner": {
						"priority": 2,
						"speed_multiplier": 1,
						"start_distance": 5,
						"stop_distance": 2.5
					}
				},
				{
					"minecraft:behavior.follow_owner": {
						"priority": 4,
						"speed_multiplier": 1,
						"start_distance": 10,
						"stop_distance": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["cat", "ocelot", "parrot", "wolf"]
		},
		"minecraft:behavior.follow_parent": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.follow_parent": {
						"priority": 2,
						"speed_multiplier": 1.1
					}
				},
				{
					"minecraft:behavior.follow_parent": {
						"priority": 4,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"axolotl",
				"bee",
				"chicken",
				"cow",
				"dolphin",
				"donkey",
				"fox",
				"goat",
				"hoglin",
				"horse",
				"llama",
				"mooshroom",
				"mule",
				"panda",
				"pig",
				"polar_bear",
				"rabbit",
				"sheep",
				"skeleton_horse",
				"strider",
				"zombie_horse"
			]
		},
		"minecraft:behavior.follow_target_captain": {
			"properties": {
				"follow_distance": {
					"type": "Decimal",
					"description": "Defines the distance in blocks the mob will stay from its target while following.",
					"default": "0.0"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Defines the maximum distance in blocks a mob can get from its target captain before giving up trying to follow it.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.follow_target_captain": {
						"priority": 2,
						"within_radius": 5,
						"follow_distance": 10
					}
				},
				{
					"minecraft:behavior.follow_target_captain": {
						"priority": 5,
						"speed_multiplier": 0.8,
						"within_radius": 64,
						"follow_distance": 5
					}
				}
			],
			"type": "goal",
			"usedIn": ["pillager", "vindicator"]
		},
		"minecraft:behavior.go_home": {
			"properties": { "undefined": { "default": "1.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.go_home": {
						"priority": 7,
						"goal_radius": 0.5,
						"interval": 60,
						"speed_multiplier": 1,
						"on_home": {
							"event": "minecraft:sleep",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.go_home": {
						"priority": 1,
						"speed_multiplier": 1,
						"interval": 700,
						"goal_radius": 4,
						"on_home": {
							"event": "minecraft:go_lay_egg",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["bee", "piglin_brute", "turtle"]
		},
		"minecraft:behavior.guardian_attack": {
			"properties": { "undefined": { "default": "90" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.guardian_attack": {
						"elder_extra_magic_damage": 2,
						"hard_mode_extra_magic_damage": 2,
						"magic_damage": 3,
						"min_distance": 8,
						"sound_delay_time": 0.75,
						"x_max_rotation": 90,
						"y_max_head_rotation": 90
					}
				},
				{ "minecraft:behavior.guardian_attack": { "priority": 4 } }
			],
			"type": "goal",
			"usedIn": ["elder_guardian", "guardian"]
		},
		"minecraft:behavior.harvest_farm_block": {
			"properties": { "undefined": { "default": "0.50" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.harvest_farm_block": {
						"goal_radius": 8,
						"max_seconds_before_search": 1,
						"search_cooldown_max_seconds": 8,
						"search_count": 0,
						"search_height": 1,
						"search_range": 16,
						"seconds_until_new_task": 0.5,
						"speed_multiplier": 0.5
					}
				},
				{
					"minecraft:behavior.harvest_farm_block": {
						"priority": 8,
						"max_seconds_before_search": 1,
						"search_cooldown_max_seconds": 8,
						"seconds_until_new_task": 0.5,
						"speed_multiplier": 0.5
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2", "villager"]
		},
		"minecraft:behavior.hide": {
			"properties": {
				"duration": {
					"type": "Decimal",
					"description": "Amount of time in seconds that the mob reacts.",
					"default": "1.0"
				},
				"poi_type": {
					"type": "String",
					"description": "Defines what POI type to hide at.",
					"default": "_not set_"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"timeout_cooldown": {
					"type": "Decimal",
					"description": "The cooldown time in seconds before the goal can be reused after a internal failure or timeout condition.",
					"default": "8.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.hide": {
						"priority": 2,
						"speed_multiplier": 1.2,
						"poi_type": "bed",
						"duration": 60,
						"timeout_cooldown": 8
					}
				},
				{
					"minecraft:behavior.hide": {
						"priority": 0,
						"speed_multiplier": 0.8,
						"poi_type": "bed",
						"duration": 30
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:behavior.hold_ground": {
			"properties": {
				"broadcast": {
					"type": "Boolean",
					"description": "Whether to broadcast out the mob's target to other mobs of the same type.",
					"default": "false"
				},
				"broadcast_range": {
					"type": "Decimal",
					"description": "Range in blocks for how far to broadcast.",
					"default": "0.0"
				},
				"min_radius": {
					"type": "Decimal",
					"description": "Minimum distance the target must be for the mob to run this goal.",
					"default": "10.0"
				},
				"within_radius_event": {
					"type": "JSON Object",
					"description": "Event to run when target is within the radius. This event is broadcasted if broadcast is true.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.hold_ground": {
						"priority": 1,
						"broadcast": true,
						"broadcast_range": 10,
						"min_radius": 25,
						"within_radius_event": {
							"event": "minecraft:ranged_mode",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.hold_ground": {
						"priority": 5,
						"min_radius": 10,
						"broadcast": true,
						"broadcast_range": 8,
						"within_radius_event": {
							"event": "minecraft:ranged_mode",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["pillager"]
		},
		"minecraft:behavior.hurt_by_target": {
			"properties": {
				"alert_same_type": {
					"type": "Boolean",
					"description": "If true, nearby mobs of the same type will be alerted about the damage",
					"default": "false"
				},
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types that this mob can target if they hurt their owner",
					"default": "_not set_"
				},
				"hurt_owner": {
					"type": "Boolean",
					"description": "If true, the mob will hurt its owner and other mobs with the same owner as itself",
					"default": "false"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.hurt_by_target": {
						"priority": 2,
						"entity_types": {
							"filters": {
								"test": "is_family",
								"subject": "other",
								"operator": "!=",
								"value": "goat"
							}
						}
					}
				},
				{ "minecraft:behavior.hurt_by_target": { "priority": 1 } }
			],
			"type": "goal",
			"usedIn": [
				"bee",
				"blaze",
				"cave_spider",
				"creeper",
				"dolphin",
				"drowned",
				"enderman",
				"evocation_illager",
				"ghast",
				"hoglin",
				"husk",
				"iron-golem",
				"llama",
				"panda",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"ravager",
				"shulker",
				"silverfish",
				"skeleton",
				"spider",
				"stray",
				"turtle",
				"vex",
				"vindicator",
				"witch",
				"wither skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.inspect_bookshelf": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"search_count": {
					"type": "Integer",
					"description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
					"default": "10"
				},
				"search_height": {
					"type": "Integer",
					"description": "The height that the mob will search for bookshelves",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "Distance in blocks the mob will look for books to inspect",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.inspect_bookshelf": {
						"priority": 4,
						"speed_multiplier": 1.1,
						"search_range": 10,
						"search_height": 1,
						"search_count": 10,
						"goal_radius": 16
					}
				},
				{
					"minecraft:behavior.inspect_bookshelf": {
						"priority": 8,
						"speed_multiplier": 0.6,
						"search_range": 4,
						"search_height": 3,
						"goal_radius": 0.8,
						"search_count": 0
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:behavior.jump_to_block": {
			"properties": { "undefined": { "default": "8" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.jump_to_block": {
						"search_width": 9,
						"search_height": 5,
						"scale_factor": 2,
						"max_velocity": 10,
						"minimum_path_length": 4,
						"minimum_distance": 6,
						"cooldown_range": [5, 10]
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.knockback_roar": {
			"properties": { "undefined": { "default": "" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.knockback_roar": {
						"priority": 1,
						"attack_time": 2,
						"cooldown_time": 0.5,
						"duration": 2.5,
						"knockback_damage": 3,
						"knockback_range": 4,
						"knockback_vertical_strength": 1,
						"knockback_horizontal_strength": 3
					}
				},
				{
					"minecraft:behavior.knockback_roar": {
						"priority": 1,
						"duration": 1,
						"attack_time": 0.5,
						"knockback_damage": 6,
						"knockback_strength": 3,
						"knockback_range": 4,
						"knockback_filters": {
							"test": "is_family",
							"subject": "other",
							"operator": "!=",
							"value": "ravager"
						},
						"damage_filters": {
							"test": "is_family",
							"subject": "other",
							"operator": "!=",
							"value": "illager"
						},
						"on_roar_end": { "event": "minecraft:end_roar" },
						"cooldown_time": 0.1
					}
				}
			],
			"type": "goal",
			"usedIn": ["ravager"]
		},
		"minecraft:behavior.lay_down": {
			"properties": {
				"interval": {
					"type": "Integer",
					"description": "A random value to determine at what intervals something can occur. This has a 1/interval chance to choose this goal",
					"default": "120"
				},
				"random_stop_interval": {
					"type": "Integer",
					"description": "A random value to determine at what interval the AI goal can stop. This has a 1/interval chance to stop this goal.",
					"default": "120"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.lay_down": {
						"priority": 4,
						"interval": 240,
						"random_stop_interval": 120
					}
				},
				{
					"minecraft:behavior.lay_down": {
						"priority": 5,
						"interval": 400,
						"random_stop_interval": 2000
					}
				}
			],
			"type": "goal",
			"usedIn": ["panda"]
		},
		"minecraft:behavior.lay_egg": {
			"properties": {
				"allow_laying_from_below": {
					"type": "Boolean",
					"description": "[EXPERIMENTAL] Allows the mob to lay its eggs from below the target if it can't get there. This is useful if the target block is water with air above, since mobs may not be able to get to the air block above water.",
					"default": "false"
				},
				"egg_type": {
					"type": "String",
					"description": "[EXPERIMENTAL] Block type for the egg to lay. If this is a turtle egg, the number of eggs in the block is randomly set.",
					"default": "minecraft:turtle_egg"
				},
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"lay_egg_sound": {
					"type": "String",
					"description": "[EXPERIMENTAL] Sound event name for laying egg. Defaulted to lay_egg which is used for Turtles.",
					"default": "lay_egg"
				},
				"lay_seconds": {
					"type": "Decimal",
					"description": "[EXPERIMENTAL] Duration of the laying egg process in seconds.",
					"default": "10.0f"
				},
				"on_lay": {
					"type": "Trigger",
					"description": "Event to run when this mob lays the egg.",
					"default": ""
				},
				"search_height": {
					"type": "Integer",
					"description": "Height in blocks the mob will look for a target block to move towards",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks it will look for a target block to move towards",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"target_blocks": {
					"type": "Array",
					"description": "[EXPERIMENTAL] Blocks that the mob can lay its eggs on top of.",
					"default": "[ minecraft:sand ]"
				},
				"target_materials_above_block": {
					"type": "Array",
					"description": "[EXPERIMENTAL] Types of materials that can exist above the target block. Valid types are Air, Water, and Lava.",
					"default": "[ Air ]"
				},
				"use_default_animation": {
					"type": "Boolean",
					"description": "[EXPERIMENTAL] Specifies if the default lay-egg animation should be played when the egg is placed or not.",
					"default": "true"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.lay_egg": {
						"allow_laying_from_below": true,
						"egg_type": "minecraft:turtle_egg",
						"goal_radius": 0.5,
						"on_lay": {
							"event": "minecraft:laid_egg",
							"target": "self"
						},
						"priority": 1,
						"search_range": 32,
						"search_height": 2,
						"speed_multiplier": 1
					}
				},
				{
					"minecraft:behavior.lay_egg": {
						"priority": 1,
						"speed_multiplier": 1,
						"search_range": 16,
						"search_height": 4,
						"goal_radius": 1.5,
						"on_lay": {
							"event": "minecraft:laid_egg",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["turtle"]
		},
		"minecraft:behavior.leap_at_target": {
			"properties": {
				"must_be_on_ground": {
					"type": "Boolean",
					"description": "If true, the mob will only jump at its target if its on the ground. Setting it to false will allow it to jump even if its already in the air",
					"default": "true"
				},
				"set_persistent": {
					"type": "Boolean",
					"description": "Allows the actor to be set to persist upon targeting a player",
					"default": "false"
				},
				"yd": {
					"type": "Decimal",
					"description": "The height in blocks the mob jumps when leaping at its target",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.leap_at_target": {
						"priority": 2,
						"must_be_on_ground": true,
						"set_persistent": false,
						"yd": 1
					}
				},
				{
					"minecraft:behavior.leap_at_target": {
						"priority": 4,
						"yd": 0.4,
						"must_be_on_ground": false
					}
				}
			],
			"type": "goal",
			"usedIn": ["cat", "cave_spider", "ocelot", "spider", "wolf"]
		},
		"minecraft:behavior.look_at_entity": {
			"properties": {
				"angle_of_view_horizontal": {
					"type": "Integer",
					"description": "TThe angle in degrees that the mob can see in the X-axis (left-right)",
					"default": "360"
				},
				"angle_of_view_vertical": {
					"type": "Integer",
					"description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
					"default": "360"
				},
				"filters": {
					"type": "Minecraft Filter",
					"description": "Filter to determine the conditions for this mob to look at the entity",
					"default": "_not set_"
				},
				"look_distance": {
					"type": "Decimal",
					"description": "The distance in blocks from which the entity will look at",
					"default": "8.0"
				},
				"look_time": {
					"type": "Range [a, b]",
					"description": "Time range to look at the entity",
					"default": "[2, 4]"
				},
				"probability": {
					"type": "Decimal",
					"description": "The probability of looking at the entity. A value of 1.00 is 100%",
					"default": "0.02"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.look_at_entity": {
						"priority": 2,
						"angle_of_view_horizontal": 90,
						"angle_of_view_vertical": 90,
						"look_distance": 16,
						"look_time": [1, 5],
						"probability": 0.5,
						"filters": {
							"test": "is_family",
							"subject": "other",
							"value": "wolf"
						}
					}
				},
				{
					"minecraft:behavior.look_at_entity": {
						"priority": 10,
						"look_distance": 8,
						"angle_of_view_horizontal": 45,
						"filters": {
							"test": "is_family",
							"subject": "other",
							"value": "mob"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["evocation_illager", "ravager", "vex"]
		},
		"minecraft:behavior.look_at_player": {
			"properties": {
				"angle_of_view_horizontal": {
					"type": "Integer",
					"description": "TThe angle in degrees that the mob can see in the X-axis (left-right)",
					"default": "360"
				},
				"angle_of_view_vertical": {
					"type": "Integer",
					"description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
					"default": "360"
				},
				"look_distance": {
					"type": "Decimal",
					"description": "The distance in blocks from which the entity will look at",
					"default": "8.0"
				},
				"look_time": {
					"type": "Range [a, b]",
					"description": "Time range to look at the entity",
					"default": "[2, 4]"
				},
				"probability": {
					"type": "Decimal",
					"description": "The probability of looking at the target. A value of 1.00 is 100%",
					"default": "0.02"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.look_at_player": {
						"priority": 2,
						"angle_of_view_horizontal": 90,
						"angle_of_view_vertical": 90,
						"look_distance": 16,
						"look_time": [1, 5],
						"probability": 0.5
					}
				},
				{
					"minecraft:behavior.look_at_player": {
						"priority": 8,
						"look_distance": 8,
						"probability": 8
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"axolotl",
				"cat",
				"cave_spider",
				"chest_minecart",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"ender_dragon",
				"enderman",
				"evocation_illager",
				"fox",
				"goat",
				"guardian",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"rabbit",
				"ravager",
				"sheep",
				"shulker",
				"skeleton_horse",
				"skeleton",
				"snow_golem",
				"spider",
				"stray",
				"strider",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.look_at_target": {
			"properties": {
				"angle_of_view_horizontal": {
					"type": "Integer",
					"description": "TThe angle in degrees that the mob can see in the X-axis (left-right)",
					"default": "360"
				},
				"angle_of_view_vertical": {
					"type": "Integer",
					"description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
					"default": "360"
				},
				"look_distance": {
					"type": "Decimal",
					"description": "The distance in blocks from which the entity will look at",
					"default": "8.0"
				},
				"look_time": {
					"type": "Range [a, b]",
					"description": "Time range to look at the entity",
					"default": "[2, 4]"
				},
				"probability": {
					"type": "Decimal",
					"description": "The probability of looking at the target. A value of 1.00 is 100%",
					"default": "0.02"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.look_at_target": {
						"priority": 2,
						"angle_of_view_horizontal": 90,
						"angle_of_view_vertical": 90,
						"look_distance": 16,
						"look_time": [1, 5],
						"probability": 0.5
					}
				},
				{ "minecraft:behavior.look_at_target": { "priority": 5 } }
			],
			"type": "goal",
			"usedIn": ["wither"]
		},
		"minecraft:behavior.look_at_trading_player": {
			"properties": {
				"angle_of_view_horizontal": {
					"type": "Integer",
					"description": "TThe angle in degrees that the mob can see in the X-axis (left-right)",
					"default": "360"
				},
				"angle_of_view_vertical": {
					"type": "Integer",
					"description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
					"default": "360"
				},
				"look_distance": {
					"type": "Decimal",
					"description": "The distance in blocks from which the entity will look at",
					"default": "8.0"
				},
				"look_time": {
					"type": "Range [a, b]",
					"description": "Time range to look at the entity",
					"default": "[2, 4]"
				},
				"probability": {
					"type": "Decimal",
					"description": "The probability of looking at the target. A value of 1.00 is 100%",
					"default": "0.02"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.look_at_trading_player": {
						"priority": 6,
						"angle_of_view_horizontal": 90,
						"angle_of_view_vertical": 90,
						"look_distance": 8,
						"look_time": [1, 5],
						"probability": 0.02
					}
				},
				{
					"minecraft:behavior.look_at_trading_player": {
						"priority": 7
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2", "villager", "wandering_trader"]
		},
		"minecraft:behavior.make_love": {
			"examples": [
				{ "minecraft:behavior.make_love": { "priority": 8 } },
				{ "minecraft:behavior.make_love": { "priority": 5 } }
			],
			"usedIn": ["villager", "villager_v2"]
		},
		"minecraft:behavior.melee_attack": {
			"properties": { "undefined": { "default": "30" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.melee_attack": {
						"priority": 3,
						"melee_fov": 90,
						"speed_multiplier": 1,
						"track_target": false,
						"attack_types": "minecraft:sheep",
						"reach_multiplier": 2,
						"attack_once": false
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.mingle": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"duration": {
					"type": "Decimal",
					"description": "Amount of time in seconds that the entity will chat with another entity",
					"default": "1.0"
				},
				"mingle_distance": {
					"type": "Decimal",
					"description": "The distance from its partner that this entity will mingle. If the entity type is not the same as the entity, this value needs to be identical on both entities.",
					"default": "2.0"
				},
				"mingle_partner_type": {
					"type": "List",
					"description": "The entity type that this entity is allowed to mingle with",
					"default": "_not set_"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.mingle": {
						"priority": 5,
						"speed_multiplier": 0.8,
						"cooldown_time": 10,
						"duration": 30,
						"mingle_dist": 1.5,
						"mingle_partner_type": "minecraft:villager_v2"
					}
				},
				{
					"minecraft:behavior.mingle": {
						"priority": 7,
						"speed_multiplier": 0.5,
						"duration": 30,
						"cooldown_time": 10,
						"mingle_partner_type": "minecraft:villager_v2",
						"mingle_distance": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:behavior.mount_pathing": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"target_dist": {
					"type": "Decimal",
					"description": "The distance at which this mob wants to be away from its target",
					"default": "0.0"
				},
				"track_target": {
					"type": "Boolean",
					"description": "If true, this mob will chase after the target as long as it's a valid target",
					"default": "false"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.mount_pathing": {
						"priority": 2,
						"speed_multiplier": 1.5,
						"target_dist": 0.5,
						"track_target": false
					}
				},
				{
					"minecraft:behavior.mount_pathing": {
						"priority": 2,
						"speed_multiplier": 1.25,
						"target_dist": 0,
						"track_target": true
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"donkey",
				"horse",
				"husk",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"ravager",
				"sheep",
				"skeleton_horse",
				"spider",
				"wolf",
				"zombie_horse",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.move_indoors": {
			"properties": { "undefined": { "default": "8.000000" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_indoors": {
						"speed_multiplier": 0.8,
						"timeout_cooldown": 8
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.move_outdoors": {
			"properties": { "undefined": { "default": "8.000000" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_outdoors": {
						"goal_radius": 0.5,
						"search_count": 8,
						"search_height": 0.5,
						"search_range": 8,
						"speed_multiplier": 0.8,
						"timeout_cooldown": 8
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.move_through_village": {
			"properties": {
				"only_at_night": {
					"type": "Boolean",
					"description": "If true, the mob will only move through the village during night time",
					"default": "false"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_through_village": {
						"priority": 1,
						"only_at_night": true,
						"speed_multiplier": 1.25
					}
				},
				{
					"minecraft:behavior.move_through_village": {
						"priority": 3,
						"speed_multiplier": 0.6,
						"only_at_night": true
					}
				}
			],
			"type": "goal",
			"usedIn": ["iron_golem"]
		},
		"minecraft:behavior.move_towards_dwelling_restriction": {
			"properties": { "undefined": { "default": "1.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_towards_dwelling_restriction": {
						"priority": 4,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior": {
			"properties": { "undefined": { "default": "1.0" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_towards_home_restriction": {
						"priority": 4,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.move_towards_target": {
			"properties": {
				"within_radius": {
					"type": "Decimal",
					"description": "Defines the radius in blocks that the mob tries to be from the target. A value of 0 means it tries to occupy the same block as the target",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_towards_target": {
						"priority": 1,
						"within_radius": 0.75,
						"speed_multiplier": 1.25
					}
				},
				{
					"minecraft:behavior.move_towards_target": {
						"priority": 2,
						"speed_multiplier": 0.9,
						"within_radius": 32
					}
				}
			],
			"type": "goal",
			"usedIn": ["iron_golem"]
		},
		"minecraft:behavior.move_to_block": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"on_reach": {
					"type": "Trigger",
					"description": "Event to run on block reached.",
					"default": ""
				},
				"on_stay_completed": {
					"type": "Trigger",
					"description": "Event to run on completing a stay of stay_duration at the block.",
					"default": ""
				},
				"search_height": {
					"type": "Integer",
					"description": "The height in blocks that the mob will look for the block.",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks that the mob will look for the block.",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"start_chance": {
					"type": "Decimal",
					"description": "Chance to start the behavior (applied after each random tick_interval).",
					"default": "1.0"
				},
				"stay_duration": {
					"type": "Decimal",
					"description": "Number of ticks needed to complete a stay at the block.",
					"default": "0.0"
				},
				"target_blocks": {
					"type": "List",
					"description": "Block types to move to.",
					"default": ""
				},
				"target_offset": {
					"type": "Vector [a, b, c]",
					"description": "Offset to add to the selected target position.",
					"default": "[0, 0, 0]"
				},
				"target_selection_method": {
					"type": "String",
					"description": "Kind of block to find fitting the specification. Valid values are \"random\" and \"nearest\".",
					"default": "nearest"
				},
				"tick_interval": {
					"type": "Integer",
					"description": "Average interval in ticks to try to run this behavior.",
					"default": "20"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_to_block": {
						"goal_radius": 0.5,
						"search_height": 1,
						"search_range": 0,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.move_to_land": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"search_count": {
					"type": "Integer",
					"description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
					"default": "10"
				},
				"search_height": {
					"type": "Integer",
					"description": "Height in blocks the mob will look for land to move towards",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks it will look for land to move towards",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_to_land": {
						"priority": 2,
						"search_range": 25,
						"search_height": 5,
						"goal_radius": 0.75,
						"search_count": 10
					}
				},
				{
					"minecraft:behavior.move_to_land": {
						"priority": 6,
						"search_range": 16,
						"search_height": 5,
						"goal_radius": 0.5
					}
				}
			],
			"type": "goal",
			"usedIn": ["turtle"]
		},
		"minecraft:behavior.move_to_lava": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"search_count": {
					"type": "Integer",
					"description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
					"default": "10"
				},
				"search_height": {
					"type": "Integer",
					"description": "Height in blocks the mob will look for lava to move towards",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks it will look for lava to move towards",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_to_lava": {
						"priority": 2,
						"search_range": 25,
						"search_height": 5,
						"goal_radius": 0.75,
						"search_count": 10
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.move_to_liquid": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"material_type": {
					"type": "String",
					"description": "The material type of the liquid block to find. Valid values are \"Any\", \"Water\", and \"Lava\".",
					"default": "Any"
				},
				"search_count": {
					"type": "Integer",
					"description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
					"default": "10"
				},
				"search_height": {
					"type": "Integer",
					"description": "Height in blocks the mob will look for the liquid block to move towards",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks it will look for the liquid block to move towards",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_to_liquid": {
						"goal_radius": 0.5,
						"material_type": "Any",
						"search_count": 10,
						"search_height": 5,
						"speed_multiplier": 1.25
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.move_to_random_block": {
			"properties": {
				"block_distance": {
					"type": "Decimal",
					"description": "Defines the distance from the mob, in blocks, that the block to move to will be chosen.",
					"default": "16.0"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Defines the distance in blocks the mob has to be from the block for the movement to be finished.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_to_random_block": {
						"priority": 2,
						"within_radius": 5,
						"block_distance": 128
					}
				},
				{
					"minecraft:behavior.move_to_random_block": {
						"priority": 6,
						"speed_multiplier": 0.55,
						"within_radius": 8,
						"block_distance": 512
					}
				}
			],
			"type": "goal",
			"usedIn": ["pillager", "vindicator"]
		},
		"minecraft:behavior.move_to_village": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks to search for villages. If <= 0, find the closest village regardless of distance.",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_to_village": {
						"priority": 6,
						"search_range": 25,
						"speed_multiplier": 1.25,
						"goal_radius": 0.5
					}
				},
				{
					"minecraft:behavior.move_to_village": {
						"priority": 4,
						"speed_multiplier": 1,
						"goal_radius": 2
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"evocation_illager",
				"pillager",
				"ravager",
				"vindicator",
				"witch"
			]
		},
		"minecraft:behavior.move_to_water": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"search_count": {
					"type": "Integer",
					"description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
					"default": "10"
				},
				"search_height": {
					"type": "Integer",
					"description": "Height in blocks the mob will look for water to move towards",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks it will look for water to move towards",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.move_to_water": {
						"priority": 2,
						"search_range": 25,
						"search_height": 5,
						"goal_radius": 0.75,
						"search_count": 10
					}
				},
				{
					"minecraft:behavior.move_to_water": {
						"priority": 1,
						"search_range": 15,
						"search_height": 5
					}
				}
			],
			"type": "goal",
			"usedIn": ["axolotl", "dolphin", "turtle"]
		},
		"minecraft:behavior.nap": {
			"properties": {
				"cooldown_max": {
					"type": "Decimal",
					"description": "Maximum time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"cooldown_min": {
					"type": "Decimal",
					"description": "Minimum time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"mob_detect_dist": {
					"type": "Decimal",
					"description": "The block distance in x and z that will be checked for mobs that this mob detects",
					"default": "6.0"
				},
				"mob_detect_height": {
					"type": "Decimal",
					"description": "The block distance in y that will be checked for mobs that this mob detects",
					"default": "6.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.nap": {
						"priority": 7,
						"cooldown_min": 2.5,
						"cooldown_max": 5,
						"mob_detect_dist": 16,
						"mob_detect_height": 10
					}
				},
				{
					"minecraft:behavior.nap": {
						"priority": 8,
						"cooldown_min": 2,
						"cooldown_max": 7,
						"mob_detect_dist": 12,
						"mob_detect_height": 6,
						"can_nap_filters": {
							"all_of": [
								{
									"test": "in_water",
									"subject": "self",
									"operator": "==",
									"value": false
								},
								{
									"test": "on_ground",
									"subject": "self",
									"operator": "==",
									"value": true
								},
								{
									"test": "is_underground",
									"subject": "self",
									"operator": "==",
									"value": true
								},
								{
									"test": "weather_at_position",
									"subject": "self",
									"operator": "!=",
									"value": "thunderstorm"
								}
							]
						},
						"wake_mob_exceptions": {
							"any_of": [
								{
									"test": "trusts",
									"subject": "other",
									"operator": "==",
									"value": true
								},
								{
									"test": "is_family",
									"subject": "other",
									"operator": "==",
									"value": "fox"
								},
								{
									"test": "is_sneaking",
									"subject": "other",
									"operator": "==",
									"value": true
								}
							]
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox"]
		},
		"minecraft:behavior.nearest_attackable_target": {
			"properties": {
				"attack_interval": {
					"type": "Integer",
					"description": "Time range (in seconds) between searching for an attack target, range is in (0, \"attack_interval\"]. Only used if \"attack_interval\" is greater than 0, otherwise \"scan_interval\" is used.",
					"default": "0"
				},
				"attack_interval_min": {
					"type": "Integer",
					"description": "Alias for \"attack_interval\"; provides the same functionality as \"attack_interval\".",
					"default": "0"
				},
				"attack_owner": {
					"type": "Boolean",
					"description": "If true, this entity can attack its owner",
					"default": "false"
				},
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "Filters which types of targets are valid for this entity (Please see entity_types' definition page)",
					"default": ""
				},
				"must_reach": {
					"type": "Boolean",
					"description": "If true, this entity requires a path to the target.",
					"default": "false"
				},
				"must_see": {
					"type": "Boolean",
					"description": "Determines if target-validity requires this entity to be in range only, or both in range and in sight",
					"default": "false"
				},
				"must_see_forget_duration": {
					"type": "Decimal",
					"description": "Time (in seconds) the target must not be seen by this entity to become invalid. Used only if \"must_see\" is true.",
					"default": "3.0"
				},
				"persist_time": {
					"type": "Decimal",
					"description": "Time (in seconds) this entity can continue attacking the target after the target is no longer valid.",
					"default": "0.0"
				},
				"reselect_targets": {
					"type": "Boolean",
					"description": "Allows the attacking entity to update the nearest target, otherwise a target is only reselected after each \"scan_interval\" or \"attack_interval\".",
					"default": "false"
				},
				"scan_interval": {
					"type": "Integer",
					"description": "If \"attack_interval\" is 0 or isn't declared, then between attacks: scanning for a new target occurs every amount of ticks equal to \"scan_interval\", minimum value is 1. Values under 10 can affect performance.",
					"default": "10"
				},
				"set_persistent": {
					"type": "Boolean",
					"description": "Allows the actor to be set to persist upon targeting a player.",
					"default": "false"
				},
				"target_invisible_multiplier": {
					"type": "Decimal",
					"description": "Multiplied with the target's armor coverage percentage to modify \"max_dist\" when detecting an invisible target.",
					"default": "0.7"
				},
				"target_search_height": {
					"type": "Decimal",
					"description": "Maximum vertical target-search distance, if it's greater than the target type's \"max_dist\". A negative value defaults to \"entity_types\" greatest \"max_dist\".",
					"default": "-1.0"
				},
				"target_sneak_visibility_multiplier": {
					"type": "Decimal",
					"description": "Multiplied with the target type's \"max_dist\" when trying to detect a sneaking target.",
					"default": "0.8"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Maximum distance this entity can be from the target when following it, otherwise the target becomes invalid. This value is only used if the entity doesn't declare \"minecraft:follow_range\".",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.nearest_attackable_target": {
						"priority": 2,
						"must_see": true,
						"reselect_targets": true,
						"within_radius": 25,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								"max_dist": 32
							}
						]
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.nearest_prioritized_attackable_target": {
			"properties": {
				"attack_interval": {
					"type": "Integer",
					"description": "Time in seconds before selecting a target",
					"default": "0"
				},
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types that this mob considers valid targets",
					"default": "_not set_"
				},
				"must_reach": {
					"type": "Boolean",
					"description": "If true, only entities that this mob can path to can be selected as targets",
					"default": "false"
				},
				"must_see": {
					"type": "Boolean",
					"description": "If true, only entities in this mob's viewing range can be selected as targets",
					"default": "false"
				},
				"must_see_forget_duration": {
					"type": "Decimal",
					"description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
					"default": "3.0"
				},
				"persist_time": {
					"type": "Decimal",
					"description": "Time in seconds for a valid target to stay targeted when it becomes and invalid target.",
					"default": "0.0f"
				},
				"priority": {
					"type": "Integer",
					"description": "Specifies the priority in which filtered enemy types should be attacked. Lower number means higher priority.",
					"default": "0"
				},
				"reselect_targets": {
					"type": "Boolean",
					"description": "If true, the target will change to the current closest entity whenever a different entity is closer",
					"default": "false"
				},
				"scan_interval": {
					"type": "Integer",
					"description": "How many ticks to wait between scanning for a target.",
					"default": "10"
				},
				"set_persistent": {
					"type": "Boolean",
					"description": "Allows the actor to be set to persist upon targeting a player",
					"default": "false"
				},
				"target_search_height": {
					"type": "Decimal",
					"description": "Height in blocks to search for a target mob. -1.0 means the height does not matter.",
					"default": "-1.0"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Distance in blocks that the target can be within to launch an attack",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.nearest_prioritized_attackable_target": {
						"priority": 2,
						"attack_interval": 2,
						"reselect_targets": true,
						"target_search_height": 5,
						"entity_types": {
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "salmon"
							}
						}
					}
				},
				{
					"minecraft:behavior.nearest_prioritized_attackable_target": {
						"priority": 3,
						"within_radius": 12,
						"persist_time": 2,
						"must_see": true,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "player"
								},
								"max_dist": 12,
								"priority": 0
							},
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "wither"
								},
								"max_dist": 12,
								"priority": 1
							}
						]
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox", "piglin_brute"]
		},
		"minecraft:behavior.ocelotattack": {
			"properties": { "undefined": { "default": "30" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.ocelotattack": {
						"priority": 4,
						"cooldown_time": 1,
						"x_max_rotation": 15,
						"y_max_head_rotation": 30,
						"max_distance": 15,
						"max_sneak_range": 15,
						"max_sprint_range": 4,
						"reach_multiplier": 2,
						"sneak_speed_multiplier": 0.6,
						"sprint_speed_multiplier": 1.33,
						"walk_speed_multiplier": 0.8
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.ocelot_sit_on_block": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.ocelot_sit_on_block": {
						"priority": 4,
						"speed_multiplier": 1
					}
				},
				{
					"minecraft:behavior.ocelot_sit_on_block": {
						"priority": 6,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal",
			"usedIn": ["cat", "ocelot"]
		},
		"minecraft:behavior.offer_flower": {
			"examples": [
				{ "minecraft:behavior.offer_flower": { "priority": 4 } },
				{ "minecraft:behavior.offer_flower": { "priority": 5 } }
			],
			"usedIn": ["iron_golem"]
		},
		"minecraft:behavior.open_door": {
			"properties": {
				"close_door_after": {
					"type": "Boolean",
					"description": "If true, the mob will close the door after opening it and going through it",
					"default": "true"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.open_door": {
						"priority": 2,
						"close_door_after": true
					}
				},
				{
					"minecraft:behavior.open_door": {
						"priority": 6,
						"close_door_after": true
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager", "wandering_trader"]
		},
		"minecraft:behavior.owner_hurt_by_target": {
			"properties": {
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types that this mob can target if they hurt their owner",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.owner_hurt_by_target": {
						"priority": 2,
						"entity_types": {
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "player"
							},
							"max_dist": 32
						}
					}
				},
				{ "minecraft:behavior.owner_hurt_by_target": { "priority": 1 } }
			],
			"type": "goal",
			"usedIn": ["wolf"]
		},
		"minecraft:behavior.owner_hurt_target": {
			"properties": {
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types that this mob can target if they hurt their owner",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.owner_hurt_target": {
						"priority": 2,
						"entity_types": {
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "player"
							},
							"max_dist": 32
						}
					}
				},
				{ "minecraft:behavior.owner_hurt_target": { "priority": 2 } }
			],
			"type": "goal",
			"usedIn": ["wolf"]
		},
		"minecraft:behavior.panic": {
			"properties": {
				"damage_sources": {
					"type": "List",
					"description": "The list of Entity Damage Sources that will cause this mob to panic",
					"default": "all"
				},
				"force": {
					"type": "Boolean",
					"description": "If true, this mob will not stop panicking until it can't move anymore or the goal is removed from it",
					"default": "false"
				},
				"ignore_mob_damage": {
					"type": "Boolean",
					"description": "If true, the mob will not panic in response to damage from other mobs. This overrides the damage types in \"damage_sources\"",
					"default": "false"
				},
				"prefer_water": {
					"type": "Boolean",
					"description": "If true, the mob will prefer water over land",
					"default": "false"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.panic": {
						"priority": 2,
						"prefer_water": true,
						"speed_multiplier": 1.5,
						"ignore_mob_damage": true,
						"force": true
					}
				},
				{
					"minecraft:behavior.panic": {
						"priority": 0,
						"prefer_water": true,
						"speed_multiplier": 1.2
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"bee",
				"cat",
				"chicken",
				"cow",
				"dolphin",
				"donkey",
				"fox",
				"goat",
				"hoglin",
				"horse",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"parrot",
				"pig",
				"piglin",
				"polar_bear",
				"rabbit",
				"sheep",
				"skeleton_horse",
				"strider",
				"turtle",
				"villager_v2",
				"villager",
				"wandering_trader",
				"zombie"
			]
		},
		"minecraft:behavior.peek": {
			"examples": [{ "minecraft:behavior.peek": { "priority": 2 } }]
		},
		"minecraft:behavior.pet_sleep_with_owner": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"search_height": {
					"type": "Integer",
					"description": "Height in blocks from the owner the pet can be to sleep with owner.",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The range that the mob will search for a treasure chest within a ruin or shipwreck to move towards.",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.pet_sleep_with_owner": {
						"priority": 2,
						"search_range": 8,
						"cooldown_time": 10,
						"speed_multiplier": 3
					}
				},
				{
					"minecraft:behavior.pet_sleep_with_owner": {
						"priority": 2,
						"speed_multiplier": 1.2,
						"search_radius": 10,
						"search_height": 10,
						"goal_radius": 1
					}
				}
			],
			"type": "goal",
			"usedIn": ["cat"]
		},
		"minecraft:behavior.pickup_items": {
			"properties": {
				"can_pickup_any_item": {
					"type": "Boolean",
					"description": "If true, the mob can pickup any item",
					"default": "false"
				},
				"can_pickup_to_hand_or_equipment": {
					"type": "Boolean",
					"description": "If true, the mob can pickup items to its hand or armor slots",
					"default": "true"
				},
				"excluded_items": {
					"type": "List",
					"description": "List of items this mob will not pick up",
					"default": "_not set_"
				},
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"max_dist": {
					"type": "Decimal",
					"description": "Maximum distance this mob will look for items to pick up",
					"default": "0.0"
				},
				"pickup_based_on_chance": {
					"type": "Boolean",
					"description": "If true, depending on the difficulty, there is a random chance that the mob may not be able to pickup items",
					"default": "false"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"track_target": {
					"type": "Boolean",
					"description": "If true, this mob will chase after the target as long as it's a valid target",
					"default": "false"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.pickup_items": {
						"priority": 2,
						"can_pickup_any_item": true,
						"can_pickup_to_hand_or_equipment": true,
						"excluded_items": ["iron_sword"],
						"goal_radius": 0.5,
						"max_dist": 0,
						"speed_multiplayer": 1,
						"track_target": true
					}
				},
				{
					"minecraft:behavior.pickup_items": {
						"priority": 8,
						"max_dist": 3,
						"goal_radius": 2,
						"speed_multiplier": 1,
						"pickup_based_on_chance": true,
						"can_pickup_any_item": true
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"drowned",
				"fox",
				"husk",
				"piglin",
				"pillager",
				"skeleton",
				"stray",
				"villager_v2",
				"villager",
				"wither skeleton",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.play": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.play": {
						"priority": 2,
						"speed_multiplier": 1
					}
				},
				{
					"minecraft:behavior.play": {
						"priority": 8,
						"speed_multiplier": 0.32
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2", "villager"]
		},
		"minecraft:behavior.player_ride_tamed": {
			"examples": [
				{ "minecraft:behavior.player_ride_tamed": {} },
				{ "minecraft:behavior.player_ride_tamed": {} }
			],
			"usedIn": [
				"donkey",
				"horse",
				"mule",
				"skeleton_horse",
				"zombie_horse"
			]
		},
		"minecraft:behavior.play_dead": {
			"properties": { "undefined": { "default": "1.000000" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.play_dead": {
						"play_dead": true,
						"duration": 10,
						"force_below_heath": 5,
						"random_damage_range": [2, 5],
						"damage_sources": "entity_attack",
						"apply_regeneration_": true
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.raid_garden": {
			"properties": {
				"blocks": {
					"type": "List",
					"description": "Blocks that the mob is looking for to eat/raid",
					"default": "_not set_"
				},
				"eat_delay": {
					"type": "Integer",
					"description": "Time in seconds between each time it eats/raids",
					"default": "2"
				},
				"full_delay": {
					"type": "Integer",
					"description": "Amount of time in seconds before this mob wants to eat/raid again after eating its maximum",
					"default": "100"
				},
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"initial_eat_delay": {
					"type": "Integer",
					"description": "Time in seconds before starting to eat/raid once it arrives at it",
					"default": "0"
				},
				"max_to_eat": {
					"type": "Integer",
					"description": "Maximum number of crops this entity wants to eat/raid. If set to zero or less then it doesn't have a maximum",
					"default": "6"
				},
				"search_range": {
					"type": "Integer",
					"description": "Distance in blocks the mob will look for crops to eat",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.raid_garden": {
						"priority": 2,
						"eat_delay": 2,
						"full_delay": 100,
						"goal_radius": 0.5,
						"initial_eat_delay": 100,
						"max_to_eat": 5,
						"search_range": 0,
						"speed_multiplier": 2
					}
				},
				{
					"minecraft:behavior.raid_garden": {
						"priority": 5,
						"blocks": ["minecraft:carrots"],
						"search_range": 16,
						"goal_radius": 0.8
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox", "rabbit"]
		},
		"minecraft:behavior.ram_attack": {
			"properties": { "undefined": { "default": "1.000000" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.ram_attack": {
						"ram_distance": 5,
						"min_ram_distance": 2,
						"knockback_force": 10,
						"baby_knockback_modifier": 4,
						"knockback_height": 0.1,
						"run_speed": 1,
						"ram_speed": 2,
						"pre_ram_sound": "pre_ram",
						"ram_impact_sound": "ram_impact",
						"cooldown_range": [10, 20]
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.random_breach": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"interval": {
					"type": "Integer",
					"description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
					"default": "120"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"xz_dist": {
					"type": "Integer",
					"description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
					"default": "10"
				},
				"y_dist": {
					"type": "Integer",
					"description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
					"default": "7"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_breach": {
						"priority": 2,
						"interval": 50,
						"cooldown_time": 2,
						"speed_multiplier": 1,
						"xz_dist": 6,
						"y_dist": 4
					}
				},
				{
					"minecraft:behavior.random_breach": {
						"priority": 6,
						"interval": 50,
						"xz_dist": 6,
						"cooldown_time": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["dolphin"]
		},
		"minecraft:behavior.random_fly": {
			"properties": {
				"can_land_on_trees": {
					"type": "Boolean",
					"description": "If true, the mob can stop flying and land on a tree instead of the ground",
					"default": "true"
				},
				"xz_dist": {
					"type": "Integer",
					"description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
					"default": "10"
				},
				"y_dist": {
					"type": "Integer",
					"description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
					"default": "7"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_fly": {
						"priority": 2,
						"can_land_on_tree": true,
						"speed_multiplier": 1.2,
						"avoid_damage_blocks": false,
						"xy_dist": 3,
						"y_dist": 10,
						"y_offset": 0
					}
				},
				{
					"minecraft:behavior.random_fly": {
						"priority": 2,
						"xz_dist": 15,
						"y_dist": 1,
						"y_offset": 0,
						"speed_multiplier": 1,
						"can_land_on_trees": true,
						"avoid_damage_blocks": true
					}
				}
			],
			"type": "goal",
			"usedIn": ["parrot"]
		},
		"minecraft:behavior.random_hover": {
			"properties": {
				"hover_height": {
					"type": "Range [a, b]",
					"description": "The height above the surface which the mob will try to maintain",
					"default": "[0.0, 0.0]"
				},
				"interval": {
					"type": "Integer",
					"description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
					"default": "120"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"xz_dist": {
					"type": "Integer",
					"description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
					"default": "10"
				},
				"y_dist": {
					"type": "Integer",
					"description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
					"default": "7"
				},
				"y_offset": {
					"type": "Decimal",
					"description": "Height in blocks to add to the selected target position",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_hover": {
						"xz_dist": 10,
						"y_dist": 7,
						"y_offset": -2,
						"hover_height": [1, 3]
					}
				},
				{
					"minecraft:behavior.random_hover": {
						"priority": 12,
						"xz_dist": 8,
						"y_dist": 8,
						"y_offset": -1,
						"interval": 1,
						"hover_height": [1, 4]
					}
				}
			],
			"type": "goal",
			"usedIn": ["bee"]
		},
		"minecraft:behavior.random_look_around": {
			"properties": {
				"look_time": {
					"type": "Range [a, b]",
					"description": "The range of time in seconds the mob will stay looking in a random direction before looking elsewhere",
					"default": "[2, 4]"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_look_around": {
						"priority": 2,
						"look_time": [1, 5]
					}
				},
				{ "minecraft:behavior.random_look_around": { "priority": 5 } }
			],
			"type": "goal",
			"usedIn": [
				"bee",
				"blaze",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"enderman",
				"fox",
				"goat",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"mooshroom",
				"mule",
				"panda",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"sheep",
				"shulker",
				"skeleton",
				"skeleton_horse",
				"snow_golem",
				"spider",
				"stray",
				"strider",
				"wandering_trader",
				"witch",
				"wither_skeleton",
				"wither",
				"zoglin",
				"zombie_horse",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.random_look_around_and_sit": {
			"properties": {
				"max_look_count": {
					"type": "Integer",
					"description": "The max amount of unique looks a mob will have while looking around.",
					"default": "2"
				},
				"max_look_time": {
					"type": "Integer",
					"description": "The max amount of time (in ticks) a mob will stay looking at a direction while looking around.",
					"default": "40"
				},
				"min_look_count": {
					"type": "Integer",
					"description": "The min amount of unique looks a mob will have while looking around.",
					"default": "1"
				},
				"min_look_time": {
					"type": "Integer",
					"description": "The min amount of time (in ticks) a mob will stay looking at a direction while looking around.",
					"default": "20"
				},
				"probability": {
					"type": "Decimal",
					"description": "The probability of randomly looking around/sitting.",
					"default": "0.02"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_look_around_and_sit": {
						"priority": 2,
						"max_look_count": 4,
						"min_look_count": 1,
						"max_look_time": 60,
						"min_look_time": 5,
						"probability": 0.35
					}
				},
				{
					"minecraft:behavior.random_look_around_and_sit": {
						"priority": 12,
						"min_look_count": 2,
						"max_look_count": 5,
						"min_look_time": 80,
						"max_look_time": 100,
						"probability": 0.001
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox"]
		},
		"minecraft:behavior.random_sitting": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"min_sit_time": {
					"type": "Decimal",
					"description": "The minimum amount of time in seconds before the mob can stand back up",
					"default": "10"
				},
				"start_chance": {
					"type": "Decimal",
					"description": "This is the chance that the mob will start this goal, from 0 to 1",
					"default": "0.1"
				},
				"stop_chance": {
					"type": "Decimal",
					"description": "This is the chance that the mob will stop this goal, from 0 to 1",
					"default": "0.3"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_sitting": {
						"priority": 5,
						"cooldown_time": 1.5,
						"min_sit_time": 25,
						"start_chance": 0.25,
						"stop_chance": 0.75
					}
				},
				{
					"minecraft:behavior.random_sitting": {
						"priority": 6,
						"start_chance": 0.02,
						"stop_chance": 0.2,
						"cooldown": 25,
						"min_sit_time": 15
					}
				}
			],
			"type": "goal",
			"usedIn": ["panda"]
		},
		"minecraft:behavior.random_stroll": {
			"properties": {
				"interval": {
					"type": "Integer",
					"description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
					"default": "120"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"xz_dist": {
					"type": "Integer",
					"description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
					"default": "10"
				},
				"y_dist": {
					"type": "Integer",
					"description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
					"default": "7"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_stroll": {
						"priority": 2,
						"interval": 50,
						"speed_multiplier": 1,
						"xy_dist": 10,
						"y_dist": 7
					}
				},
				{
					"minecraft:behavior.random_stroll": {
						"priority": 8,
						"speed_multiplier": 0.8
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"axolotl",
				"blaze",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"enderman",
				"endermite",
				"evocation_illager",
				"fox",
				"goat",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"polar_bear",
				"rabbit",
				"ravager",
				"sheep",
				"skeleton",
				"skeleton_horse",
				"snow_golem",
				"spider",
				"stray",
				"strider",
				"turtle",
				"villager_v2",
				"villager",
				"vindicator",
				"witch",
				"wither skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:behavior.random_swim": {
			"properties": {
				"avoid_surface": {
					"type": "Boolean",
					"description": "If true, the mob will avoid surface water blocks by swimming below them",
					"default": "true"
				},
				"interval": {
					"type": "Integer",
					"description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
					"default": "120"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"xz_dist": {
					"type": "Integer",
					"description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
					"default": "10"
				},
				"y_dist": {
					"type": "Integer",
					"description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
					"default": "7"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.random_swim": {
						"priority": 8,
						"avoid_surface": true,
						"interval": 42,
						"speed_multiplier": 1,
						"xy_dist": 10,
						"y_dist": 7
					}
				},
				{
					"minecraft:behavior.random_swim": {
						"priority": 7,
						"speed_multiplier": 1,
						"interval": 80,
						"avoid_surface": false
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"axolotl",
				"dolphin",
				"elder_guardian",
				"fish",
				"guardian",
				"pufferfish",
				"salmon",
				"tropicalfish",
				"turtle"
			]
		},
		"minecraft:behavior.ranged_attack": {
			"properties": { "undefined": { "default": "30" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.ranged_attack": {
						"priority": 8,
						"attack_interval_min": 1,
						"attack_interval_max": 1,
						"attack_radius": 8,
						"attack_radius_min": 4,
						"speed_multiplier": 1,
						"target_in_sight_time": 0.1
					}
				}
			],
			"type": "goal"
		},
		"minecraft:behavior.receive_love": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.receive_love": {
						"priority": 2,
						"speed_multiplier": 1
					}
				},
				{ "minecraft:behavior.receive_love": { "priority": 6 } }
			],
			"type": "goal",
			"usedIn": ["villager_v2", "villager"]
		},
		"minecraft:behavior.restrict_open_door": {
			"examples": [
				{ "minecraft:behavior.restrict_open_door": { "priority": 2 } },
				{ "minecraft:behavior.restrict_open_door": { "priority": 5 } }
			],
			"usedIn": ["villager", "wandering_trader"]
		},
		"minecraft:behavior.restrict_sun": {
			"examples": [
				{ "minecraft:behavior.restrict_sun": { "priority": 2 } }
			]
		},
		"minecraft:behavior.rise_to_liquid_level": {
			"properties": {
				"liquid_y_offset": {
					"type": "Decimal",
					"description": "Vertical offset from the liquid",
					"default": "0.0"
				},
				"rise_delta": {
					"type": "Decimal",
					"description": "Displacement for how much the entity will move up in the vertical axis",
					"default": "0.0"
				},
				"sink_delta": {
					"type": "Decimal",
					"description": "Displacement for how much the entity will move down in the vertical axis",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.rise_to_liquid_level": {
						"priority": 0,
						"liquid_y_offset": 0.25,
						"rise_delta": 0.5,
						"sink_delta": 0.5
					}
				},
				{
					"minecraft:behavior.rise_to_liquid_level": {
						"priority": 0,
						"liquid_y_offset": 0.25,
						"rise_delta": 0.01,
						"sink_delta": 0.01
					}
				}
			],
			"type": "goal",
			"usedIn": ["strider"]
		},
		"minecraft:behavior.roll": {
			"properties": {
				"probability": {
					"type": "Decimal",
					"description": "The probability that the mob will use the goal.",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.roll": {
						"priority": 7,
						"probability": 0.6
					}
				},
				{
					"minecraft:behavior.roll": {
						"priority": 12,
						"probability": 0.013
					}
				}
			],
			"type": "goal",
			"usedIn": ["panda"]
		},
		"minecraft:behavior.run_around_like_crazy": {
			"properties": {
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.run_around_like_crazy": {
						"priority": 1,
						"speed_multiplier": 1.5
					}
				},
				{
					"minecraft:behavior.run_around_like_crazy": {
						"priority": 1,
						"speed_multiplier": 1.2
					}
				}
			],
			"type": "goal",
			"usedIn": ["donkey", "horse", "llama", "mule"]
		},
		"minecraft:behavior.scared": {
			"properties": {
				"sound_interval": {
					"type": "Integer",
					"description": "The interval in which a sound will play when active in a 1/delay chance to kick off",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:behavior.scared": { "sound_interval": 0 } }
			],
			"type": "goal"
		},
		"minecraft:behavior.send_event": {
			"properties": {
				"cast_duration": {
					"type": "Decimal",
					"description": "Time in seconds for the entire event sending process",
					"default": "_not set_"
				},
				"look_at_target": {
					"type": "Boolean",
					"description": "If true, the mob will face the entity it sends an event to",
					"default": "true"
				},
				"sequence": {
					"type": "List",
					"description": "List of events to send",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.send_event": {
						"priority": 2,
						"cast_duration": 2.5,
						"look_at_target": true,
						"sequence": [
							{
								"base_delay": 1.25,
								"event": "wololo",
								"sound_event": "prepare.wololo"
							}
						]
					}
				},
				{
					"minecraft:behavior.send_event": {
						"priority": 3,
						"event_choices": [
							{
								"min_activation_range": 0,
								"max_activation_range": 16,
								"cooldown_time": 5,
								"cast_duration": 3,
								"particle_color": "#FFB38033",
								"weight": 3,
								"filters": {
									"all_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "sheep"
										},
										{
											"test": "is_color",
											"subject": "other",
											"value": "blue"
										}
									]
								},
								"start_sound_event": "cast.spell",
								"sequence": [
									{
										"base_delay": 2,
										"event": "wololo",
										"sound_event": "prepare.wololo"
									}
								]
							}
						]
					}
				}
			],
			"type": "goal",
			"nested": {
				"1": {
					"base_delay": {
						"type": "Decimal",
						"description": "Amount of time in seconds before starting this step",
						"default": "0.0"
					},
					"event": {
						"type": "String",
						"description": "The event to send to the entity",
						"default": "_not set_"
					},
					"sound_event": {
						"type": "String",
						"description": "The sound event to play when this step happens",
						"default": "_not set_"
					}
				}
			},
			"usedIn": ["evocation_illager"]
		},
		"minecraft:behavior.share_items": {
			"properties": {
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entities this mob will share items with",
					"default": "_not set_"
				},
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"max_dist": {
					"type": "Decimal",
					"description": "Maximum distance in blocks this mob will look for entities to share items with",
					"default": "0.0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.share_items": {
						"priority": 8,
						"speed_multiplier": 1,
						"max_dist": 2,
						"goal_radius": 3,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "villager"
								}
							}
						]
					}
				},
				{
					"minecraft:behavior.share_items": {
						"priority": 9,
						"max_dist": 3,
						"goal_radius": 2,
						"speed_multiplier": 0.5,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "villager"
								}
							}
						]
					}
				}
			],
			"type": "goal",
			"nested": {
				"0": {
					"filters": {
						"type": "Minecraft Filter",
						"description": "Conditions that make this entry in the list valid.",
						"default": ""
					},
					"max_dist": {
						"type": "Decimal",
						"description": "Maximum distance this mob can be away to be a valid choice.",
						"default": "16"
					},
					"must_see": {
						"type": "Boolean",
						"description": "If true, the mob has to be visible to be a valid choice.",
						"default": "false"
					},
					"must_see_forget_duration": {
						"type": "Boolean",
						"description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more.",
						"default": "3.0"
					},
					"sprint_speed_multiplier": {
						"type": "Decimal",
						"description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged.",
						"default": "1.0"
					},
					"walk_speed_multiplier": {
						"type": "Decimal",
						"description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged.",
						"default": "1.0"
					}
				}
			},
			"usedIn": ["villager_v2", "villager"]
		},
		"minecraft:behavior.silverfish_merge_with_stone": {
			"examples": [
				{
					"minecraft:behavior.silverfish_merge_with_stone": {
						"priority": 2
					}
				},
				{
					"minecraft:behavior.silverfish_merge_with_stone": {
						"priority": 5
					}
				}
			],
			"usedIn": ["silverfish"]
		},
		"minecraft:behavior.silverfish_wake_up_friends": {
			"examples": [
				{
					"minecraft:behavior.silverfish_wake_up_friends": {
						"priority": 2
					}
				},
				{
					"minecraft:behavior.silverfish_wake_up_friends": {
						"priority": 1
					}
				}
			],
			"usedIn": ["silverfish"]
		},
		"minecraft:behavior.skeleton_horse_trap": {
			"properties": {
				"duration": {
					"type": "Decimal",
					"description": "Amount of time in seconds the trap exists. After this amount of time is elapsed, the trap is removed from the world if it hasn't been activated",
					"default": "1.0"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Distance in blocks that the player has to be within to trigger the horse trap",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.skeleton_horse_trap": {
						"priority": 2,
						"duration": 1,
						"within_radius": 12
					}
				},
				{
					"minecraft:behavior.skeleton_horse_trap": {
						"within_radius": 10,
						"duration": 900,
						"priority": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["skeleton_horse"]
		},
		"minecraft:behavior.sleep": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"sleep_collider_height": {
					"type": "Decimal",
					"description": "The height of the mob's collider while sleeping",
					"default": "1.0"
				},
				"sleep_collider_width": {
					"type": "Decimal",
					"description": "The width of the mob's collider while sleeping",
					"default": "1.0"
				},
				"sleep_y_offset": {
					"type": "Decimal",
					"description": "The y offset of the mob's collider while sleeping",
					"default": "1.0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"timeout_cooldown": {
					"type": "Decimal",
					"description": "The cooldown time in seconds before the goal can be reused after a internal failure or timeout condition",
					"default": "8.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.sleep": {
						"priority": 2,
						"cooldown_time": 0,
						"sleep_collider_height": 1,
						"sleep_collider_width": 1,
						"sleep_y_offset": 1,
						"speed_multiplier": 1,
						"timer_cooldown": 8
					}
				},
				{
					"minecraft:behavior.sleep": {
						"priority": 3,
						"goal_radius": 1.5,
						"speed_multiplier": 0.6,
						"sleep_collider_height": 0.3,
						"sleep_collider_width": 1,
						"sleep_y_offset": 0.6,
						"timeout_cooldown": 10
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:behavior.slime_attack": {
			"properties": { "undefined": { "default": "10" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.slime_attack": {
						"priority": 2,
						"stalk_speed": 0.8,
						"max_stalk_dist": 12,
						"leap_height": 0.7,
						"leap_dist": 0.65,
						"pounce_max_dist": 5,
						"interest_time": 4,
						"stuck_time": 2,
						"strike_dist": 2
					}
				},
				{ "minecraft:behavior.slime_attack": { "priority": 3 } }
			],
			"type": "goal",
			"usedIn": ["magma_cube", "slime"]
		},
		"minecraft:behavior.slime_float": {
			"properties": { "undefined": { "default": "1.2" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.slime_float": {
						"jump_chance_percentage": 0.8,
						"speed_multiplier": 1.2
					}
				},
				{
					"minecraft:behavior.slime_float": {
						"priority": 1,
						"jump_chance_percentage": 0.8,
						"speed_multiplier": 1.2
					}
				}
			],
			"type": "goal",
			"usedIn": ["magma_cube", "slime"]
		},
		"minecraft:behavior.slime_keep_on_jumping": {
			"properties": { "undefined": { "default": "1" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.slime_keep_on_jumping": {
						"speed_multiplier": 1
					}
				},
				{
					"minecraft:behavior.slime_keep_on_jumping": {
						"priority": 5,
						"speed_multiplier": 1
					}
				}
			],
			"type": "goal",
			"usedIn": ["magma_cube", "slime"]
		},
		"minecraft:behavior.slime_random_direction": {
			"properties": { "undefined": { "default": "360" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.slime_random_direction": {
						"priority": 3,
						"add_random_time_range": 3,
						"turn_range": 360,
						"min_change_direction_time": 2
					}
				},
				{
					"minecraft:behavior.slime_random_direction": {
						"priority": 4,
						"add_random_time_range": 3,
						"turn_range": 360,
						"min_change_direction_time": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["magma_cube", "slime"]
		},
		"minecraft:behavior.snacking": {
			"properties": {
				"items": {
					"type": "List",
					"description": "Items that we are interested in snacking on",
					"default": "_not set_"
				},
				"snacking_cooldown": {
					"type": "Decimal",
					"description": "The cooldown time in seconds before the mob is able to snack again",
					"default": "7.5"
				},
				"snacking_cooldown_min": {
					"type": "Decimal",
					"description": "The minimum time in seconds before the mob is able to snack again",
					"default": "0.5"
				},
				"snacking_stop_chance": {
					"type": "Decimal",
					"description": "This is the chance that the mob will stop snacking, from 0 to 1",
					"default": "0.0017"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.snacking": {
						"priority": 5,
						"snacking_cooldown": 25,
						"snacking_cooldown_min": 15,
						"snacking_stop_chance": 0.001,
						"items": ["cake"]
					}
				},
				{
					"minecraft:behavior.snacking": {
						"priority": 3,
						"snacking_cooldown": 17.5,
						"snacking_cooldown_min": 10,
						"snacking_stop_chance": 0.0011,
						"items": ["bamboo", "cake"]
					}
				}
			],
			"type": "goal",
			"usedIn": ["panda"]
		},
		"minecraft:behavior.sneeze": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"drop_item_chance": {
					"type": "Decimal",
					"description": "The probability that the mob will drop an item when it sneezes.",
					"default": "1.0"
				},
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types this mob will startle (cause to jump) when it sneezes.",
					"default": "_not set_"
				},
				"loot_table": {
					"type": "String",
					"description": "Loot table to select dropped items from.",
					"default": "_not set_"
				},
				"prepare_sound": {
					"type": "String",
					"description": "Sound to play when the sneeze is about to happen.",
					"default": "_not set_"
				},
				"prepare_time": {
					"type": "Decimal",
					"description": "The time in seconds that the mob takes to prepare to sneeze (while the prepare_sound is playing).",
					"default": "1.0"
				},
				"probability": {
					"type": "Decimal",
					"description": "The probability of sneezing. A value of 1.00 is 100%",
					"default": "0.02"
				},
				"sound": {
					"type": "String",
					"description": "Sound to play when the sneeze occurs.",
					"default": "_not set_"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Distance in blocks that mobs will be startled.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.sneeze": {
						"priority": 7,
						"probability": 0.0001666,
						"cooldown_time": 1,
						"within_radius": 10,
						"entity_types": [
							{
								"filters": {
									"all_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "panda"
										}
									]
								},
								"max_dist": 10
							}
						],
						"drop_item_chance": 0.001,
						"loot_table": "loot_tables/entities/panda_sneeze.json",
						"prepare_sound": "presneeze",
						"prepare_time": 1,
						"sound": "sneeze"
					}
				},
				{
					"minecraft:behavior.sneeze": {
						"priority": 7,
						"probability": 0.002,
						"cooldown_time": 1,
						"within_radius": 10,
						"entity_types": [
							{
								"filters": {
									"all_of": [
										{
											"test": "has_component",
											"subject": "other",
											"operator": "!=",
											"value": "minecraft:is_baby"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "panda"
										},
										{
											"test": "in_water",
											"subject": "other",
											"operator": "!=",
											"value": true
										},
										{
											"test": "on_ground",
											"operator": "==",
											"value": true
										}
									]
								},
								"max_dist": 10
							}
						],
						"drop_item_chance": 0.001,
						"loot_table": "loot_tables/entities/panda_sneeze.json",
						"prepare_sound": "presneeze",
						"prepare_time": 1,
						"sound": "sneeze"
					}
				}
			],
			"type": "goal",
			"nested": {
				"0": {
					"filters": {
						"type": "Minecraft Filter",
						"description": "Conditions that make this entry in the list valid.",
						"default": ""
					},
					"max_dist": {
						"type": "Decimal",
						"description": "Maximum distance this mob can be away to be a valid choice.",
						"default": "16"
					},
					"must_see": {
						"type": "Boolean",
						"description": "If true, the mob has to be visible to be a valid choice.",
						"default": "false"
					},
					"must_see_forget_duration": {
						"type": "Boolean",
						"description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more.",
						"default": "3.0"
					},
					"sprint_speed_multiplier": {
						"type": "Decimal",
						"description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged.",
						"default": "1.0"
					},
					"walk_speed_multiplier": {
						"type": "Decimal",
						"description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged.",
						"default": "1.0"
					}
				}
			},
			"usedIn": ["panda"]
		},
		"minecraft:behavior.squid_dive": {
			"examples": [
				{ "minecraft:behavior.squid_dive": { "priority": 2 } },
				{ "minecraft:behavior.squid_dive": { "priority": 2 } }
			],
			"usedIn": ["glow_squid", "squid"]
		},
		"minecraft:behavior.squid_flee": {
			"examples": [
				{ "minecraft:behavior.squid_flee": { "priority": 2 } },
				{ "minecraft:behavior.squid_flee": { "priority": 2 } }
			],
			"usedIn": ["glow_squid", "squid"]
		},
		"minecraft:behavior.squid_idle": {
			"examples": [
				{ "minecraft:behavior.squid_idle": { "priority": 2 } },
				{ "minecraft:behavior.squid_idle": { "priority": 2 } }
			],
			"usedIn": ["glow_squid", "squid"]
		},
		"minecraft:behavior.squid_move_away_from_ground": {
			"examples": [
				{
					"minecraft:behavior.squid_move_away_from_ground": {
						"priority": 2
					}
				},
				{
					"minecraft:behavior.squid_move_away_from_ground": {
						"priority": 1
					}
				}
			],
			"usedIn": ["glow_squid", "squid"]
		},
		"minecraft:behavior.squid_out_of_water": {
			"examples": [
				{ "minecraft:behavior.squid_out_of_water": { "priority": 2 } },
				{ "minecraft:behavior.squid_out_of_water": { "priority": 2 } }
			],
			"usedIn": ["glow_squid", "squid"]
		},
		"minecraft:behavior.stalk_and_pounce_on_target": {
			"properties": {
				"interest_time": {
					"type": "Decimal",
					"description": "The amount of time the mob will be interested before pouncing. This happens when the mob is within range of pouncing",
					"default": "2.0"
				},
				"leap_distance": {
					"type": "Decimal",
					"description": "The distance in blocks the mob jumps in the direction of its target",
					"default": "0.8"
				},
				"leap_height": {
					"type": "Decimal",
					"description": "The height in blocks the mob jumps when leaping at its target",
					"default": "0.9"
				},
				"max_stalk_dist": {
					"type": "Decimal",
					"description": "The maximum distance away a target can be before the mob gives up on stalking",
					"default": "10.0"
				},
				"pounce_max_dist": {
					"type": "Decimal",
					"description": "The maximum distance away from the target in blocks to begin pouncing at the target",
					"default": "5.0"
				},
				"set_persistent": {
					"type": "Boolean",
					"description": "Allows the actor to be set to persist upon targeting a player",
					"default": "false"
				},
				"stalk_speed": {
					"type": "Decimal",
					"description": "The movement speed in which you stalk your target",
					"default": "1.2"
				},
				"strike_dist": {
					"type": "Decimal",
					"description": "The max distance away from the target when landing from the pounce that will still result in damaging the target",
					"default": "2.0"
				},
				"stuck_time": {
					"type": "Decimal",
					"description": "The amount of time the mob will be stuck if they fail and land on a block they can be stuck on",
					"default": "2.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.stalk_and_pounce_on_target": {
						"priority": 2,
						"stalk_speed": 0.8,
						"max_stalk_dist": 12,
						"leap_height": 0.7,
						"leap_dist": 0.65,
						"pounce_max_dist": 5,
						"interest_time": 4,
						"stuck_time": 2,
						"strike_dist": 2
					}
				},
				{
					"minecraft:behavior.stalk_and_pounce_on_target": {
						"priority": 7,
						"stalk_speed": 1.2,
						"max_stalk_dist": 12,
						"leap_height": 0.9,
						"leap_dist": 0.8,
						"pounce_max_dist": 5,
						"interest_time": 2,
						"stuck_time": 2,
						"strike_dist": 2,
						"stuck_blocks": {
							"test": "is_block",
							"subject": "block",
							"operator": "==",
							"value": "snow_layer"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox"]
		},
		"minecraft:behavior.stay_while_sitting": {
			"examples": [
				{ "minecraft:behavior.stay_while_sitting": { "priority": 3 } },
				{ "minecraft:behavior.stay_while_sitting": { "priority": 3 } }
			],
			"usedIn": ["cat", "ocelot", "parrot", "wolf"]
		},
		"minecraft:behavior.stomp_attack": {
			"properties": { "undefined": { "default": "30" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.stomp_attack": {
						"priority": 1,
						"attack_once": 0.55,
						"attack_types": "melee",
						"cooldown_time": 1,
						"inner_boundary_time_increase": 0.25,
						"max_dist": 0.9,
						"max_path_time": 0.55,
						"melee_fov": 90,
						"min_path_time": 0.2,
						"no_damage_range_multiplier": 2,
						"set_persistent": false,
						"speed_multiplier": 1,
						"outer_boundary_time_increase": 0.5,
						"path_fail_time_increase": 0.75,
						"path_inner_boundary": 16,
						"path_outer_boundary": 32,
						"random_stop_interval": 0,
						"require_complete_path": false,
						"stomp_range_multiplier": 2,
						"target_dist": 16,
						"track_target": false,
						"x_max_head_rotation": 30,
						"y_max_head_rotation": 30
					}
				},
				{
					"minecraft:behavior.stomp_attack": {
						"priority": 1,
						"track_target": true,
						"require_complete_path": true,
						"stomp_range_multiplier": 2,
						"no_damage_range_multiplier": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["polar_bear"]
		},
		"minecraft:behavior.stomp_turtle_egg": {
			"properties": {
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"interval": {
					"type": "Integer",
					"description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
					"default": "120"
				},
				"search_height": {
					"type": "Integer",
					"description": "Height in blocks the mob will look for turtle eggs to move towards",
					"default": "1"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks it will look for turtle eggs to move towards",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.stomp_turtle_egg": {
						"priority": 3,
						"speed_multiplier": 2,
						"search_range": 10,
						"search_height": 1,
						"interval": 5,
						"goal_radius": 0.75
					}
				},
				{
					"minecraft:behavior.stomp_turtle_egg": {
						"priority": 4,
						"speed_multiplier": 1,
						"search_range": 10,
						"search_height": 2,
						"goal_radius": 1.14,
						"interval": 20
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"drowned",
				"husk",
				"zombie_pigman",
				"zombie_villager",
				"zombie_villager_v2",
				"zombie"
			]
		},
		"minecraft:behavior.stroll_towards_village": {
			"properties": {
				"cooldown_time": {
					"type": "Decimal",
					"description": "Time in seconds the mob has to wait before using the goal again",
					"default": "0.0"
				},
				"goal_radius": {
					"type": "Decimal",
					"description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
					"default": "0.5"
				},
				"search_range": {
					"type": "Integer",
					"description": "The distance in blocks to search for points inside villages. If <= 0, find the closest village regardless of distance.",
					"default": "0"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"start_chance": {
					"type": "Decimal",
					"description": "This is the chance that the mob will start this goal, from 0 to 1",
					"default": "0.1"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.stroll_towards_village": {
						"priority": 4,
						"speed_multiplier": 1,
						"goal_radius": 4,
						"cooldown_time": 10,
						"search_range": 64,
						"start_chance": 0.02
					}
				},
				{
					"minecraft:behavior.stroll_towards_village": {
						"priority": 11,
						"speed_multiplier": 1,
						"goal_radius": 3,
						"cooldown_time": 10,
						"search_range": 32,
						"start_chance": 0.005
					}
				}
			],
			"type": "goal",
			"usedIn": ["fox"]
		},
		"minecraft:behavior.summon_entity": {
			"properties": {
				"summon_choices": {
					"type": "List",
					"description": "List of spells for the mob to use to summon entities.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.summon_entity": {
						"priority": 2,
						"summon_choices": [
							{
								"min_activation_range": 0,
								"max_activation_range": 5,
								"cooldown_time": 10,
								"weight": 2,
								"cast_duration": 3,
								"particle_color": "#800080",
								"start_sound_event": "cast.spell",
								"sequence": [
									{
										"shape": "circle",
										"target": "self",
										"base_delay": 1,
										"delay_per_summon": 0,
										"num_entities_spawned": 5,
										"entity_type": "minecraft:spider",
										"size": 1.5,
										"entity_lifespan": 1.1,
										"sound_event": "prepare.attack"
									},
									{
										"shape": "circle",
										"target": "self",
										"base_delay": 0.15,
										"delay_per_summon": 0,
										"num_entities_spawned": 8,
										"entity_type": "minecraft:skeleton",
										"size": 2.5,
										"entity_lifespan": 1.1
									}
								]
							},
							{
								"min_activation_range": 3,
								"weight": 3,
								"cooldown_time": 5,
								"cast_duration": 2,
								"particle_color": "#FF0000",
								"start_sound_event": "cast.spell",
								"sequence": [
									{
										"shape": "line",
										"target": "self",
										"base_delay": 1,
										"delay_per_summon": 0.05,
										"num_entities_spawned": 16,
										"entity_type": "minecraft:evocation_fang",
										"size": 20,
										"entity_lifespan": 1.1
									}
								]
							},
							{
								"weight": 1,
								"cooldown_time": 17,
								"cast_duration": 5,
								"particle_color": "#FFB3B3CC",
								"sequence": [
									{
										"shape": "circle",
										"target": "self",
										"base_delay": 5,
										"num_entities_spawned": 3,
										"entity_type": "minecraft:vex",
										"summon_cap": 8,
										"summon_cap_radius": 16,
										"size": 1,
										"sound_event": "prepare.summon"
									}
								]
							}
						]
					}
				},
				{
					"minecraft:behavior.summon_entity": {
						"priority": 2,
						"summon_choices": [
							{
								"min_activation_range": 0,
								"max_activation_range": 3,
								"cooldown_time": 5,
								"weight": 3,
								"cast_duration": 2,
								"particle_color": "#FF664D59",
								"start_sound_event": "cast.spell",
								"sequence": [
									{
										"shape": "circle",
										"target": "self",
										"base_delay": 1,
										"delay_per_summon": 0,
										"num_entities_spawned": 5,
										"entity_type": "minecraft:evocation_fang",
										"size": 1.5,
										"entity_lifespan": 1.1,
										"sound_event": "prepare.attack"
									},
									{
										"shape": "circle",
										"target": "self",
										"base_delay": 0.15,
										"delay_per_summon": 0,
										"num_entities_spawned": 8,
										"entity_type": "minecraft:evocation_fang",
										"size": 2.5,
										"entity_lifespan": 1.1
									}
								]
							},
							{
								"min_activation_range": 3,
								"weight": 3,
								"cooldown_time": 5,
								"cast_duration": 2,
								"particle_color": "#FF664D59",
								"start_sound_event": "cast.spell",
								"sequence": [
									{
										"shape": "line",
										"target": "self",
										"base_delay": 1,
										"delay_per_summon": 0.05,
										"num_entities_spawned": 16,
										"entity_type": "minecraft:evocation_fang",
										"size": 20,
										"entity_lifespan": 1.1
									}
								]
							},
							{
								"weight": 1,
								"cooldown_time": 17,
								"cast_duration": 5,
								"particle_color": "#FFB3B3CC",
								"sequence": [
									{
										"shape": "circle",
										"target": "self",
										"base_delay": 5,
										"num_entities_spawned": 3,
										"entity_type": "minecraft:vex",
										"summon_cap": 8,
										"summon_cap_radius": 16,
										"size": 1,
										"sound_event": "prepare.summon"
									}
								]
							}
						]
					}
				}
			],
			"type": "goal",
			"nested": {
				"1": {
					"base_delay": {
						"type": "Decimal",
						"description": "Amount of time in seconds to wait before this step starts",
						"default": "0.0"
					},
					"delay_per_summon": {
						"type": "Decimal",
						"description": "Amount of time in seconds before each entity is summoned in this step",
						"default": "0.0"
					},
					"entity_lifespan": {
						"type": "Decimal",
						"description": "Amount of time in seconds that the spawned entity will be alive for. A value of -1.0 means it will remain alive for as long as it can",
						"default": "-1.0"
					},
					"[entity_type](../Definitions/NestedTables/entity_types.md)": {
						"type": "String",
						"description": "The entity type of the entities we will spawn in this step",
						"default": "_not set_"
					},
					"num_entities_spawned": {
						"type": "Integer",
						"description": "Number of entities that will be spawned in this step",
						"default": "1"
					},
					"shape": {
						"type": "String",
						"description": "The base shape of this step. Valid values are circle and line",
						"default": "line"
					},
					"size": {
						"type": "Decimal",
						"description": "The base size of the entity",
						"default": "1.0"
					},
					"sound_event": {
						"type": "String",
						"description": "The sound event to play for this step",
						"default": "_not set_"
					},
					"summon_cap": {
						"type": "Integer",
						"description": "Maximum number of summoned entities at any given time",
						"default": "0"
					},
					"summon_cap_radius": {
						"type": "Decimal",
						"description": "Maximum radius where the summon entities can spawn",
						"default": "0.0"
					},
					"target": {
						"type": "String",
						"description": "The target of the spell. This is where the spell will start (line will start here, circle will be centered here)",
						"default": "self"
					}
				}
			},
			"usedIn": ["evocation_illager"]
		},
		"minecraft:behavior.swell": {
			"properties": {
				"start_distance": {
					"type": "Decimal",
					"description": "This mob starts swelling when a target is at least this many blocks away",
					"default": "10.0"
				},
				"stop_distance": {
					"type": "Decimal",
					"description": "This mob stops swelling when a target has moved away at least this many blocks",
					"default": "2.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.swell": {
						"priority": 3,
						"start_distance": 15,
						"stop_distance": 5
					}
				},
				{
					"minecraft:behavior.swell": {
						"start_distance": 2.5,
						"stop_distance": 6,
						"priority": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["creeper"]
		},
		"minecraft:behavior.swim_idle": {
			"properties": { "undefined": { "default": "0.1" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.swim_idle": {
						"priority": 5,
						"idle_time": 5,
						"success_rate": 0.1
					}
				},
				{
					"minecraft:behavior.swim_idle": {
						"priority": 5,
						"idle_time": 5,
						"success_rate": 0.1
					}
				}
			],
			"type": "goal",
			"usedIn": ["axolotl", "fish", "salmon", "tropicalfish"]
		},
		"minecraft:behavior.swim_wander": {
			"properties": { "undefined": { "default": "5" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.swim_wander": {
						"priority": 4,
						"interval": 0.00833,
						"look_ahead": 5,
						"speed_multiplier": 1,
						"wander_time": 5
					}
				},
				{
					"minecraft:behavior.swim_wander": {
						"priority": 4,
						"interval": 0.1,
						"look_ahead": 2,
						"speed_multiplier": 1,
						"wander_time": 5
					}
				}
			],
			"type": "goal",
			"usedIn": ["fish", "pufferfish", "salmon", "tropicalfish"]
		},
		"minecraft:behavior.swim_with_entity": {
			"properties": { "undefined": { "default": "0.1" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.swim_with_entity": {
						"priority": 4,
						"success_rate": 0.1,
						"chance_to_stop": 0.0333,
						"catch_up_threshold": 12,
						"match_direction_threshold": 2,
						"catch_up_multiplier": 2.5,
						"speed_multiplier": 1.5,
						"search_range": 20,
						"state_check_interval": 0.5,
						"stop_distance": 5,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "player"
								}
							}
						]
					}
				},
				{
					"minecraft:behavior.swim_with_entity": {
						"priority": 4,
						"success_rate": 0.1,
						"chance_to_stop": 0.0333,
						"state_check_interval": 0.5,
						"catch_up_threshold": 12,
						"match_direction_threshold": 2,
						"catch_up_multiplier": 2.5,
						"speed_multiplier": 1.5,
						"search_range": 20,
						"stop_distance": 5,
						"entity_types": [
							{
								"filters": {
									"test": "is_family",
									"subject": "other",
									"value": "player"
								}
							}
						]
					}
				}
			],
			"type": "goal",
			"usedIn": ["dolphin"]
		},
		"minecraft:behavior.swoop_attack": {
			"examples": [
				{
					"minecraft:behavior.swoop_attack": {
						"priority": 2,
						"damage_reach": 0.2,
						"speed_multiplier": 1,
						"delay_range": [10, 20]
					}
				},
				{
					"minecraft:behavior.swoop_attack": {
						"priority": 2,
						"damage_reach": 0.2,
						"speed_multiplier": 1,
						"delay_range": [10, 20]
					}
				}
			],
			"usedIn": ["phantom"]
		},
		"minecraft:behavior.take_flower": {
			"examples": [
				{ "minecraft:behavior.take_flower": { "priority": 2 } },
				{ "minecraft:behavior.take_flower": { "priority": 9 } }
			],
			"usedIn": ["villager_v2", "villager"]
		},
		"minecraft:behavior.tempt": {
			"properties": {
				"can_get_scared": {
					"type": "Boolean",
					"description": "If true, the mob can stop being tempted if the player moves too fast while close to this mob",
					"default": "false"
				},
				"can_tempt_vertically": {
					"type": "Boolean",
					"description": "If true, vertical distance to the player will be considered when tempting.",
					"default": "false"
				},
				"can_tempt_while_ridden": {
					"type": "Boolean",
					"description": "If true, the mob can be tempted even if it has a passenger (i.e. if being ridden).",
					"default": "false"
				},
				"items": {
					"type": "List",
					"description": "List of items this mob is tempted by",
					"default": ""
				},
				"sound_interval": {
					"type": "Range [a, b]",
					"description": "Range of random ticks to wait between tempt sounds.",
					"default": "[0.0, 0.0]"
				},
				"speed_multiplier": {
					"type": "Decimal",
					"description": "Movement speed multiplier of the mob when using this AI Goal",
					"default": "1.0"
				},
				"tempt_sound": {
					"type": "String",
					"description": "Sound to play while the mob is being tempted.",
					"default": ""
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Distance in blocks this mob can get tempted by a player holding an item they like",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.tempt": {
						"priority": 2,
						"can_get_scared": true,
						"can_tempt_vertically": false,
						"can_tempt_while_ridden": true,
						"speed_multiplier": 1.3,
						"within_radius": 5,
						"items": ["carrot"]
					}
				},
				{
					"minecraft:behavior.tempt": {
						"priority": 4,
						"speed_multiplier": 1.25,
						"items": ["wheat"]
					}
				}
			],
			"type": "goal",
			"usedIn": [
				"axolotl",
				"bee",
				"chicken",
				"cow",
				"dolphin",
				"donkey",
				"fox",
				"goat",
				"horse",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"rabbit",
				"sheep",
				"strider",
				"turtle"
			]
		},
		"minecraft:behavior.trade_interest": {
			"properties": {
				"carried_item_switch_time": {
					"type": "Decimal",
					"description": "The max time in seconds that the trader will hold an item before attempting to switch for a different item that takes the same trade",
					"default": "2.0"
				},
				"cooldown": {
					"type": "Decimal",
					"description": "The time in seconds before the trader can use this goal again",
					"default": "2.0"
				},
				"interest_time": {
					"type": "Decimal",
					"description": "The max time in seconds that the trader will be interested with showing its trade items",
					"default": "45.0"
				},
				"remove_item_time": {
					"type": "Decimal",
					"description": "The max time in seconds that the trader will wait when you no longer have items to trade",
					"default": "1.0"
				},
				"within_radius": {
					"type": "Decimal",
					"description": "Distance in blocks this mob can be interested by a player holding an item they like",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.trade_interest": {
						"priority": 1,
						"carried_item_switch_time": 3,
						"cooldown": 5,
						"interest_time": 30,
						"remove_item_time": 1,
						"within_radius": 8
					}
				},
				{
					"minecraft:behavior.trade_interest": {
						"priority": 3,
						"within_radius": 6,
						"interest_time": 45,
						"remove_item_time": 1,
						"carried_item_switch_time": 2,
						"cooldown": 2
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2", "wandering_trader"]
		},
		"minecraft:behavior.trade_with_player": {
			"examples": [
				{ "minecraft:behavior.trade_with_player": { "priority": 1 } },
				{ "minecraft:behavior.trade_with_player": { "priority": 1 } }
			],
			"usedIn": ["villager_v2", "villager", "wandering_trader"]
		},
		"minecraft:behavior.vex_copy_owner_target": {
			"properties": {
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entities this mob can copy the owner from",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.vex_copy_owner_target": {
						"priority": 2
					}
				}
			],
			"type": "goal",
			"nested": {
				"0": {
					"filters": {
						"type": "Minecraft Filter",
						"description": "Conditions that make this entry in the list valid.",
						"default": ""
					},
					"max_dist": {
						"type": "Decimal",
						"description": "Maximum distance this mob can be away to be a valid choice.",
						"default": "16"
					},
					"must_see": {
						"type": "Boolean",
						"description": "If true, the mob has to be visible to be a valid choice.",
						"default": "false"
					},
					"must_see_forget_duration": {
						"type": "Boolean",
						"description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more.",
						"default": "3.0"
					},
					"sprint_speed_multiplier": {
						"type": "Decimal",
						"description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged.",
						"default": "1.0"
					},
					"walk_speed_multiplier": {
						"type": "Decimal",
						"description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged.",
						"default": "1.0"
					}
				}
			}
		},
		"minecraft:behavior.vex_random_move": {
			"examples": [
				{ "minecraft:behavior.vex_random_move": { "priority": 2 } }
			]
		},
		"minecraft:behavior.wither_random_attack_pos_goal": {
			"examples": [
				{
					"minecraft:behavior.wither_random_attack_pos_goal": {
						"priority": 3
					}
				},
				{
					"minecraft:behavior.wither_random_attack_pos_goal": {
						"priority": 3
					}
				}
			],
			"usedIn": ["wither"]
		},
		"minecraft:behavior.wither_target_highest_damage": {
			"properties": {
				"[entity_types](../Definitions/NestedTables/entity_types.md)": {
					"type": "JSON Object",
					"description": "List of entity types the wither takes into account to find who dealt the most damage to it (Please see entity_types' definition page)",
					"default": ""
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.wither_target_highest_damage": {
						"priority": 3
					}
				},
				{
					"minecraft:behavior.wither_target_highest_damage": {
						"priority": 1
					}
				}
			],
			"type": "goal",
			"usedIn": ["wither"]
		},
		"minecraft:behavior.work": {
			"properties": { "undefined": { "default": "-1" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.work": {
						"priority": 7,
						"active_time": 0,
						"speed_multiplier": 0.5,
						"goal_cooldown": 0,
						"sound_delay_min": 0,
						"sound_delay_max": 0,
						"can_work_in_rain": false,
						"work_in_rain_tolerance": -1,
						"on_arrival": {
							"event": "minecraft:resupply_trades",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.work": {
						"priority": 7,
						"active_time": 250,
						"speed_multiplier": 0.5,
						"goal_cooldown": 200,
						"sound_delay_min": 100,
						"sound_delay_max": 200,
						"can_work_in_rain": false,
						"work_in_rain_tolerance": 100,
						"on_arrival": {
							"event": "minecraft:resupply_trades",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:behavior.work_composter": {
			"properties": { "undefined": { "default": "-1" } },
			"numericId": null,
			"examples": [
				{
					"minecraft:behavior.work": {
						"priority": 7,
						"active_time": 0,
						"block_interaction_max": 1,
						"can_empty_composter": true,
						"can_fill_composter": true,
						"can_work_in_rain": false,
						"items_per_use_max": 20,
						"min_item_count": 10,
						"goal_cooldown": 0,
						"sound_delay_min": 0,
						"sound_delay_max": 0,
						"speed_multiplier": 0.5,
						"work_in_rain_tolerance": -1,
						"on_arrival": {
							"event": "minecraft:resupply_trades",
							"target": "self"
						}
					}
				},
				{
					"minecraft:behavior.work_composter": {
						"priority": 9,
						"active_time": 250,
						"speed_multiplier": 0.5,
						"goal_cooldown": 200,
						"can_work_in_rain": false,
						"work_in_rain_tolerance": 100,
						"on_arrival": {
							"event": "minecraft:resupply_trades",
							"target": "self"
						}
					}
				}
			],
			"type": "goal",
			"usedIn": ["villager_v2"]
		},
		"minecraft:ambient_sound_interval": {
			"properties": {
				"event_name": {
					"type": "String",
					"description": "Level sound event to be played as the ambient sound.",
					"default": "ambient"
				},
				"range": {
					"type": "Decimal",
					"description": "Maximum time in seconds to randomly add to the ambient sound delay time.",
					"default": "16.000000"
				},
				"value": {
					"type": "Decimal",
					"description": "Minimum time in seconds before the entity plays its ambient sound again.",
					"default": "8.000000"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:ambient_sound_interval": {
						"priority": 2,
						"event_name": "ambient",
						"range": 16,
						"value": 8
					}
				},
				{
					"minecraft:ambient_sound_interval": {
						"value": 2,
						"range": 4,
						"event_name": "ambient.in.raid"
					}
				}
			],
			"type": "property",
			"usedIn": [
				"bee",
				"evocation_illager",
				"fox",
				"pillager",
				"ravager",
				"vindicator",
				"witch"
			]
		},
		"minecraft:can_climb": {
			"examples": [
				{ "minecraft:can_climb": {} },
				{ "minecraft:can_climb": {} }
			],
			"usedIn": [
				"blaze",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"enderman",
				"endermite",
				"evocation_illager",
				"fox",
				"glow_squid",
				"goat",
				"hoglin",
				"husk",
				"iron_golem",
				"magma_cube",
				"mooshroom",
				"ocelot",
				"panda",
				"pig",
				"player",
				"polar_bear",
				"rabbit",
				"sheep",
				"silverfish",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"vex",
				"villager_v2",
				"villager",
				"wandering_trader",
				"witch",
				"wither skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:can_fly": {
			"examples": [
				{ "minecraft:can_fly": {} },
				{ "minecraft:can_fly": {} }
			],
			"usedIn": ["bat", "bee", "ghast", "parrot", "wither"]
		},
		"minecraft:can_power_jump": {
			"examples": [
				{ "minecraft:can_power_jump": {} },
				{ "minecraft:can_power_jump": {} }
			],
			"usedIn": ["donkey", "horse", "mule", "skeleton_horse"]
		},
		"minecraft:collision_box": {
			"properties": {
				"height": {
					"type": "Decimal",
					"description": "Height of the collision box in blocks. A negative value will be assumed to be 0.",
					"default": "1.0"
				},
				"width": {
					"type": "Decimal",
					"description": "Width and Depth of the collision box in blocks. A negative value will be assumed to be 0.",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:collision_box": { "height": 1, "width": 1 } },
				{ "minecraft:collision_box": { "width": 0.6, "height": 1.9 } }
			],
			"type": "property",
			"usedIn": [
				"armor_stand",
				"arrow",
				"axolotl",
				"bat",
				"bee",
				"blaze",
				"boat",
				"cat",
				"cave_spider",
				"chest_minecart",
				"chicken",
				"command_block_minecart",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"dragon_fireball",
				"drowned",
				"egg",
				"elder_guardian",
				"ender_crystal",
				"ender_dragon",
				"ender_pearl",
				"enderman",
				"endermite",
				"evocation_illager",
				"eye_of_ender_signal",
				"fireball",
				"fireworks_rocket",
				"fish",
				"fishing_hook",
				"fox",
				"glow_squid",
				"goat",
				"ghast",
				"guardian",
				"hoglin",
				"hopper_minecart",
				"horse",
				"husk",
				"iron_golem",
				"lightning_bolt",
				"llama_spit",
				"llama",
				"magma_cube",
				"minecart",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker_bullet",
				"shulker",
				"silverfish",
				"skeleton",
				"slime",
				"small_fireball",
				"snow_golem",
				"snowball",
				"spider",
				"splash_potion",
				"squid",
				"stray",
				"strider",
				"thrown_trident",
				"tnt_minecart",
				"tnt",
				"tripod_camera",
				"tropicalfish",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither skeleton",
				"wither_skull_dangerous",
				"wither_skull",
				"wither",
				"wolf",
				"xp_bottle",
				"xp_orb",
				"zoglin",
				"zombie_horse",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:color": {
			"properties": {
				"value": {
					"type": "Integer",
					"description": "The Palette Color value of the entity.",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:color": { "value": 0 } },
				{
					"minecraft:butterfly_fish": {
						"minecraft:variant": { "value": 0 },
						"minecraft:mark_variant": { "value": 4 },
						"minecraft:color": { "value": 0 },
						"minecraft:color2": { "value": 7 }
					}
				}
			],
			"type": "property",
			"usedIn": ["cat", "sheep", "tropicalfish", "wolf"]
		},
		"minecraft:color2": {
			"properties": {
				"value": {
					"type": "Integer",
					"description": "The Palette Color value of the entity.",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:color2": { "value": 2 } },
				{
					"minecraft:butterfly_fish": {
						"minecraft:variant": { "value": 0 },
						"minecraft:mark_variant": { "value": 4 },
						"minecraft:color": { "value": 0 },
						"minecraft:color2": { "value": 7 }
					}
				}
			],
			"type": "property",
			"usedIn": ["tropicalfish"]
		},
		"minecraft:default_look_angle": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "Angle in degrees.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [{ "minecraft:default_look_angle": { "value": 45 } }],
			"type": "property"
		},
		"minecraft:equipment": {
			"properties": {
				"slot_drop_chance": {
					"type": "List",
					"description": "A list of slots with the chance to drop an equipped item from that slot.",
					"default": "_not set_"
				},
				"table": {
					"type": "String",
					"description": "The file path to the equipment table, relative to the behavior pack's root.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:equipment": {
						"table": "loot_tables/entities/piglin_brute_gear.json"
					}
				},
				{
					"minecraft:equipment": {
						"table": "loot_tables/entities/pillager_captain_equipment.json",
						"slot_drop_chance": [
							{ "slot": "slot.armor.chest", "drop_chance": 1 }
						]
					}
				}
			],
			"type": "property",
			"usedIn": [
				"drowned",
				"fox",
				"husk",
				"piglin_brute",
				"piglin",
				"pillager",
				"skeleton",
				"stray",
				"vex",
				"vindicator",
				"wither skeleton",
				"zombie pigman",
				"zombie"
			]
		},
		"minecraft:fire_immune": {
			"examples": [
				{ "minecraft:fire_immune": {} },
				{ "minecraft:fire_immune": {} }
			],
			"usedIn": [
				"blaze",
				"ender_crystal",
				"ender_dragon",
				"ghast",
				"magma_cube",
				"npc",
				"strider",
				"vex",
				"wither skeleton",
				"wither",
				"zoglin",
				"zombie pigman"
			]
		},
		"minecraft:floats_in_liquid": {
			"examples": [{ "minecraft:floats_in_liquid": {} }]
		},
		"minecraft:flying_speed": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "Flying speed in blocks per tick.",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:flying_speed": { "value": 2 } },
				{ "minecraft:flying_speed": { "value": 0.6 } }
			],
			"type": "property",
			"usedIn": ["bee", "ender_dragon"]
		},
		"minecraft:friction_modifier": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "The higher the number, the more the friction affects this entity. A value of 1.0 means regular friction, while 2.0 means twice as much.",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [{ "minecraft:friction_modifier": { "value": 2 } }],
			"type": "property"
		},
		"minecraft:ground_offset": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "The value of the entity's offset from the terrain, in blocks.",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [{ "minecraft:ground_offset": { "value": 0.5 } }],
			"type": "property"
		},
		"minecraft:input_ground_controlled": {
			"examples": [
				{ "minecraft:input_ground_controlled": {} },
				{ "minecraft:input_ground_controlled": {} }
			],
			"usedIn": ["donkey", "horse", "mule", "skeleton_horse"]
		},
		"minecraft:is_baby": {
			"examples": [{ "minecraft:is_baby": {} }],
			"usedIn": [
				"axolotl",
				"bee",
				"cat",
				"chicken",
				"cow",
				"dolphin",
				"donkey",
				"drowned",
				"evocation_illager",
				"fox",
				"glow_squid",
				"goat",
				"hoglin",
				"horse",
				"husk",
				"llama",
				"mooshroom",
				"mule",
				"ocelot",
				"panda",
				"pig",
				"piglin",
				"pillager",
				"polar_bear",
				"rabbit",
				"ravager",
				"sheep",
				"skeleton_horse",
				"squid",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:is_charged": {
			"examples": [{ "minecraft:is_charged": {} }],
			"usedIn": ["bee", "creeper"]
		},
		"minecraft:is_chested": {
			"examples": [{ "minecraft:is_chested": {} }],
			"usedIn": ["donkey", "llama", "mule"]
		},
		"minecraft:is_dyeable": {
			"properties": {
				"interact_text": {
					"type": "String",
					"description": "The text that will display when interacting with this entity with a dye when playing with Touch-screen controls.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:is_dyeable": {
						"interact_text": "action.interact.dye"
					}
				},
				{
					"minecraft:is_dyeable": {
						"interact_text": "action.interact.dye"
					}
				}
			],
			"type": "property",
			"usedIn": ["cat", "sheep", "wolf"]
		},
		"minecraft:is_hidden_when_invisible": {
			"examples": [
				{ "minecraft:is_hidden_when_invisible": {} },
				{ "minecraft:is_hidden_when_invisible": {} }
			],
			"usedIn": ["axolotl", "goat", "player", "wandering_trader"]
		},
		"minecraft:is_ignited": {
			"examples": [{ "minecraft:is_ignited": {} }],
			"usedIn": ["tnt_minecart"]
		},
		"minecraft:is_illager_captain": {
			"examples": [{ "minecraft:is_illager_captain": {} }],
			"usedIn": ["pillager", "vindicator"]
		},
		"minecraft:is_saddled": {
			"examples": [{ "minecraft:is_saddled": {} }],
			"usedIn": ["donkey", "horse", "mule", "pig", "strider"]
		},
		"minecraft:is_shaking": {
			"examples": [{ "minecraft:is_shaking": {} }, null],
			"usedIn": [
				"hoglin",
				"husk",
				"piglin_brute",
				"piglin",
				"strider",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:is_sheared": {
			"examples": [{ "minecraft:is_sheared": {} }],
			"usedIn": ["sheep", "snow_golem"]
		},
		"minecraft:is_stackable": {
			"examples": [
				{ "minecraft:is_stackable": {} },
				{ "minecraft:is_stackable": {} }
			],
			"usedIn": [
				"boat",
				"chest_minecart",
				"hopper_minecart",
				"minecart",
				"tnt_minecart"
			]
		},
		"minecraft:is_stunned": {
			"examples": [{ "minecraft:is_stunned": {} }],
			"usedIn": ["ravager"]
		},
		"minecraft:is_tamed": {
			"examples": [{ "minecraft:is_tamed": {} }],
			"usedIn": [
				"cat",
				"donkey",
				"horse",
				"llama",
				"mule",
				"ocelot",
				"parrot",
				"skeleton_horse",
				"wolf",
				"zombie"
			]
		},
		"minecraft:item_controllable": {
			"properties": {
				"control_items": {
					"type": "List",
					"description": "List of items that can be used to control this entity.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:item_controllable": {
						"control_item:": "iron_sword"
					}
				},
				{
					"minecraft:item_controllable": {
						"control_items": "carrotOnAStick"
					}
				}
			],
			"type": "property",
			"usedIn": ["pig", "strider"]
		},
		"minecraft:loot": {
			"properties": {
				"table": {
					"type": "String",
					"description": "The path to the loot table, relative to the Behavior Pack's root.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:loot": {
						"table": "loot_tables/entities/wither_skeleton.json"
					}
				},
				{
					"minecraft:loot": {
						"table": "loot_tables/entities/zombie.json"
					}
				}
			],
			"type": "property",
			"usedIn": [
				"armor_stand",
				"blaze",
				"boat",
				"cat",
				"cave_spider",
				"chicken",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"enderman",
				"evocation_illager",
				"fish",
				"fishing_hook",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"horse",
				"husk",
				"iron_golem",
				"llama",
				"magma_cube",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"strider",
				"tropicalfish",
				"turtle",
				"vindicator",
				"witch",
				"wither_skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:mark_variant": {
			"properties": {
				"value": {
					"type": "Integer",
					"description": "The ID of the variant. By convention, 0 is the ID of the base entity.",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:mark_variant": { "value": 1 } },
				{
					"desert_villager": {
						"minecraft:mark_variant": { "value": 1 }
					}
				}
			],
			"type": "property",
			"usedIn": [
				"bee",
				"horse",
				"llama",
				"mooshroom",
				"tropicalfish",
				"villager_v2",
				"zombie_villager_v2"
			]
		},
		"minecraft:push_through": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "The value of the entity's push-through, in blocks.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [{ "minecraft:push_through": { "value": 0.5 } }],
			"type": "property"
		},
		"minecraft:scale": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "The value of the scale. 1.0 means the entity will appear at the scale they are defined in their model. Higher numbers make the entity bigger.",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:scale": { "value": 1 } },
				{
					"baby": {
						"minecraft:is_baby": {},
						"minecraft:scale": { "value": 0.4 },
						"minecraft:ageable": {
							"duration": 1200,
							"feed_items": [
								"golden_carrot",
								"carrot",
								"yellow_flower"
							],
							"grow_up": { "event": "grow_up", "target": "self" }
						},
						"minecraft:behavior.follow_parent": {
							"priority": 6,
							"speed_multiplier": 1.1
						}
					},
					"adult": {}
				}
			],
			"type": "property",
			"usedIn": [
				"axolotl",
				"bat",
				"bee",
				"cat",
				"chicken",
				"cow",
				"dolphin",
				"drowned",
				"fish",
				"fox",
				"glow_squid",
				"goat",
				"hoglin",
				"husk",
				"llama",
				"mooshroom",
				"ocelot",
				"panda",
				"pig",
				"piglin",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"salmon",
				"sheep",
				"squid",
				"strider",
				"tropicalfish",
				"turtle",
				"villager_v2",
				"villager",
				"wither_skeleton",
				"wolf",
				"zoglin",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:skin_id": {
			"properties": {
				"value": {
					"type": "Integer",
					"description": "The ID of the skin. By convention, 0 is the ID of the base skin.",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:skin_id": { "value": 0 } },
				{ "villager_skin_1": { "minecraft:skin_id": { "value": 1 } } }
			],
			"type": "property",
			"usedIn": ["villager_v2", "zombie_villager_v2"]
		},
		"minecraft:sound_volume": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "The value of the volume the entity uses for sound effects.",
					"default": "1.0"
				}
			},
			"numericId": null,
			"examples": [{ "minecraft:sound_volume": { "value": 1.25 } }],
			"type": "property"
		},
		"minecraft:type_family": {
			"properties": {
				"family": {
					"type": "List",
					"description": "List of family names.",
					"default": "_not set_"
				}
			},
			"numericId": null,
			"examples": [
				{
					"minecraft:type_family": {
						"family": ["villager", "blacksmith", "armorer", "mob"]
					}
				},
				{
					"minecraft:type_family": {
						"family": ["armor_stand", "inanimate", "mob"]
					}
				}
			],
			"type": "property",
			"usedIn": [
				"armor_stand",
				"axolotl",
				"bat",
				"bee",
				"blaze",
				"boat",
				"cat",
				"cave_spider",
				"chest_minecart",
				"chicken",
				"command_block_minecart",
				"cow",
				"creeper",
				"dolphin",
				"donkey",
				"drowned",
				"elder_guardian",
				"ender_crystal",
				"ender_dragon",
				"enderman",
				"endermite",
				"evocation_illager",
				"fish",
				"fox",
				"ghast",
				"glow_squid",
				"goat",
				"guardian",
				"hoglin",
				"hopper_minecart",
				"horse",
				"husk",
				"iron_golem",
				"lightning_bolt",
				"llama",
				"magma_cube",
				"minecart",
				"mooshroom",
				"mule",
				"npc",
				"ocelot",
				"panda",
				"parrot",
				"phantom",
				"pig",
				"piglin_brute",
				"piglin",
				"pillager",
				"player",
				"polar_bear",
				"pufferfish",
				"rabbit",
				"ravager",
				"salmon",
				"sheep",
				"shulker",
				"silverfish",
				"skeleton_horse",
				"skeleton",
				"slime",
				"snow_golem",
				"spider",
				"squid",
				"stray",
				"strider",
				"tnt_minecart",
				"tnt",
				"tripod_camera",
				"tropicalfish",
				"turtle",
				"vex",
				"villager_v2",
				"villager",
				"vindicator",
				"wandering_trader",
				"witch",
				"wither skeleton",
				"wither",
				"wolf",
				"zoglin",
				"zombie_horse",
				"zombie_pigman",
				"zombie_villager_v2",
				"zombie_villager",
				"zombie"
			]
		},
		"minecraft:variant": {
			"properties": {
				"value": {
					"type": "Integer",
					"description": "The ID of the variant. By convention, 0 is the ID of the base entity.",
					"default": "0"
				}
			},
			"numericId": null,
			"examples": [
				{ "minecraft:variant": { "value": 0 } },
				{ "minecraft:variant": { "value": 0 } }
			],
			"type": "property",
			"usedIn": [
				"axolotl",
				"cat",
				"fox",
				"goat",
				"horse",
				"husk",
				"llama",
				"mooshroom",
				"panda",
				"parrot",
				"piglin_brute",
				"piglin",
				"pillager",
				"pufferfish",
				"rabbit",
				"shulker",
				"tropicalfish",
				"villager_v2",
				"villager",
				"vindicator",
				"zombie_villager_v2",
				"zombie_villager"
			]
		},
		"minecraft:walk_animation_speed": {
			"properties": {
				"value": {
					"type": "Decimal",
					"description": "The higher the number, the faster the animation for walking plays. A value of 1.0 means normal speed, while 2.0 means twice as fast.",
					"default": "0.0"
				}
			},
			"numericId": null,
			"examples": [{ "minecraft:walk_animation_speed": { "value": 0 } }],
			"type": "property"
		},
		"minecraft:wants_jockey": {
			"examples": [{ "minecraft:wants_jockey": {} }]
		}
	}
}
