{
    "": [
        "List of triggers with the events to call when taking specific kinds of damage.",
        "String"
    ],
    "[\"event\", \"target\"]": [
        "What happens when the entity starts admiring an item",
        "What happens when the entity stops admiring an item"
    ],
    "[Minecraft Filter](../FilterList.md)": [
        "Filters allow data objects to specify test criteria"
    ],
    "Array": [
        "Comma-separated array of hitboxes.",
        "The array of items that can be used to heal this entity.",
        "List of damage conditions that, when met, can cause damage to the entity.",
        null,
        "[EXPERIMENTAL] Blocks that the mob can lay its eggs on top of.",
        "[EXPERIMENTAL] Types of materials that can exist above the target block. Valid types are Air, Water, and Lava."
    ],
    "JSON Object": [
        "Event to run when this entity grows up.",
        "Event to be run when the cooldown is complete.",
        "Determines how likely the baby of parents with the same variant will deny that variant and take a random variant within the given range instead.",
        "Determines how likely the babies are to NOT inherit one of their parent's variances. Values are between 0.0 and 1.0, with a higher number meaning more likely to mutate.",
        "The object containing the default bandwidth optimization values.",
        "Specifies filters for entity definitions and events.",
        "Specifies if the \"min_distance\" and \"max_distance\" are used in the standard despawn rules.",
        "Event to fire when the drying out time runs out.",
        "Event to trigger when this entity is equipped with this item.",
        "Event to trigger when this item is removed from this entity.",
        "Event to fire when the correct item is given.",
        "Loot table with items to add to the player's inventory upon successful interaction.",
        "Particle effect that will be triggered at the start of the interaction.",
        "Loot table with items to drop on the ground upon successful interaction.",
        "Event to call when this entity is leashed.",
        "Event to call when this entity is unleashed.",
        "Describes the special names for this entity and the events to call when the entity acquires those names",
        "Event to call when the entity is done peeking.",
        "Event to call when the entity starts peeking.",
        "Event to call when the entity's target entity starts peeking.",
        "Event to call when the rail is activated",
        "Event to call when the rail is deactivated",
        "Event to run when this entity becomes tamed",
        "The list of items that, if carried while interacting with the entity, will anger it.",
        "The list of items that can be used to increase the entity's temper and speed up the taming process.",
        "Event that triggers when the entity becomes tamed.",
        "Event to call when an entity gets in the inside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
        "Event to call when an entity gets in the outside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
        "Event to call when an entity exits visual range. Can specify 'event' for the name of the event and 'target' for the target of the event",
        "Contains any events to fire when the time on the timer runs out.",
        "List of components to add to the entity after the transformation",
        "Defines the properties of the delay for the transformation",
        "List of entity types that this mob considers valid targets",
        "List of entity types that this mob can follow in a caravan",
        "Event to run when target is within the radius. This event is broadcasted if broadcast is true.",
        "List of entity types that this mob can target if they hurt their owner",
        "Filters which types of targets are valid for this entity (Please see entity_types' definition page)",
        "List of entity types that this mob considers valid targets",
        "List of entity types that this mob can target if they hurt their owner",
        "List of entity types that this mob can target if they hurt their owner",
        "List of entities this mob will share items with",
        "List of entity types this mob will startle (cause to jump) when it sneezes.",
        "List of entities this mob can copy the owner from",
        "List of entity types the wither takes into account to find who dealt the most damage to it (Please see entity_types' definition page)"
    ],
    "List": [
        "A list of blocks with their associated cost",
        "A list of entities to spawn in",
        "A list of entity families to broadcast anger to",
        "A list of potions that this entity can drink.",
        "A list of slots with the chance to drop an equipped item from that slot.",
        "A list of the blocks that can be broken as this entity moves around",
        "A list of weighted responses to the melee attack being blocked",
        "Block types to move to.",
        "Blocks that the mob is looking for to eat/raid",
        "Items that we are interested in snacking on",
        "List of blocks that can help the transformation of this entity",
        "List of blocks that will trigger the senor.",
        "List of blocks this entity can breathe in, in addition to the above.",
        "List of blocks this entity can float on. **Must be a liquid block.**",
        "List of blocks this entity can't breathe in, in addition to the other \"breathes\" parameters.",
        "List of blocks to watch for being broken to fire off a specified event. If a block is in multiple lists, multiple events will fire.",
        "List of blocks, with certain block states, that we are monitoring to see if the entity is inside.",
        "List of entities that can ride this entity",
        "List of events to send",
        "List of family names.",
        "List of items that can be used to boost while riding this entity.",
        "List of items that can be used to control this entity.",
        "List of items that the entity drops when it grows up.",
        "List of items that the entity wants to share.",
        "List of items that this mob likes",
        "List of items this mob is tempted by",
        "List of items this mob will not pick up",
        "List of slots and the item that can be equipped.",
        "List of sources that break the block to listen for. If none are specified, all block breaks will be detected.",
        "List of spells for the mob to use to summon entities.",
        "List of steps for the spell.",
        "Names of component groups to add",
        "Optional block list that the home position will be associated with. If any of the blocks no longer exist at that position, the home restriction is removed. Example syntax: minecraft:sand. Not supported: minecraft:sand:1",
        "Tells the pathfinder which blocks to avoid when creating a path",
        "Tells the pathfinder which blocks to avoid when creating a path",
        "Tells the pathfinder which blocks to avoid when creating a path",
        "Tells the pathfinder which blocks to avoid when creating a path",
        "Tells the pathfinder which blocks to avoid when creating a path",
        "Tells the pathfinder which blocks to avoid when creating a path",
        "Tells the pathfinder which blocks to avoid when creating a path",
        "The block types required nearby for the entity to breed.",
        "The entity type that this entity is allowed to mingle with",
        "The list of Entity Damage Sources that will cause this mob to panic",
        "The list of entity definitions that this entity can breed with.",
        "The list of genes that this entity has and will cross with a partner during breeding.",
        "The list of genetic variants for this gene. These check for particular allele combinations and fire events when all of them are satisfied.",
        "The list of items that can be given to the entity to place in their inventory.",
        "The list of items that can be used to bribe the entity.",
        "The list of items that can be used to get the entity into the 'love' state",
        "The list of items that can be used to get the entity to trust players.",
        "The list of items that can be used to tame this entity",
        "The list of items that can go in this slot.",
        "The list of nearby block requirements to get the entity into the 'love' state.",
        "The list of positions and number of riders for each position for entities riding this entity",
        "The list of triggers that fire when the conditions match the given filter criteria. If any filter criteria overlap the first defined event will be picked.",
        "The list of triggers that fire when the environment conditions match the given filter criteria.",
        "The object containing the conditional bandwidth optimization values.",
        "This is a list of objects, representing one value in seconds that can be picked before firing the event and an optional weight. Incompatible with time."
    ],
    "String": [
        "The event to run when the conditions for this trigger are met.",
        "The target of the event.",
        "Identifier of the status ailment to apply to an entity attacked by this entity's melee attack",
        "The entity type that will be riding this entity.",
        "The spawn event that will be used when the riding entity is created.",
        "The sound event to play when the mob is angry",
        "The minimum difficulty that the world must be on for this entity to break doors.",
        "The type of damage that is applied to entities that enter the damage range.",
        "Loot table that's used to drop a random item.",
        "Event to run when a block breaks",
        "Name of the item that can be used to boost.",
        "The item used to boost will become this item once it is used up.",
        "The name that will be displayed above the boss's health bar.",
        "The entity definition of this entity's babies.",
        "Event to run when this entity breeds.",
        "The entity definition of this entity's mate.",
        "The sound event to play when the mob is celebrating",
        "Type of damage that triggers the events.",
        "Defines what sound to play, if any, when the on_damage filters are met.",
        "Defines what event to run",
        "Event to fire when entity was already dried out but received increase in water supply.",
        "Event to fire when entity stopped drying out, for example got into water or under rain.",
        "Name to be displayed while trading with this entity",
        "File path relative to the resource pack root for this entity's trades",
        "Event to fire when the conditions are met.",
        "Text to be displayed when the entity can be equipped with this item when playing with Touch-screen controls.",
        "Identifier of the item that can be equipped for this slot.",
        "The name of the gene.",
        "Event to run when this mob is created and matches the allele conditions.",
        "Item identifier that can be used to heal this entity.",
        "The kind of damage that is caused to the entity. Various armors and spells use this to determine if the entity is immune.",
        "Text to show when the player is able to interact in this way with this entity when playing with Touch-screen controls.",
        "Event to fire when the interaction occurs.",
        "List of sounds to play when the interaction occurs.",
        "List of entities to spawn when the interaction occurs.",
        "The item used will transform to this item upon successful interaction. Format: `itemName:auxValue`",
        "File path, relative to the Behavior Pack's path, to the loot table file.",
        "Name of the particle system to run",
        "Type of container this entity has. Can be horse, minecart_chest, chest_boat, minecart_hopper, inventory, container or hopper",
        "The event identifier to run when the entities specified in filters look at this entity.",
        "The mob effect that is applied to entities that enter this entities effect range.",
        "Trigger to run when the entity gets named",
        "List of special names that will cause the events defined in 'on_named' to fire",
        "Event to be called when this entity acquires the name specified in 'name_filter'",
        "Entity Definitions defined here can't be hurt by the projectile",
        "The sound that plays when the projectile hits something",
        "Particle to use upon collision",
        "The sound that plays when the projectile is shot",
        "Event to run we attempt to trigger a raid on the village.",
        "The text to display when the player can interact with the entity when playing with Touch-screen controls",
        "Defines the item this entity wants to craft with the item defined by \"item\". Should be an item name.",
        "The name of the item. Aux value can be specified, for instance `minecraft:skull:1`.",
        "Actor definition to use as projectile for the ranged attack. The actor definition must have the projectile component to be able to be shot as a projectile",
        "Event to run when the entity enters the 'sit' state",
        "Event to run when the entity exits the 'sit' state",
        "Identifier of the entity to spawn, leave empty to spawn the item defined by \"spawn_item\" instead.",
        "Event to call when the entity is spawned.",
        "Item identifier of the item to spawn.",
        "Method to use to spawn the entity.",
        "Identifier of the sound effect to play when the entity is spawned.",
        "The text that shows in the feeding interact button.",
        "The text that shows in the riding interact button.",
        "Name of the item this entity dislikes and will cause it to get angry if used while untamed.",
        "Name of the item this entity likes and can be used to increase this entity's temper.",
        "Name to be displayed while trading with this entity.",
        "File path relative to the behavior pack root for this entity's trades.",
        "The type of block you wish to be spawned by the entity as it move about the world. Solid blocks may not be spawned at an offset of (0,0,0).",
        "Sound to play when the transformation starts",
        "Sound to play when the entity is done transforming",
        "Event to run when this entity becomes trusting.",
        "The sound event to play when admiring the item",
        "Sound to occasionally play while defending.",
        "Defines what POI type to hide at.",
        "[EXPERIMENTAL] Block type for the egg to lay. If this is a turtle egg, the number of eggs in the block is randomly set.",
        "[EXPERIMENTAL] Sound event name for laying egg. Defaulted to lay_egg which is used for Turtles.",
        "Kind of block to find fitting the specification. Valid values are \"random\" and \"nearest\".",
        "The material type of the liquid block to find. Valid values are \"Any\", \"Water\", and \"Lava\".",
        "The event to send to the entity",
        "The sound event to play when this step happens",
        "Loot table to select dropped items from.",
        "Sound to play when the sneeze is about to happen.",
        "Sound to play when the sneeze occurs.",
        "The sound event to play when using this spell",
        "The entity type of the entities we will spawn in this step",
        "The base shape of this step. Valid values are circle and line",
        "The sound event to play for this step",
        "The target of the spell. This is where the spell will start (line will start here, circle will be centered here)",
        "Sound to play while the mob is being tempted.",
        "Level sound event to be played as the ambient sound.",
        "The file path to the equipment table, relative to the behavior pack's root.",
        "The text that will display when interacting with this entity with a dye when playing with Touch-screen controls.",
        "The path to the loot table, relative to the Behavior Pack's root."
    ],
    "table": [
        "File path, relative to the Behavior Pack's path, to the loot table file."
    ],
    "Trigger": [
        "Event to run when this mob lays the egg.",
        "Event to run on block reached.",
        "Event to run on completing a stay of stay_duration at the block."
    ],
    "undefined": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    "Vector [a, b, c]": [
        "The offset from the entity's anchor where the projectile will spawn",
        "Position of this seat relative to this entity's position",
        "Entity will teleport to a random position within the area defined by this cube",
        "The distance from the entities current position to spawn the block. Capped at up to 16 blocks away. The X value is left/right(-/+), the Z value is backward/forward(-/+), the Y value is below/above(-/+).",
        "Offset to add to the selected target position."
    ],
    "Vector [a,b,c]": [
        "The offset from the entity's anchor where the hitbox will spawn"
    ]
}
