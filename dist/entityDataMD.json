{
	"minecraftComponent_addrider": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:addrider",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:addrider"
		},
		{
			"type": "other",
			"data": "`minecraft:addrider` adds a rider to the entity."
		},
		{ "type": "alert", "data": "IMPORTANT" },
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "entity_type",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The entity type that will be riding this entity."
				},
				{
					"Name": "spawn_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The spawn event that will be used when the riding entity is created."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:addrider": {
					"spawn_event": "minecraft:spawn_as_illager",
					"entity_type": "minecraft:villager"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " spider" },
		{
			"type": "code",
			"data": {
				"minecraft:addrider": { "entity_type": "minecraft:skeleton" }
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/spider.json",
			"range": [14, 16]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:addrider`"
		},
		{
			"type": "list",
			"data": [
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)"
			]
		}
	],
	"minecraftComponent_admire_item": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:admire_item",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:admire_item"
		},
		{
			"type": "other",
			"data": "`minecraft:admire_item` allows an entity to ignore attackable targets for a given duration."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "cooldown_after_being_attacked",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Duration, in seconds, for which mob won't admire items if it was hurt"
				},
				{
					"Name": "duration",
					"Default Value": "10",
					"Type": "Integer",
					"Description": "Duration, in seconds, that the mob is pacified."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:admire_item": {
					"cooldown_after_being_attacked": 5,
					"duration": 10
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " piglin" },
		{
			"type": "code",
			"data": {
				"minecraft:admire_item": {
					"duration": 8,
					"cooldown_after_being_attacked": 20
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/piglin.json",
			"range": [428, 431]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:admire_item`"
		},
		{
			"type": "list",
			"data": [
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)"
			]
		}
	],
	"minecraftComponent_ageable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:ageable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:ageable"
		},
		{
			"type": "other",
			"data": "`minecraft:ageable` will add a timer for the entity to grow up. It can be accelerated by giving the entity the items it likes as defined by `feed_items`."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "drop_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of items that the entity drops when it grows up."
				},
				{
					"Name": "duration",
					"Default Value": "1200.0",
					"Type": "Decimal",
					"Description": "Amount of time before the entity grows up, -1 for always a baby."
				},
				{
					"Name": "feed_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of items that can be fed to the entity. Includes 'item' for the item name and 'growth' to define how much time it grows up by"
				},
				{
					"Name": "grow_up",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to run when this entity grows up."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:ageable": {
					"drop_items": "fish",
					"duration": 1200,
					"feed_items": ["carrot", "wheat"],
					"grow_up": {
						"event": "minecraft:ageable_grow_up",
						"target": "self"
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " pig" },
		{
			"type": "code",
			"data": {
				"minecraft:ageable": {
					"duration": 1200,
					"feed_items": ["carrot", "beetroot", "potato"],
					"grow_up": {
						"event": "minecraft:ageable_grow_up",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/pig.json",
			"range": [17, 24]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:ageable`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)"
			]
		}
	],
	"minecraftComponent_angry": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:angry",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:angry"
		},
		{
			"type": "other",
			"data": "`minecraft:angry` defines the entity's 'angry' state using a timer."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "angry_sound",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The sound event to play when the mob is angry"
				},
				{
					"Name": "broadcast_anger",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, other entities of the same entity definition within the broadcastRange will also become angry"
				},
				{
					"Name": "broadcast_anger_on_attack",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob attacks"
				},
				{
					"Name": "broadcast_anger_on_being_attacked",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob is attacked"
				},
				{
					"Name": "[broadcast_filters](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "Conditions that make this entry in the list valid"
				},
				{
					"Name": "broadcast_range",
					"Default Value": "20",
					"Type": "Integer",
					"Description": "Distance in blocks within which other entities of the same entity definition will become angry"
				},
				{
					"Name": "broadcast_targets",
					"Default Value": "",
					"Type": "List",
					"Description": "A list of entity families to broadcast anger to"
				},
				{
					"Name": "duration",
					"Default Value": "25",
					"Type": "Integer",
					"Description": "The amount of time in seconds that the entity will be angry"
				},
				{
					"Name": "duration_delta",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Variance in seconds added to the duration [-delta, delta]"
				},
				{
					"Name": "[filters](../FilterList.md)",
					"Default Value": "",
					"Type": "Minecraft Filter",
					"Description": "Filter out mob types that it should not attack while angry (other Piglins)"
				},
				{
					"Name": "sound_interval",
					"Default Value": "0",
					"Type": "Range [a, b]",
					"Description": "The range of time in seconds to randomly wait before playing the sound again"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:angry": {
					"angry_sound": "bark",
					"broadcast_anger": false,
					"broadcast_anger_on_attack": true,
					"broadcast_range": 10,
					"duration": 100,
					"calm_event": {
						"event": "minecraft:on_calm",
						"target": "self"
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " spider" },
		{
			"type": "code",
			"data": {
				"minecraft:angry": {
					"duration": 10,
					"duration_delta": 3,
					"calm_event": {
						"event": "minecraft:become_calm",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/spider.json",
			"range": [120, 127]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:angry`"
		},
		{
			"type": "list",
			"data": [
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[llama_spit](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama_spit.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)"
			]
		}
	],
	"minecraftComponent_annotation_break_door": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "mammerla",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:annotation.break_door",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:annotation.break_door"
		},
		{
			"type": "other",
			"data": "`minecraft:annotation.break_door` allows an entity to break doors, assuming that that flags set up for the component to use in navigation."
		},
		{ "type": "alert", "data": "IMPORTANT" },
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "break_time",
					"Default Value": "12.0",
					"Type": "Decimal",
					"Description": "The time in seconds required to break through doors."
				},
				{
					"Name": "min_difficulty",
					"Default Value": "hard",
					"Type": "String",
					"Description": "The minimum difficulty that the world must be on for this entity to break doors."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:annotation.break_door": {
					"break_time": 12,
					"min_difficulty": "hard"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " vindicator" },
		{
			"type": "code",
			"data": {
				"minecraft:annotation.break_door": {
					"break_time": 30,
					"min_difficulty": "normal"
				}
			},
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:annotation.break_door`"
		},
		{
			"type": "list",
			"data": [
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_annotation_open_door": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "mammerla",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:annotation.open_door",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:annotation.open_door"
		},
		{
			"type": "other",
			"data": "`minecraft:annotation.open_door` allows an entity to to open doors, assuming that that flags set up for the component to use in navigation."
		},
		{ "type": "alert", "data": "IMPORTANT" },
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:annotation.open_door": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " villager" },
		{
			"type": "code",
			"data": { "minecraft:annotation.open_door": {} },
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:annotation.open_door`"
		},
		{
			"type": "list",
			"data": [
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)"
			]
		}
	],
	"minecraftComponent_area_attack": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "mammerla",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:area_attack",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:area_attack"
		},
		{
			"type": "other",
			"data": "`minecraft:area_attack` is a component that does damage to entities that get within range."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "cause",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The type of damage that is applied to entities that enter the damage range."
				},
				{
					"Name": "[entity_filter](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The set of entities that are valid to apply the damage to when within range."
				},
				{
					"Name": "damage_per_tick",
					"Default Value": "2",
					"Type": "Integer",
					"Description": "How much damage per tick is applied to entities that enter the damage range."
				},
				{
					"Name": "damage_range",
					"Default Value": "0.2",
					"Type": "Decimal",
					"Description": "How close a hostile entity must be to have the damage applied."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " cause" },
		{ "type": "alert", "data": "IMPORTANT" },
		{
			"type": "quote",
			"data": "A list of available damage sources can be found at [Entity Damage Source](../../../AddonsReference/Examples/AddonEntities.md#entity-damage-source) located in the Addons Documentation."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:area_attack": {
					"damage_range": 0.2,
					"damage_per_tick": 2,
					"cause": "contact",
					"entity_filter": {
						"test": "is_family",
						"subject": "other",
						"value": "monster"
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " pufferfish" },
		{
			"type": "code",
			"data": {
				"minecraft:area_attack": {
					"damage_range": 0.2,
					"damage_per_tick": 2,
					"cause": "contact",
					"entity_filter": {
						"any_of": [
							{
								"test": "is_family",
								"subject": "other",
								"value": "player"
							},
							{
								"test": "is_family",
								"subject": "other",
								"value": "monster"
							}
						]
					}
				}
			},
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:area_attack`"
		},
		{
			"type": "list",
			"data": [
				"[area_effect_cloud](../../../../Source/VanillaBehaviorPack_Snippets/entities/area_effect_cloud.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)"
			]
		}
	],
	"minecraftComponent_attack_cooldown": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:attack_cooldown",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:attack_cooldown"
		},
		{
			"type": "other",
			"data": "`minecraft:attack_cooldown` adds a cooldown to an entity. The intention of this cooldown is to be used to prevent the entity from attempting to acquire new attack targets."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "attack_cooldown_complete_event",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to be run when the cooldown is complete."
				},
				{
					"Name": "attack_cooldown_time",
					"Default Value": "[0.0, 1.0]",
					"Type": "Range [a, b]",
					"Description": "Amount of time in seconds for the cooldown. Can be specified as a number or a pair of numbers (min and max)."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:attack_cooldown": {
					"attack_cooldown_complete_event": {
						"event": "attack_cooldown_complete_event",
						"target": "self"
					},
					"attack_cooldown_time": [0.1, 1]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " hoglin" },
		{
			"type": "code",
			"data": {
				"minecraft:attack_cooldown": {
					"attack_cooldown_time": [10, 15],
					"attack_cooldown_complete_event": {
						"event": "attack_cooldown_complete_event",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/hoglin.json",
			"range": [73, 79]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:attack_cooldown`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)"
			]
		}
	],
	"minecraftComponent_barter": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:barter",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:barter"
		},
		{
			"type": "other",
			"data": "`minecraft:barter` enables the component to drop an item as a barter exchange."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "barter_table",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Loot table that's used to drop a random item."
				},
				{
					"Name": "cooldown_after_being_attacked",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Duration, in seconds, for which mob won't barter items if it was hurt"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:barter": {
					"barter_table": "loot_tables/entities/custom_villager_barter.json",
					"cooldown_after_being_attacked": 5
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " piglin" },
		{
			"type": "code",
			"data": {
				"minecraft:barter": {
					"barter_table": "loot_tables/entities/piglin_barter.json",
					"cooldown_after_being_attacked": 20
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/piglin.json",
			"range": [187, 190]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:barter`"
		},
		{
			"type": "list",
			"data": [
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)"
			]
		}
	],
	"minecraftComponent_block_climber": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:block_climber",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:block_climber"
		},
		{
			"type": "other",
			"data": "`minecraft:block_climber` allows the player to detect and manuever on the scaffolding block."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:block_climber": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{
			"type": "code",
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/player.json",
			"range": [138]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:block_climber`"
		},
		{
			"type": "list",
			"data": [
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)"
			]
		}
	],
	"minecraftComponent_block_sensor": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "docsbryce",
				"ms.author": "v-bbortree",
				"title": "Entity Documentation - minecraft:block_sensor",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:block_sensor"
		},
		{
			"type": "other",
			"data": "`minecraft:block_sensor` will fire off a specified event when a block in the block list is broken within the sensor range."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "on_break",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of blocks to watch for being broken to fire off a specified event. If a block is in multiple lists, multiple events will fire."
				},
				{
					"Name": "sensor_radius",
					"Default Value": "16.0",
					"Type": "Decimal",
					"Description": "The maximum radial distance in which a specified block can be detected. The biggest radius is 32.0."
				},
				{
					"Name": "sources",
					"Default Value": "[]",
					"Type": "List",
					"Description": "List of sources that break the block to listen for. If none are specified, all block breaks will be detected."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " on_break" },
		{
			"type": "other",
			"data": "`on_break` is a list defined by two parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "block_list",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of blocks that will trigger the senor."
				},
				{
					"Name": "on_block_broken",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to run when a block breaks"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:block_sensor": {
					"sensor_radius": 16,
					"on_break": [
						{
							"block_list": ["minecraft:gold_block"],
							"on_block_broken": "important_block_destroyed_event"
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " piglin" },
		{
			"type": "code",
			"data": {
				"minecraft:block_sensor": {
					"sensor_radius": 16,
					"on_break": [
						{
							"block_list": [
								"minecraft:gold_block",
								"minecraft:gilded_blackstone",
								"minecraft:nether_gold_ore",
								"minecraft:deepslate_gold_ore",
								"minecraft:raw_gold_block",
								"minecraft:gold_ore",
								"minecraft:chest",
								"minecraft:trapped_chest",
								"minecraft:ender_chest",
								"minecraft:barrel",
								"minecraft:shulker_box",
								"minecraft:undyed_shulker_box"
							],
							"on_block_broken": "important_block_destroyed_event"
						}
					]
				}
			},
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:block_sensor`"
		},
		{
			"type": "list",
			"data": [
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)"
			]
		}
	],
	"minecraftComponent_boostable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:boostable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:boostable"
		},
		{
			"type": "other",
			"data": "`minecraft:boostable` defines the conditions and behavior of a rideable entity's boost."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "boost_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of items that can be used to boost while riding this entity."
				},
				{
					"Name": "duration",
					"Default Value": "3.0",
					"Type": "Decimal",
					"Description": "Time in seconds for the boost."
				},
				{
					"Name": "speed_multiplier",
					"Default Value": "1.0",
					"Type": "Decimal",
					"Description": "Factor by which the entity's normal speed increases. E.g. 2.0 means go twice as fast."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " boost_items" },
		{
			"type": "other",
			"data": "`boost_items` is a list defined by two parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "damage",
					"Default Value": "1",
					"Type": "Integer",
					"Description": "This is the damage that the item will take each time it is used."
				},
				{
					"Name": "item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Name of the item that can be used to boost."
				},
				{
					"Name": "replace_item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The item used to boost will become this item once it is used up."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:boostable": {
					"duration": 5,
					"speed_multiplier": 1.25,
					"boost_items": [
						{
							"item": "carrotOnAStick",
							"damage": 3,
							"replace_item": "fishing_rod"
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " pig" },
		{
			"type": "code",
			"data": {
				"minecraft:boostable": {
					"speed_multiplier": 2,
					"duration": 3,
					"boost_items": [
						{
							"item": "carrotOnAStick",
							"damage": 2,
							"replace_item": "fishing_rod"
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/pig.json",
			"range": [96, 106]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:boostable`"
		},
		{
			"type": "list",
			"data": [
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)"
			]
		}
	],
	"minecraftComponent_boss": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:boss",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:boss"
		},
		{
			"type": "other",
			"data": "`minecraft:boss` defines the current state of the boss for updating the boss HUD."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "hud_range",
					"Default Value": "55",
					"Type": "Integer",
					"Description": "The max distance from the boss at which the boss's health bar is present on the players screen."
				},
				{
					"Name": "name",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The name that will be displayed above the boss's health bar."
				},
				{
					"Name": "should_darken_sky",
					"Default Value": "Boolean",
					"Type": "false",
					"Description": "Whether the sky should darken in the presence of the boss."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:boss": {
					"hud_range": 55,
					"name": "Spooky Boss!",
					"should_darken_sky": true
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " wither" },
		{
			"type": "code",
			"data": {
				"minecraft:boss": { "should_darken_sky": true, "hud_range": 55 }
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/wither.json",
			"range": [21, 24]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:boss`"
		},
		{
			"type": "list",
			"data": [
				"[ender_dragon](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_dragon.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)"
			]
		}
	],
	"minecraftComponent_break_blocks": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:break_blocks",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:break_blocks"
		},
		{
			"type": "other",
			"data": "`minecraft:break_blocks` specifies the blocks that the entity can break as it moves around."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "breakable_blocks",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "A list of the blocks that can be broken as this entity moves around"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:break_blocks": {
					"breakable_blocks": ["grass", "dirt"]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " ravager" },
		{
			"type": "code",
			"data": { "despawn_from_distance": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/ravager.json",
			"range": [298, 333]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:break_blocks`"
		},
		{
			"type": "list",
			"data": [
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)"
			]
		}
	],
	"minecraftComponent_breathable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "mammerla",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:breathable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:breathable"
		},
		{
			"type": "other",
			"data": "`minecraft:breathable` defines what blocks an entity can breathe in and gives them the ability to suffocate."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "breathe_blocks",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of blocks this entity can breathe in, in addition to the above."
				},
				{
					"Name": "breathes_air",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, this entity can breathe in air."
				},
				{
					"Name": "breathes_lava",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, this entity can breathe in lava."
				},
				{
					"Name": "breathes_solids",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, this entity can breathe in solid blocks."
				},
				{
					"Name": "breathes_water",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, this entity can breathe in water."
				},
				{
					"Name": "generates_bubbles",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, this entity will have visible bubbles while in water."
				},
				{
					"Name": "inhale_time",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Time in seconds to recover breath to maximum."
				},
				{
					"Name": "non_breathe_blocks",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of blocks this entity can't breathe in, in addition to the other \"breathes\" parameters."
				},
				{
					"Name": "suffocate_time",
					"Default Value": "-20",
					"Type": "Integer",
					"Description": "Time in seconds between suffocation damage."
				},
				{
					"Name": "total_supply",
					"Default Value": "15",
					"Type": "Integer",
					"Description": "Time in seconds the entity can hold its breath."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:breathable": {
					"breathes_air": true,
					"breathes_lava": false,
					"breathes_solids": false,
					"breathes_water": false,
					"generates_bubbles": true,
					"inhale_time": 0,
					"suffocate_time": -20,
					"total_supply": 15
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " dolphin" },
		{
			"type": "code",
			"data": {
				"minecraft:breathable": {
					"total_supply": 240,
					"suffocate_time": 0,
					"breathes_air": true,
					"breathes_water": false,
					"generates_bubbles": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 3, "data": " zombie" },
		{
			"type": "code",
			"data": {
				"minecraft:breathable": {
					"total_supply": 15,
					"suffocate_time": 0,
					"breathes_air": true,
					"breathes_water": true
				}
			},
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:breathable`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_breedable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:breedable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:breedable"
		},
		{
			"type": "other",
			"data": "`minecraft:breedable` allows an entity to establish a way to get into the `love` state used for breeding."
		},
		{ "type": "alert", "data": "IMPORTANT" },
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "allow_sitting",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, entities can breed while sitting"
				},
				{
					"Name": "blend_attributes",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, the entities will blend their attributes in the offspring after they breed. For example, horses blend their health, movement, and jump_strength in their offspring."
				},
				{
					"Name": "breed_cooldown",
					"Default Value": "60",
					"Type": "Decimal",
					"Description": "Time in seconds before the Entity can breed again."
				},
				{
					"Name": "breed_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of items that can be used to get the entity into the 'love' state"
				},
				{
					"Name": "[breeds_with](#breeds_with)",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of entity definitions that this entity can breed with."
				},
				{
					"Name": "causes_pregnancy",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, the entity will become pregnant instead of spawning a baby."
				},
				{
					"Name": "[deny_parents_variant](#deny_parents_variant)",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Determines how likely the baby of parents with the same variant will deny that variant and take a random variant within the given range instead."
				},
				{
					"Name": "[environment_requirements](#environment_requirements)",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of nearby block requirements to get the entity into the 'love' state."
				},
				{
					"Name": "extra_baby_chance",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Chance that up to 16 babies will spawn between 0.0 and 1.0, where 1.0 is 100%."
				},
				{
					"Name": "inherit_tamed",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, the babies will be automatically tamed if its parents are"
				},
				{
					"Name": "[love_filters](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The filters to run when attempting to fall in love."
				},
				{
					"Name": "[mutation_factor](#mutation_factor)",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Determines how likely the babies are to NOT inherit one of their parent's variances. Values are between 0.0 and 1.0, with a higher number meaning more likely to mutate."
				},
				{
					"Name": "require_full_health",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, the entity needs to be at full health before it can breed."
				},
				{
					"Name": "require_tame",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, the entities need to be tamed first before they can breed."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " breeds_with" },
		{
			"type": "other",
			"data": "`breeds_with` is a list defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "baby_type",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The entity definition of this entity's babies."
				},
				{
					"Name": "breed_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to run when this entity breeds."
				},
				{
					"Name": "mate_type",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The entity definition of this entity's mate."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " deny_parents_variant" },
		{
			"type": "other",
			"data": "`deny_parents_variant` is a JSON Object defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "chance",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The percentage chance of denying the parents' variant."
				},
				{
					"Name": "max_variant",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "The inclusive maximum of the variant range."
				},
				{
					"Name": "min_variant",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "The inclusive minimum of the variant range."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " environment_requirements" },
		{
			"type": "other",
			"data": "`environment_requirements` is a list defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "blocks",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The block types required nearby for the entity to breed."
				},
				{
					"Name": "count",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "The number of the required block types nearby for the entity to breed."
				},
				{
					"Name": "radius",
					"Default Value": "_not set_",
					"Type": "Decimal",
					"Description": "How many blocks radius from the mob's center to search in for the required blocks. Bounded between 0 and 16."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " mutation_factor" },
		{
			"type": "other",
			"data": "`mutation_factor` is a list defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "color",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The percentage chance of a mutation on the entity's color."
				},
				{
					"Name": "extra_variant",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The percentage chance of a mutation on the entity's extra variant type."
				},
				{
					"Name": "variant",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The percentage chance of a mutation on the entity's variant type."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:breedable": {
					"allow_sitting": false,
					"blend_attributes": false,
					"breed_cooldown": false,
					"breed_items": ["carrot", "bamboo"],
					"breeds_with": {
						"mate_type": "minecraft:panda",
						"baby_type": "minecraft:panda",
						"breed_event": {
							"event": "minecraft:entity_born",
							"target": "baby"
						}
					},
					"deny_parents_variant": {
						"chance": 0.00098,
						"min_variant": 0,
						"max_variant": 1
					},
					"environment_requirements": {
						"blocks": "grass",
						"count": 10,
						"radius": 10
					},
					"causes_pregnancy": false,
					"extra_baby_chance": 0,
					"inherit_tamed": true,
					"love_filters": {
						"test": "has_damage",
						"subject": "self",
						"operator": "=",
						"value": false
					},
					"mutation_factor": {
						"color": 0.25,
						"extra_variant": 0.35,
						"variant": 0.5
					},
					"require_full_health": false,
					"require_tame": true
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " horse" },
		{
			"type": "code",
			"data": {
				"minecraft:breedable": {
					"require_tame": true,
					"inherit_tamed": false,
					"breeds_with": [
						{
							"mate_type": "minecraft:horse",
							"baby_type": "minecraft:horse",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						},
						{
							"mate_type": "minecraft:donkey",
							"baby_type": "minecraft:mule",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						}
					],
					"breed_items": [
						"golden_carrot",
						"golden_apple",
						"appleEnchanted"
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/horse.json",
			"range": [173, 199]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:breedable`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md))",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)"
			]
		}
	],
	"minecraftComponent_bribeable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:bribeable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:bribeable"
		},
		{
			"type": "other",
			"data": "`minecraft:bribeable` allows an entity to establish a way to get into the `bribed` state."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "bribe_cooldown",
					"Default Value": "2.0",
					"Type": "Decimal",
					"Description": "Time in seconds before the Entity can be bribed again."
				},
				{
					"Name": "bribe_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of items that can be used to bribe the entity."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:bribeable": {
					"bribe_cooldown": 2,
					"bribe_items": "stick"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " dolphin" },
		{
			"type": "code",
			"data": {
				"minecraft:bribeable": { "bribe_items": ["fish", "salmon"] }
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/dolphin.json",
			"range": [18, 20]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:bribeable`"
		},
		{
			"type": "list",
			"data": [
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)"
			]
		}
	],
	"minecraftComponent_buoyant": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:buoyant",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:buoyant"
		},
		{
			"type": "other",
			"data": "`minecraft:buoyant` allows an entity to float on the specified liquid blocks."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "apply_gravity",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "Applies gravity each tick. Causes more of a wave simulation, but will cause more gravity to be applied outside liquids."
				},
				{
					"Name": "base_buoyancy",
					"Default Value": "1.0",
					"Type": "Decimal",
					"Description": "Base buoyancy used to calculate how much will a mob float."
				},
				{
					"Name": "big_wave_probability",
					"Default Value": "0.03",
					"Type": "Decimal",
					"Description": "Probability for a big wave hitting the entity. Only used if `simulate_waves` is true."
				},
				{
					"Name": "big_wave_speed",
					"Default Value": "10.0",
					"Type": "Decimal",
					"Description": "Multiplier for the speed to make a big wave. Triggered depending on `big_wave_probability`."
				},
				{
					"Name": "drag_down_on_buoyancy_removed",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "How much an actor will be dragged down when the Buoyancy Component is removed."
				},
				{
					"Name": "liquid_blocks",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of blocks this entity can float on. **Must be a liquid block.**"
				},
				{
					"Name": "simulate_waves",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "Should the movement simulate waves going through."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:buoyant": {
					"apply_gravity": true,
					"base_buoyancy": 1,
					"simulate_waves": true,
					"big_wave_probability": 0.03,
					"big_wave_speed": 10,
					"drag_down_on_buoyancy_removed": 0,
					"liquid_blocks": [
						"minecraft:water",
						"minecraft:flowing_water"
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " boat" },
		{
			"type": "code",
			"data": {
				"minecraft:buoyant": {
					"base_buoyancy": 1,
					"apply_gravity": true,
					"simulate_waves": true,
					"big_wave_probability": 0.03,
					"big_wave_speed": 10,
					"liquid_blocks": [
						"minecraft:water",
						"minecraft:flowing_water"
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/boat.json",
			"range": [13, 23]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:buoyant`"
		},
		{
			"type": "list",
			"data": [
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[xp_orb](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_orb.md)"
			]
		}
	],
	"minecraftComponent_burns_in_daylight": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "mammerla",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:burns_in_daylight",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:burns_in_daylight"
		},
		{
			"type": "other",
			"data": "`minecraft:burns_in_daylight` allows an entity to burn when it's daylight."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:burns_in_daylight": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " phantom" },
		{
			"type": "code",
			"data": { "minecraft:burns_in_daylight": {} },
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:burns_in_daylight`"
		},
		{
			"type": "list",
			"data": [
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_celebrate_hunt": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:celebrate_hunt",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:celebrate_hunt"
		},
		{
			"type": "other",
			"data": "`minecraft:celebrate_hunt` allows an entity to celebration when hunting a specific entity."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "broadcast",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, celebration will be broadcasted to other entities in the radius."
				},
				{
					"Name": "[celeberation_targets](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The list of conditions that target of hunt must satisfy to initiate celebration."
				},
				{
					"Name": "celebrate_sound",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The sound event to play when the mob is celebrating"
				},
				{
					"Name": "duration",
					"Default Value": "4",
					"Type": "Integer",
					"Description": "Duration, in seconds, of celebration"
				},
				{
					"Name": "radius",
					"Default Value": "16",
					"Type": "Decimal",
					"Description": "If broadcast is enabled, specifies the radius in which it will notify other entities for celebration."
				},
				{
					"Name": "sound_interval",
					"Default Value": "0",
					"Type": "Range [a, b]",
					"Description": "The range of time in seconds to randomly wait before playing the sound again"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:celebrate_hunt": {
					"broadcast": true,
					"celebration_targets": {
						"all_of": [{ "test": "is_family", "value": "cow" }]
					},
					"celebrate_sound": "celebrate",
					"duration": 4,
					"radius": 16,
					"sound_interval": { "range_min": 1, "range_max": 5 }
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " piglin" },
		{
			"type": "code",
			"data": {
				"minecraft:celebrate_hunt": {
					"celebration_targets": {
						"all_of": [{ "test": "is_family", "value": "hoglin" }]
					},
					"broadcast": true,
					"duration": 10,
					"celebrate_sound": "celebrate",
					"sound_interval": { "range_min": 2, "range_max": 5 },
					"radius": 16
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/piglin.json",
			"range": [194, 211]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:celebrate_hunt`"
		},
		{
			"type": "list",
			"data": [
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)"
			]
		}
	],
	"minecraftComponent_combat_regeneration": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:combat_regeneration",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:combat_regeneration"
		},
		{
			"type": "other",
			"data": "`minecraft:combat_regeneration`gives Regeneration I and removes Mining Fatigue from the mob that kills the Actor's attack target."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "regeneration_duration",
					"Default Value": "5",
					"Type": "Integer",
					"Description": "The duration in seconds that the mob will gain Regeneration I."
				},
				{
					"Name": "apply_to_self",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether the mob will grant itself Combat Regeneration if it kills the target."
				},
				{
					"Name": "apply_to_family",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether the mob will grant mobs of the same type Combat Regeneration if they kill the target."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:combat_regeneration": {
					"regeneration_duration": 7,
					"apply_to_self": true,
					"apply_to_family": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla Mob examples" },
		{ "type": "heading", "level": 3, "data": " axolotl" },
		{
			"type": "code",
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/axolotl.json",
			"range": [209]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla Mobs using `minecraft:combat_regeneration`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)"
			]
		}
	],
	"minecraftComponent_conditional_bandwidth_optimization": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:conditional_bandwidth_optimization",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:conditional_bandwidth_optimization"
		},
		{
			"type": "other",
			"data": "`minecraft:conditional_bandwidth_optimization` defines the Conditional Spatial Update Bandwidth Optimizations of this entity."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "conditional_values",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The object containing the conditional bandwidth optimization values."
				},
				{
					"Name": "default_values",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "The object containing the default bandwidth optimization values."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " conditional_values" },
		{
			"type": "other",
			"data": "`conditional_values` is a list defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "max_dropped_ticks",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "In relation to the optimization value, determines the maximum ticks spatial update packets can be not sent."
				},
				{
					"Name": "max_optimized_distance",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "The maximum distance considered during bandwidth optimizations. Any value below the max is interpolated to find optimization, and any value greater than or equal to this max results in max optimization."
				},
				{
					"Name": "use_motion_prediction_hints",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "When set to true, smaller motion packets will be sent during drop packet intervals, resulting in the same amount of packets being sent as without optimizations but with much less data being sent. This should be used when actors are travelling very quickly or teleporting to prevent visual oddities."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " default_values" },
		{
			"type": "other",
			"data": "`default_values` is a JSON object defined by two parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "max_dropped_ticks",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "In relation to the optimization value, determines the maximum ticks spatial update packets can be not sent."
				},
				{
					"Name": "max_optimized_distance",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "The maximum distance considered during bandwidth optimizations. Any value below the max is interpolated to find optimization, and any value greater than or equal to this max results in max optimization."
				},
				{
					"Name": "use_motion_prediction_hints",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "When set to true, smaller motion packets will be sent during drop packet intervals, resulting in the same amount of packets being sent as without optimizations but with much less data being sent. This should be used when actors are travelling very quickly or teleporting to prevent visual oddities."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:conditional_bandwidth_optimization": {
					"conditional_values": {
						"max_dropped_ticks": 20,
						"max_optimized_distance": 200,
						"use_motion_prediction_hints": false
					},
					"default_values": {
						"max_dropped_ticks": 10,
						"max_optimized_distance": 100,
						"use_motion_prediction_hints": false
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " fireworks_rocket" },
		{
			"type": "code",
			"data": {
				"minecraft:conditional_bandwidth_optimization": {
					"default_values": {
						"max_optimized_distance": 80,
						"max_dropped_ticks": 10,
						"use_motion_prediction_hints": true
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/fireworks_rocket.json",
			"range": [21, 27]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:conditional_bandwidth_optimization`"
		},
		{
			"type": "list",
			"data": [
				"[area_effect_cloud](../../../../Source/VanillaBehaviorPack_Snippets/entities/area_effect_cloud.md)",
				"[armor_stand](../../../../Source/VanillaBehaviorPack_Snippets/entities/armor_stand.md)",
				"[arrow](../../../../Source/VanillaBehaviorPack_Snippets/entities/arrow.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chest_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/chest_minecart.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[command_block_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/command_block_minecart.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[dragon_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/dragon_fireball.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[egg](../../../../Source/VanillaBehaviorPack_Snippets/entities/egg.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[ender_crystal](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_crystal.md)",
				"[ender_dragon](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_dragon.md)",
				"[ender_pearl](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_pearl.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[eye_of_ender_signal](../../../../Source/VanillaBehaviorPack_Snippets/entities/eye_of_ender_signal.md)",
				"[fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireball.md)",
				"[fireworks_rocket](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireworks_rocket.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[fishing_hook](../../../../Source/VanillaBehaviorPack_Snippets/entities/fishing_hook.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[lightning_bolt](../../../../Source/VanillaBehaviorPack_Snippets/entities/lightning_bolt.md)",
				"[lingering_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/lingering_potion.md)",
				"[llama_spit](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama_spit.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/minecart.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[npc](../../../../Source/VanillaBehaviorPack_Snippets/entities/npc.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker_bullet](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker_bullet.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[small_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/small_fireball.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[snowball](../../../../Source/VanillaBehaviorPack_Snippets/entities/snowball.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[splash_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/splash_potion.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[thrown_trident](../../../../Source/VanillaBehaviorPack_Snippets/entities/thrown_trident.md)",
				"[tnt_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt_minecart.md)",
				"[tnt](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt.md)",
				"[tripod_camera](../../../../Source/VanillaBehaviorPack_Snippets/entities/tripod_camera.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither_skull_dangerous](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull_dangerous.md)",
				"[wither_skull](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[xp_bottle](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_bottle.md)",
				"[xp_orb](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_orb.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_custom_hit_test": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:custom_hit_test",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:custom_hit_test"
		},
		{
			"type": "other",
			"data": "`minecraft:custom_hit_test` defines a list of hitboxes for melee and ranged hits against the entity."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "hitboxes",
					"Default Value": "_not set_",
					"Type": "Array",
					"Description": "Comma-separated array of hitboxes."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " hitboxes" },
		{
			"type": "other",
			"data": "`hitboxes` is an array defined by two parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "height",
					"Default Value": "_not set_",
					"Type": "Decimal",
					"Description": "Height of the hitbox in blocks. A negative value will be assumed to be 0."
				},
				{
					"Name": "width",
					"Default Value": "_not set_",
					"Type": "Decimal",
					"Description": "Width and Depth of the hitbox in blocks. A negative value will be assumed to be 0."
				},
				{
					"Name": "pivot",
					"Default Value": "_not set_",
					"Type": "Vector [a,b,c]",
					"Description": "The offset from the entity's anchor where the hitbox will spawn"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:custom_hit_test": {
					"hitboxes": [
						{ "width": 1, "height": 1, "pivot": [0, 0, 0] }
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " hoglin" },
		{
			"type": "code",
			"data": {
				"minecraft:custom_hit_test": {
					"hitboxes": [
						{ "width": 1, "height": 0.85, "pivot": [0, 0.5, 0] }
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/hoglin.json",
			"range": [107, 115]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:custom_hit_test`"
		},
		{
			"type": "list",
			"data": [
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)"
			]
		}
	],
	"minecraftComponent_damage_over_time": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:damage_over_time",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:damage_over_time"
		},
		{
			"type": "other",
			"data": "`minecraft:damage_over_time` applies a defined amount of damage to the entity at specified intervals."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "damage_per_hurt",
					"Default Value": "1",
					"Type": "Integer",
					"Description": "Amount of damage caused each hurt."
				},
				{
					"Name": "time_between_hurt",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "Time in seconds between damage."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:damage_over_time": {
					"damage_per_hurt": 1,
					"time_between_hurt": 0
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " axolotl" },
		{
			"type": "code",
			"data": {
				"minecraft:damage_over_time": {
					"damage_per_hurt": 1,
					"time_between_hurt": 0
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/axolotl.json",
			"range": [95, 98]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:damage_over_time`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)"
			]
		}
	],
	"minecraftComponent_damage_sensor": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:damage_sensor",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:damage_sensor"
		},
		{
			"type": "other",
			"data": "`minecraft:damage_sensor` defines what events to call when this entity is damaged by specific entities or items."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "List",
					"Default Value": "triggers",
					"Type": "",
					"Description": "List of triggers with the events to call when taking specific kinds of damage."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " triggers" },
		{
			"type": "other",
			"data": "`triggers` is a list that is defined by six parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "cause",
					"Default Value": "none",
					"Type": "String",
					"Description": "Type of damage that triggers the events."
				},
				{
					"Name": "damage_modifier",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "A modifier that adds to/removes from the base damage from the damage cause. It does not reduce damage to less than 0."
				},
				{
					"Name": "damage_multiplier",
					"Default Value": "1.0",
					"Type": "Decimal",
					"Description": "A multiplier that modifies the base damage from the damage cause. If deals_damage is true the multiplier can only reduce the damage the entity will take to a minimum of 1."
				},
				{
					"Name": "deals_damage",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "If true, the damage dealt to the entity will take away health from it, set to false to make the entity ignore that damage."
				},
				{
					"Name": "on_damage",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Specifies filters for entity definitions and events."
				},
				{
					"Name": "on_damage_sound_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Defines what sound to play, if any, when the on_damage filters are met."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " on_damage" },
		{
			"type": "other",
			"data": "`on_damage` is a JSON object that is defined by two main parameters:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "[filters](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "Filters to use to define specific tests"
				},
				{
					"Name": "event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Defines what event to run"
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " cause" },
		{ "type": "alert", "data": "IMPORTANT" },
		{
			"type": "quote",
			"data": "A list of available damage sources can be found at [Entity Damage Source](../../../AddonsReference/Examples/AddonEntities.md#entity-damage-source) located in the Addons Documentation."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:damage_sensor": {
					"triggers": {
						"on_damage": {
							"filters": {
								"test": "has_damage",
								"value": "fire"
							},
							"event": "minecraft:stop_drop_roll",
							"target": "self"
						}
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " goat" },
		{
			"type": "code",
			"data": {
				"minecraft:damage_sensor": {
					"triggers": {
						"cause": "fall",
						"deals_damage": true,
						"damage_modifier": -20
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/goat.json",
			"range": [344, 350]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:damage_sensor`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[ender_dragon](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_dragon.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[npc](../../../../Source/VanillaBehaviorPack_Snippets/entities/npc.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)"
			]
		}
	],
	"minecraftComponent_despawn": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:despawn",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:despawn"
		},
		{
			"type": "other",
			"data": "`minecraft:despawn` allows an entity despawn when the despawn rules or optional filters evaluate to true."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "despawn_from_distance",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Specifies if the \"min_distance\" and \"max_distance\" are used in the standard despawn rules."
				},
				{
					"Name": "despawn_from_chance",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "Determines if \"min_range_random_chance\" is used in the standard despawn rules."
				},
				{
					"Name": "despawn_from_inactivity",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "Determines if the \"min_range_inactivity_timer\" is used in the standard despawn rules."
				},
				{
					"Name": "despawn_from_simulation_edge",
					"Default Value": "true",
					"Type": "Boolean",
					"Description": "Determines if the mob is instantly despawned at the edge of simulation distance in the standard despawn rules."
				},
				{
					"Name": "[filters](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The list of conditions that must be satisfied before the Actor is despawned. If a filter is defined then standard despawn rules are ignored."
				},
				{
					"Name": "min_range_inactivity_timer",
					"Default Value": "30",
					"Type": "Integer",
					"Description": "The amount of time in seconds that the mob must be inactive."
				},
				{
					"Name": "min_range_random_chance",
					"Default Value": "800",
					"Type": "Integer",
					"Description": "A random chance between 1 and the given value."
				},
				{
					"Name": "remove_child_entities",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " despawn_from_distance" },
		{
			"type": "other",
			"data": "`despawn_from_distance` is a JSON Object that is defined by 2 parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "max_distance",
					"Default Value": "128",
					"Type": "Integer",
					"Description": "Maximum distance for standard despawn rules to instantly despawn the mob."
				},
				{
					"Name": "min_distance",
					"Default Value": "32",
					"Type": "Integer",
					"Description": "Minimum distance for standard despawn rules to try to despawn the mob."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:despawn": {
					"despawn_from_distance": {
						"max_distance": 128,
						"min_distance": 32
					},
					"despawn_from_chance": false,
					"despawn_from_inactivity": false,
					"despawn_from_simulation_edge": true,
					"min_range_inactivity_timer": 30,
					"min_range_random_chance": 800,
					"remove_child_entities": false,
					"filters": { "test": "has_damage", "target": "self" }
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " zoglin" },
		{
			"type": "code",
			"data": {
				"minecraft:despawn": {
					"filters": {
						"any_of": [
							{
								"all_of": [
									{ "test": "is_persistent", "value": false },
									{
										"test": "distance_to_nearest_player",
										"operator": ">",
										"value": 54
									}
								]
							},
							{
								"all_of": [
									{ "test": "is_persistent", "value": false },
									{
										"test": "inactivity_timer",
										"subject": "self",
										"value": 30
									},
									{ "test": "random_chance", "value": 800 },
									{
										"test": "distance_to_nearest_player",
										"operator": ">",
										"value": 32
									}
								]
							}
						]
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/zoglin.json",
			"range": [141, 181]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:despawn`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chest_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/chest_minecart.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md))",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_drying_out_timer": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:drying_out_timer",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:drying_out_timer"
		},
		{
			"type": "other",
			"data": "`minecraft:drying_out_timer` sets a timer for drying out that will count down and fire 'dried_out_event' or will stop as soon as the entity will get under rain or water and fire `stopped_drying_out_event`."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "total_time",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "Amount of time in seconds to dry out fully."
				},
				{
					"Name": "dried_out_event",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to fire when the drying out time runs out."
				},
				{
					"Name": "recover_after_dried_out_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to fire when entity was already dried out but received increase in water supply."
				},
				{
					"Name": "stopped_drying_out_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to fire when entity stopped drying out, for example got into water or under rain."
				},
				{
					"Name": "water_bottle_refill_time",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "Optional amount of additional time in seconds given by using splash water bottle on entity."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:drying_out_timer": {
					"total_time": 200,
					"dried_out_event": { "event": "towel_off" },
					"recover_drying_out_event": {
						"event": "recover_after_dried_out"
					},
					"stopped_drying_out_event": { "event": "fell_into_water" },
					"water_bottle_refill_time": 100
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " axolotl" },
		{
			"type": "code",
			"data": {
				"minecraft:drying_out_timer": {
					"total_time": 300,
					"water_bottle_refill_time": 90,
					"dried_out_event": { "event": "dried_out" },
					"stopped_drying_out_event": { "event": "stop_drying_out" },
					"recover_after_dried_out_event": {
						"event": "recover_after_dried_out"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/axolotl.json",
			"range": [101, 113]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:drying_out_timer`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)"
			]
		}
	],
	"minecraftComponent_economy_trade_table": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:economy_trade_table",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:economy_trade_table"
		},
		{
			"type": "other",
			"data": "`minecraft:economy_trade_table` defines this entity's ability to trade with players."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "convert_trades_economy",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1."
				},
				{
					"Name": "cured_discount",
					"Default Value": "[-5, -20]",
					"Type": "Range [a, b]",
					"Description": "How much should the discount be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (low-tier trade discount and high-tier trade discount)"
				},
				{
					"Name": "display_name",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Name to be displayed while trading with this entity"
				},
				{
					"Name": "hero_demand_discount",
					"Default Value": "-4",
					"Type": "Integer",
					"Description": "Used in legacy prices to determine how much should Demand be modified by when the player has the `Hero of the Village` mob effect"
				},
				{
					"Name": "max_cured_discount",
					"Default Value": "[-25, -63]",
					"Type": "Range [a, b]",
					"Description": "The max the discount can be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (low-tier trade discount and high-tier trade discount)"
				},
				{
					"Name": "max_nearby_cured_discount",
					"Default Value": "-200",
					"Type": "Integer",
					"Description": "The max the discount can be modified by when the player has cured a nearby Zombie Villager"
				},
				{
					"Name": "nearby_cured_discount",
					"Default Value": "-25",
					"Type": "Integer",
					"Description": "How much should the discount be modified by when the player has cured a nearby Zombie Villager"
				},
				{
					"Name": "new_screen",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Used to determine if trading with entity opens the new trade screen"
				},
				{
					"Name": "persist_trades",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades."
				},
				{
					"Name": "show_trade_screen",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Show an in game trade screen when interacting with the mob."
				},
				{
					"Name": "table",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "File path relative to the resource pack root for this entity's trades"
				},
				{
					"Name": "use_legacy_price_formula",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Determines whether the legacy formula is used to determines the trade prices."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:economy_trade_table": {
					"convert_trades_economy": false,
					"cured_discount": [-5, -20],
					"display_name": "Got something that might interest you",
					"hero_demand_discount": -4,
					"max_cured_discount": [-25, -63],
					"max_nearby_cured_discount": -200,
					"nearby_cured_discount": -25,
					"new_screen": false,
					"persist_trades": false,
					"show_trade_screen": true,
					"table": "trading/economy_trades/farmer_trades.json",
					"use_legacy_price_formula": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " wandering_trader" },
		{
			"type": "code",
			"data": {
				"minecraft:economy_trade_table": {
					"display_name": "entity.wandering_trader.name",
					"table": "trading/economy_trades/wandering_trader_trades.json",
					"new_screen": true
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/wandering_trader.json",
			"range": [67, 71]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:economy_trade_table`"
		},
		{
			"type": "list",
			"data": [
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)"
			]
		}
	],
	"minecraftComponent_entity_sensor": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:entity_sensor",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:entity_sensor"
		},
		{
			"type": "other",
			"data": "`minecraft:entity_sensor` is a component that fires an event when a set of conditions are met by other entities within the defined range."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "[event_filters](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The set of conditions that must be satisfied to fire the event."
				},
				{
					"Name": "event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to fire when the conditions are met."
				},
				{
					"Name": "maximum_count",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "The maximum number of entities that must pass the filter conditions for the event to send."
				},
				{
					"Name": "minimum_count",
					"Default Value": "1",
					"Type": "Integer",
					"Description": "The minimum number of entities that must pass the filter conditions for the event to send."
				},
				{
					"Name": "relative_range",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true the sensor range is additive on top of the entity's size."
				},
				{
					"Name": "require_all",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true requires all nearby entities to pass the filter conditions for the event to send."
				},
				{
					"Name": "sensor_range",
					"Default Value": "10",
					"Type": "Decimal",
					"Description": "The maximum distance another entity can be from this and have the filters checked against it."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:entity_sensor": {
					"maximum_count": -1,
					"minimum_count": 1,
					"relative_range": true,
					"require_all": false,
					"sensor_range": 10,
					"event_filters": { "test": "has_trade_supply" },
					"event": "minecraft:offer_trade"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " pufferfish" },
		{
			"type": "code",
			"data": {
				"minecraft:entity_sensor": {
					"sensor_range": 2.5,
					"relative_range": false,
					"minimum_count": 1,
					"event_filters": {
						"any_of": [
							{
								"test": "is_family",
								"subject": "other",
								"value": "mob"
							},
							{
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"none_of": {
											"test": "has_ability",
											"subject": "other",
											"value": "instabuild"
										}
									}
								]
							}
						]
					},
					"event": "minecraft:start_half_puff"
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/pufferfish.json",
			"range": [15, 31]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:entity_sensor`"
		},
		{
			"type": "list",
			"data": [
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)"
			]
		}
	],
	"minecraftComponent_environment_sensor": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:environment_sensor",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:environment_sensor"
		},
		{
			"type": "other",
			"data": "`minecraft:environment_sensor` creates a trigger based on environment conditions."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "triggers",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of triggers that fire when the environment conditions match the given filter criteria."
				}
			]
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "event",
					"Default Value": "_not set_",
					"Type": "string",
					"Description": "The event to run when the conditions for this trigger are met."
				},
				{
					"Name": "filters",
					"Default Value": "_not set_",
					"Type": "List / Filter",
					"Description": "The list of conditions for this trigger to execute."
				},
				{
					"Name": "target",
					"Default Value": "self",
					"Type": "string",
					"Description": "The target of the event."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"all_of": [
									{ "test": "is_daytime", "value": true },
									{
										"test": "has_target",
										"operator": "==",
										"value": false
									}
								]
							},
							"event": "minecraft:fox_configure_docile_day"
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " fox" },
		{
			"type": "code",
			"data": {
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"all_of": [
									{ "test": "is_daytime", "value": true },
									{
										"test": "has_target",
										"operator": "==",
										"value": false
									}
								]
							},
							"event": "minecraft:fox_configure_docile_day"
						},
						{
							"filters": {
								"all_of": [
									{ "test": "is_daytime", "value": false },
									{
										"test": "has_target",
										"operator": "==",
										"value": false
									}
								]
							},
							"event": "minecraft:fox_configure_docile_night"
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/fox.json",
			"range": [116, 137]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:environment_sensor`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_equippable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:equippable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:equippable"
		},
		{
			"type": "other",
			"data": "`minecraft:equippable` defines an entity's behavior for having items equipped to it."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "slots",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of slots and the item that can be equipped."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " slots" },
		{
			"type": "other",
			"data": "`slots` is a list defined by six parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "accepted_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of items that can go in this slot."
				},
				{
					"Name": "interact_text",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Text to be displayed when the entity can be equipped with this item when playing with Touch-screen controls."
				},
				{
					"Name": "item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Identifier of the item that can be equipped for this slot."
				},
				{
					"Name": "on_equip",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to trigger when this entity is equipped with this item."
				},
				{
					"Name": "on_unequip",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to trigger when this item is removed from this entity."
				},
				{
					"Name": "slot",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "The slot number of this slot."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:equippable": {
					"slots": [
						{
							"slot": 0,
							"item": "saddle",
							"accepted_items": ["saddle"],
							"on_equip": { "event": "minecraft:horse_saddled" },
							"on_unequip": {
								"event": "minecraft:horse_unsaddled"
							}
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " horse" },
		{
			"type": "code",
			"data": {
				"minecraft:equippable": {
					"slots": [
						{
							"slot": 0,
							"item": "saddle",
							"accepted_items": ["saddle"],
							"on_equip": { "event": "minecraft:horse_saddled" },
							"on_unequip": {
								"event": "minecraft:horse_unsaddled"
							}
						},
						{
							"slot": 1,
							"item": "horsearmoriron",
							"accepted_items": [
								"horsearmorleather",
								"horsearmoriron",
								"horsearmorgold",
								"horsearmordiamond"
							]
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/horse.json",
			"range": [287, 311]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:equippable`"
		},
		{
			"type": "list",
			"data": [
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)"
			]
		}
	],
	"minecraftComponent_equip_item": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:equip_item",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:equip_item"
		},
		{
			"type": "other",
			"data": "`minecraft:equip_item` allows the entity to equip desired equipment."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:equip_item": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " skeleton" },
		{
			"type": "code",
			"data": { "minecraft:equip_item": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/skeleton.json",
			"range": [186, 187]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:equip_item`"
		},
		{
			"type": "list",
			"data": [
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_exhaustion_values": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "docsbryce",
				"ms.author": "v-bbortree",
				"title": "Entity Documentation - minecraft:exhaustion_values",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:exhaustion_values"
		},
		{
			"type": "other",
			"data": "`minecraft:exhaustion_values` defines how much exhaustion each player action should take."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"   Name": "attack",
					"Default Value": "0.3",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when attacking."
				},
				{
					"   Name": "damage",
					"Default Value": "0.1",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when taking damage."
				},
				{
					"   Name": "heal",
					"Default Value": "3",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when healed through food regeneration."
				},
				{
					"   Name": "jump",
					"Default Value": "0.2",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when jumping."
				},
				{
					"   Name": "mine",
					"Default Value": "0.025",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when mining."
				},
				{
					"   Name": "sprint",
					"Default Value": "0.01",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when sprinting."
				},
				{
					"   Name": "sprint_jump",
					"Default Value": "0.8",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when sprint jumping."
				},
				{
					"   Name": "swim",
					"Default Value": "0.015",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when swimming."
				},
				{
					"   Name": "walk",
					"Default Value": "0.01",
					" Type": "Decimal",
					"                            Description": "Amount of exhaustion applied when walking."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:exhaustion_values": {
					"heal": 3,
					"jump": 0.2,
					"sprint_jump": 0.8,
					"mine": 0.025,
					"attack": 0.3,
					"damage": 0.1,
					"walk": 0.01,
					"sprint": 0.01,
					"swim": 0.015
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " player" },
		{
			"type": "code",
			"data": {
				"minecraft:exhaustion_values": {
					"heal": 6,
					"jump": 0.05,
					"sprint_jump": 0.2,
					"mine": 0.005,
					"attack": 0.1,
					"damage": 0.1,
					"walk": 0,
					"sprint": 0.01,
					"swim": 0.01
				}
			},
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:exhaustion_values`"
		},
		{
			"type": "list",
			"data": [
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)"
			]
		}
	],
	"minecraftComponent_experience_reward": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:experience_reward",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:experience_reward"
		},
		{
			"type": "other",
			"data": "`minecraft:experience_reward` defines the amount of experience rewarded when the entity dies or is successfully bred."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "on_bred",
					"Default Value": "0",
					"Type": "Molang",
					"Description": "A Molang expression defining the amount of experience rewarded when this entity is successfully bred. An array of expressions adds each expression's result together for a final total."
				},
				{
					"Name": "on_death",
					"Default Value": "0",
					"Type": "Molang",
					"Description": "A Molang expression defining the amount of experience rewarded when this entity dies. An array of expressions adds each expression's result together for a final total."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:experience_reward": { "on_bred": 0, "on_death": 0 }
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " cow" },
		{
			"type": "code",
			"data": {
				"minecraft:experience_reward": {
					"on_bred": "Math.Random(1,7)",
					"on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/cow.json",
			"range": [33, 36]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:experience_reward`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_explode": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:explode",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:explode"
		},
		{
			"type": "other",
			"data": "`minecraft:explode` defines how the entity explodes."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "breaks_blocks",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, the explosion will destroy blocks in the explosion radius."
				},
				{
					"Name": "causes_fire",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, blocks in the explosion radius will be set on fire."
				},
				{
					"Name": "destroy_affected_by_griefing",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, whether the explosion breaks blocks is affected by the mob griefing game rule."
				},
				{
					"Name": "fire_affected_by_griefing",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, whether the explosion causes fire is affected by the mob griefing game rule."
				},
				{
					"Name": "fuse_length",
					"Default Value": "[0.0, 0.0]",
					"Type": "Range [a, b]",
					"Description": "The range for the random amount of time the fuse will be lit before exploding, a negative value means the explosion will be immediate."
				},
				{
					"Name": "fuse_lit",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the fuse is already lit when this component is added to the entity."
				},
				{
					"Name": "max_resistance",
					"Default Value": "3.40282e+38",
					"Type": "Decimal",
					"Description": "A blocks explosion resistance will be capped at this value when an explosion occurs."
				},
				{
					"Name": "power",
					"Default Value": "3",
					"Type": "Decimal",
					"Description": "The radius of the explosion in blocks and the amount of damage the explosion deals."
				}
			]
		},
		{ "type": "alert", "data": "TIP" },
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:explode": {
					"breaks_blocks": true,
					"causes_fire": false,
					"destroy_affected_by_griefing": false,
					"fire_affected_by_griefing": false,
					"fuse_length": [0, 0],
					"fuse_lit": false,
					"max_resistance": 3.40282e38,
					"power": 3
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " tnt" },
		{
			"type": "code",
			"data": {
				"minecraft:explode": {
					"fuse_length": 4,
					"fuse_lit": true,
					"power": 4,
					"causes_fire": false
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/tnt.json",
			"range": [34, 39]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:explode`"
		},
		{
			"type": "list",
			"data": [
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[ender_crystal](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_crystal.md)",
				"[fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireball.md)",
				"[tnt_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt_minecart.md)",
				"[tnt](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt.md)",
				"[wither_skull_dangerous](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull_dangerous.md)",
				"[wither_skull](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull.md)"
			]
		}
	],
	"minecraftComponent_flocking": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:flocking",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:flocking"
		},
		{
			"type": "other",
			"data": "`minecraft:flocking` allows entities to flock in groups in water or not."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "block_distance",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The distance in blocks that the entity will look at and move from."
				},
				{
					"Name": "block_weight",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The weight of the push back away from blocks."
				},
				{
					"Name": "breach_influence",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The amount of push back given to a flocker that breaches out of the water."
				},
				{
					"Name": "cohesion_threshold",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "The threshold in which to start applying cohesion."
				},
				{
					"Name": "cohesion_weight",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "The weight applied for the cohesion steering of the flock."
				},
				{
					"Name": "goal_weight",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The weight on which to apply on the goal output."
				},
				{
					"Name": "high_flock_limit",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Determines the high bound amount of entities that can be allowed in the flock."
				},
				{
					"Name": "in_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the Flocking Component if the entity exists in water."
				},
				{
					"Name": "influence_radius",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The area around the entity that allows others to be added to the flock."
				},
				{
					"Name": "innner_cohesion_threshold",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The distance in which the flocker will stop applying cohesion."
				},
				{
					"Name": "loner_chance",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The percentage chance between 0-1 that a fish will spawn and not want to join flocks. Invalid values will be capped at the end points."
				},
				{
					"Name": "low_flock_limit",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Determines the low bound amount of entities that can be allowed in the flock."
				},
				{
					"Name": "match_variants",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the flockers that they can only match similar entities that also match the variant, mark variants, and color data of the other potential flockers."
				},
				{
					"Name": "max_height",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The max height allowable in the air or water."
				},
				{
					"Name": "min_height",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The min height allowable in the air or water."
				},
				{
					"Name": "separation_threshold",
					"Default Value": "2",
					"Type": "Decimal",
					"Description": "The distance that is determined to be to close to another flocking and to start applying separation."
				},
				{
					"Name": "separation_weight",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "The weight applied to the separation of the flock."
				},
				{
					"Name": "use_center_of_mass",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the flockers that they will follow flocks based on the center of mass."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:flocking": {
					"block_distance": 0,
					"block_weight": 0,
					"breach_influence": 0,
					"cohesion_threshold": 1,
					"cohesion_weight": 0,
					"goal_weight": 0,
					"high_flock_limit": 0,
					"in_water": false,
					"influence_radius": 0,
					"innner_cohesion_threshold": 0,
					"loner_chance": 0,
					"low_flock_limit": 0,
					"match_variants": false,
					"max_height": 0,
					"min_height": 0,
					"separation_threshold": 2,
					"separation_weight": 2,
					"use_center_of_mass": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " fish" },
		{
			"type": "code",
			"data": {
				"minecraft:flocking": {
					"in_water": true,
					"match_variants": false,
					"use_center_of_mass": true,
					"low_flock_limit": 4,
					"high_flock_limit": 8,
					"goal_weight": 2,
					"loner_chance": 0.1,
					"influence_radius": 3,
					"breach_influence": 7,
					"separation_weight": 1.75,
					"separation_threshold": 0.95,
					"cohesion_weight": 2,
					"cohesion_threshold": 1.95,
					"innner_cohesion_threshold": 1.25,
					"min_height": 1.5,
					"max_height": 6,
					"block_distance": 2,
					"block_weight": 0.85
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/fish.json",
			"range": [112, 131]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:flocking`"
		},
		{
			"type": "list",
			"data": [
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)"
			]
		}
	],
	"minecraftComponent_genetics": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim-",
				"title": "Entity Documentation  minecraft:genetics",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:genetics"
		},
		{
			"type": "other",
			"data": "`minecraft:genetics` defines the way a mob's genes and alleles are passed on to its offspring, and how those traits manifest in the child. Compatible parent genes are crossed together, the alleles are handed down from the parents to the child, and any matching genetic variants fire off JSON events to modify the child and express the traits."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "genes",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of genes that this entity has and will cross with a partner during breeding."
				},
				{
					"Name": "mutation_rate",
					"Default Value": "0.03125",
					"Type": "Decimal",
					"Description": "Chance that an allele will be replaced with a random one instead of the parent's allele during birth."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " genes" },
		{
			"type": "other",
			"data": "`genes` is a list defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "allele_range",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "The range of positive integer allele values for this gene. Spawned mobs will have a random number in this range assigned to them."
				},
				{
					"Name": "genetic_variants",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of genetic variants for this gene. These check for particular allele combinations and fire events when all of them are satisfied."
				},
				{
					"Name": "name",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The name of the gene."
				}
			]
		},
		{ "type": "heading", "level": 4, "data": " allele_range" },
		{
			"type": "other",
			"data": "`allele_range` is an integer defined by two parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "range_max",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Upper bound of the allele values for this gene."
				},
				{
					"Name": "range_min",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Lower bound of the allele values for this gene."
				}
			]
		},
		{ "type": "heading", "level": 4, "data": " genetic_variants" },
		{
			"type": "other",
			"data": "`genetic_variants` is an decimal defined by five parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "birth_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to run when this mob is created and matches the allele conditions."
				},
				{
					"Name": "both_allele",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with both. Can also be a range of integers."
				},
				{
					"Name": "either_allele",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with either. Can also be a range of integers."
				},
				{
					"Name": "hidden_allele",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "If this value is non-negative, compare the mob's hidden allele with this value for a match. Can also be a range of integers."
				},
				{
					"Name": "main_allele",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "If this value is non-negative, compare the mob's main allele with this value for a match. Can also be a range of integers."
				},
				{
					"Name": "mutation_rate",
					"Default Value": "-1",
					"Type": "Decimal",
					"Description": "If this value is non-negative, overrides the chance for this gene that an allele will be replaced with a random one instead of the parent's allele during birth. Non-negative values greater than `1` will be the same as the value `1`."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:genetics": {
					"genes": [
						{
							"allele_range": { "range_max": 0, "range_min": 0 },
							"genetic_variants": [
								{
									"birth_event": {
										"event": "minecraft:born_screamer",
										"target": "self"
									},
									"main_allele": {
										"range_min": 1,
										"range_max": 2
									}
								}
							],
							"name": "gene"
						}
					],
					"mutation_rate": 0.03125
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " panda" },
		{
			"type": "code",
			"data": {
				"minecraft:genetics": {
					"mutation_rate": 0.03125,
					"genes": [
						{
							"name": "panda_variant",
							"allele_range": { "range_min": 0, "range_max": 15 },
							"genetic_variants": [
								{
									"main_allele": 0,
									"birth_event": {
										"event": "minecraft:panda_lazy",
										"target": "self"
									}
								},
								{
									"main_allele": 1,
									"birth_event": {
										"event": "minecraft:panda_worried",
										"target": "self"
									}
								},
								{
									"main_allele": 2,
									"birth_event": {
										"event": "minecraft:panda_playful",
										"target": "self"
									}
								},
								{
									"main_allele": 3,
									"birth_event": {
										"event": "minecraft:panda_aggressive",
										"target": "self"
									}
								},
								{
									"both_allele": {
										"range_min": 4,
										"range_max": 7
									},
									"birth_event": {
										"event": "minecraft:panda_weak",
										"target": "self"
									}
								},
								{
									"both_allele": {
										"range_min": 8,
										"range_max": 9
									},
									"birth_event": {
										"event": "minecraft:panda_brown",
										"target": "self"
									}
								}
							]
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/panda.json",
			"range": [471, 532]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:genetics`"
		},
		{
			"type": "list",
			"data": [
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)"
			]
		}
	],
	"minecraftComponent_giveable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:giveable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:giveable"
		},
		{
			"type": "other",
			"data": "`minecraft:giveable` defines sets of items that can be used to trigger events when used on this entity. The item will also be taken and placed in the entity's inventory."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "cooldown",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "An optional cool down in seconds to prevent spamming interactions."
				},
				{
					"Name": "items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of items that can be given to the entity to place in their inventory."
				},
				{
					"Name": "on_give",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to fire when the correct item is given."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:giveable": {
					"triggers": {
						"cooldown": 3,
						"items": ["bamboo", "cake"],
						"on_give": {
							"event": "minecraft:on_calm",
							"target": "self"
						}
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " panda" },
		{
			"type": "code",
			"data": {
				"minecraft:giveable": {
					"triggers": {
						"cooldown": 3,
						"items": ["bamboo", "cake"],
						"on_give": {
							"event": "minecraft:on_calm",
							"target": "self"
						}
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/panda.json",
			"range": [346, 358]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:giveable`"
		},
		{
			"type": "list",
			"data": [
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)"
			]
		}
	],
	"minecraftComponent_group_size": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:group_size",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:group_size"
		},
		{
			"type": "other",
			"data": "`minecraft:group_size` keeps track of entity group size in the given radius."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "filters",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The list of conditions that must be satisfied for other entities to be counted towards group size."
				},
				{
					"Name": "radius",
					"Default Value": "16",
					"Type": "Decimal",
					"Description": "Radius from center of entity."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:group_size": {
					"filters": { "test": "has_ranged_weapon" },
					"radius": 16
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " piglin" },
		{
			"type": "code",
			"data": {
				"minecraft:group_size": {
					"radius": 32,
					"filters": {
						"all_of": [
							{
								"test": "has_component",
								"operator": "!=",
								"value": "minecraft:is_baby"
							},
							{ "test": "is_family", "value": "piglin" }
						]
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/piglin.json",
			"range": [168, 183]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:group_size`"
		},
		{
			"type": "list",
			"data": [
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)"
			]
		}
	],
	"minecraftComponent_grows_crop": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:grows_crop",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:grows_crop"
		},
		{
			"type": "other",
			"data": "`minecraft:grows_crop` could increase crop growth when entity walks over crop."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "chance",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Value between 0-1. Chance of success per tick."
				},
				{
					"Name": "charges",
					"Default Value": "10",
					"Type": "Integer",
					"Description": "Number of charges"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:grows_crop": { "chance": 0, "charges": 10 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " bee" },
		{
			"type": "code",
			"data": {
				"minecraft:grows_crop": { "charges": 10, "chance": 0.03 }
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/bee.json",
			"range": [216, 219]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:grows_crop`"
		},
		{
			"type": "list",
			"data": [
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)"
			]
		}
	],
	"minecraftComponent_healable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:healable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:healable"
		},
		{
			"type": "other",
			"data": "`minecraft:healable` defines the interactions with this entity for healing it."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "filters",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The filter group that defines the conditions for using this item to heal the entity."
				},
				{
					"Name": "force_use",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Determines if item can be used regardless of entity being at full health."
				},
				{
					"Name": "items",
					"Default Value": "_not set_",
					"Type": "Array",
					"Description": "The array of items that can be used to heal this entity."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " items" },
		{
			"type": "other",
			"data": "`items` is an array defined by two parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "heal_amount",
					"Default Value": "1",
					"Type": "Integer",
					"Description": "The amount of health this entity gains when fed this item."
				},
				{
					"Name": "item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Item identifier that can be used to heal this entity."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:healable": {
					"filters": { "test": "has_damage", "value": "fatal" },
					"force_use": false,
					"items": [{ "heal_amount": 1, "item": "carrot" }]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " wolf" },
		{
			"type": "code",
			"data": {
				"minecraft:healable": {
					"items": [
						{ "item": "porkchop", "heal_amount": 3 },
						{ "item": "cooked_porkchop", "heal_amount": 8 },
						{ "item": "fish", "heal_amount": 2 },
						{ "item": "salmon", "heal_amount": 2 },
						{ "item": "clownfish", "heal_amount": 1 },
						{ "item": "pufferfish", "heal_amount": 1 },
						{ "item": "cooked_fish", "heal_amount": 5 },
						{ "item": "cooked_salmon", "heal_amount": 6 },
						{ "item": "beef", "heal_amount": 3 },
						{ "item": "cooked_beef", "heal_amount": 8 },
						{ "item": "chicken", "heal_amount": 2 },
						{ "item": "cooked_chicken", "heal_amount": 6 },
						{ "item": "muttonRaw", "heal_amount": 2 },
						{ "item": "muttonCooked", "heal_amount": 6 },
						{ "item": "rotten_flesh", "heal_amount": 4 },
						{ "item": "rabbit", "heal_amount": 3 },
						{ "item": "cooked_rabbit", "heal_amount": 5 },
						{ "item": "rabbit_stew", "heal_amount": 10 }
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/wolf.json",
			"range": [299, 374]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:healable`"
		},
		{
			"type": "list",
			"data": [
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)"
			]
		}
	],
	"minecraftComponent_home": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:home",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:home"
		},
		{
			"type": "other",
			"data": "`minecraft:home` saves a home point of interest for when the the entity is spawned."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "home_block_list",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Optional block list that the home position will be associated with. If any of the blocks no longer exist at that position, the home restriction is removed. Example syntax: minecraft:sand. Not supported: minecraft:sand:1"
				},
				{
					"Name": "restriction_radius",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "The radius that the entity will be restricted to in relation to its home"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:home": {
					"home_block_list": [],
					"restriction_radius": -1
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " bee" },
		{
			"type": "code",
			"data": {
				"minecraft:home": {
					"restriction_radius": 22,
					"home_block_list": [
						"minecraft:bee_nest",
						"minecraft:beehive"
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/bee.json",
			"range": [433, 439]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:home`"
		},
		{
			"type": "list",
			"data": [
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)"
			]
		}
	],
	"minecraftComponent_hurt_on_condition": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:hurt_on_condition",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:hurt_on_condition"
		},
		{
			"type": "other",
			"data": "`minecraft:hurt_on_condition` defines a set of conditions under which an entity should take damage."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "damage_conditions",
					"Default Value": "_not set_",
					"Type": "Array",
					"Description": "List of damage conditions that, when met, can cause damage to the entity."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " damage_conditions" },
		{
			"type": "other",
			"data": "`damage_conditions` is an array defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "[filters](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "Filter used to test for"
				},
				{
					"Name": "cause",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The kind of damage that is caused to the entity. Various armors and spells use this to determine if the entity is immune."
				},
				{
					"Name": "damange_per_tick",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "Amount of damage done each tick that the conditions are met."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " cause" },
		{ "type": "alert", "data": "IMPORTANT" },
		{
			"type": "quote",
			"data": "A list of available damage sources can be found at [Entity Damage Source](../../../AddonsReference/Examples/AddonEntities.md#entity-damage-source) located in the Addons Documentation."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:hurt_on_condition": {
					"damage_conditions": [
						{
							"filters": {
								"test": "in_water",
								"subject": "self",
								"operator": "==",
								"value": true
							},
							"causes": "drowning",
							"damage_per_tick": 1
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " chicken" },
		{
			"type": "code",
			"data": {
				"minecraft:hurt_on_condition": {
					"damage_conditions": [
						{
							"filters": {
								"test": "in_lava",
								"subject": "self",
								"operator": "==",
								"value": true
							},
							"cause": "lava",
							"damage_per_tick": 4
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/chicken.json",
			"range": [108, 116]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:hurt_on_condition`"
		},
		{
			"type": "list",
			"data": [
				"[armor_stand](../../../../Source/VanillaBehaviorPack_Snippets/entities/armor_stand.md)",
				"[arrow](../../../../Source/VanillaBehaviorPack_Snippets/entities/arrow.md)",
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[npc](../../../../Source/VanillaBehaviorPack_Snippets/entities/npc.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker_bullet](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker_bullet.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[tripod_camera](../../../../Source/VanillaBehaviorPack_Snippets/entities/tripod_camera.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_inside_block_notifier": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:inside_block_notifier",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:inside_block_notifier"
		},
		{
			"type": "other",
			"data": "`minecraft:inside_block_notifier` verifies whether the entity is inside any of the listed blocks."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "block_list",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of blocks, with certain block states, that we are monitoring to see if the entity is inside."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:inside_block_notifier": {
					"block_list": [
						{
							"block": {
								"name": "minecraft:bubble_column",
								"states": { "drag_down": true }
							},
							"entered_block_event": {
								"event": "minecraft:entered_bubble_column_down",
								"target": "self"
							},
							"exited_block_event": {
								"event": "minecraft:exited_bubble_column",
								"target": "self"
							}
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " boat" },
		{
			"type": "code",
			"data": {
				"minecraft:inside_block_notifier": {
					"block_list": [
						{
							"block": {
								"name": "minecraft:bubble_column",
								"states": { "drag_down": true }
							},
							"entered_block_event": {
								"event": "minecraft:entered_bubble_column_down",
								"target": "self"
							},
							"exited_block_event": {
								"event": "minecraft:exited_bubble_column",
								"target": "self"
							}
						},
						{
							"block": {
								"name": "minecraft:bubble_column",
								"states": { "drag_down": false }
							},
							"entered_block_event": {
								"event": "minecraft:entered_bubble_column_up",
								"target": "self"
							},
							"exited_block_event": {
								"event": "minecraft:exited_bubble_column",
								"target": "self"
							}
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/boat.json",
			"range": [198, 233]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:inside_block_notifier`"
		},
		{
			"type": "list",
			"data": [
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)"
			]
		}
	],
	"minecraftComponent_insomnia": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:insomnia",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:insomnia"
		},
		{
			"type": "other",
			"data": "`minecraft:insomnia` adds a timer since last rested to see if phantoms should spawn."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "days_until_insomnia",
					"Default Value": "3.0",
					"Type": "Decimal",
					"Description": "Number of days the mob has to stay up until the insomnia effect begins."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:insomnia": { "days_until_insomnia": 3 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " player" },
		{
			"type": "code",
			"data": { "minecraft:insomnia": { "days_until_insomnia": 3 } },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/player.json",
			"range": [112, 114]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:insomnia`"
		},
		{
			"type": "list",
			"data": [
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)"
			]
		}
	],
	"minecraftComponent_instant_despawn": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:instant_despawn",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:instant_despawn"
		},
		{
			"type": "other",
			"data": "`minecraft:instant_despawn` despawns the Actor immediately."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "remove_child_entities",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:instant_despawn": { "remove_child_entities": false }
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{
			"type": "other",
			"data": "No entities currently use `minecraft:instant_despawn`."
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:instant_despawn`"
		},
		{
			"type": "other",
			"data": "No entities currently use `minecraft:instant_despawn`."
		}
	],
	"minecraftComponent_interact": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:interact",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:interact"
		},
		{
			"type": "other",
			"data": "`minecraft:interact` defines interactions with this entity."
		},
		{ "type": "heading", "level": 2, "data": " Parameter" },
		{
			"type": "table",
			"data": [
				{
					"Name": "add_items",
					"Default Value": "",
					"Type": "JSON Object",
					"Description": "Loot table with items to add to the player's inventory upon successful interaction."
				},
				{
					"Name": "cooldown",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "Time in seconds before this entity can be interacted with again."
				},
				{
					"Name": "cooldown_after_being_attacked",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "Time in seconds before this entity can be interacted with after being attacked."
				},
				{
					"Name": "health_amount",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "The amount of health this entity will recover or hurt when interacting with this item. Negative values will harm the entity."
				},
				{
					"Name": "hurt_item",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "The amount of damage the item will take when used to interact with this entity. A value of 0 means the item won't lose durability."
				},
				{
					"Name": "interact_text",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Text to show when the player is able to interact in this way with this entity when playing with Touch-screen controls."
				},
				{
					"Name": "on_interact",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to fire when the interaction occurs."
				},
				{
					"Name": "particle_on_start",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Particle effect that will be triggered at the start of the interaction."
				},
				{
					"Name": "play_sounds",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "List of sounds to play when the interaction occurs."
				},
				{
					"Name": "spawn_entities",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "List of entities to spawn when the interaction occurs."
				},
				{
					"Name": "spawn_items",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Loot table with items to drop on the ground upon successful interaction."
				},
				{
					"Name": "swing",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, the player will do the 'swing' animation when interacting with this entity."
				},
				{
					"Name": "transform_to_item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The item used will transform to this item upon successful interaction. Format: `itemName:auxValue`"
				},
				{
					"Name": "use_item",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, the interaction will use an item."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " add_items" },
		{
			"type": "other",
			"data": "`add_items` is a JSON object defined by one parameter. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "table",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "File path, relative to the Behavior Pack's path, to the loot table file."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " particle_on_start" },
		{
			"type": "other",
			"data": "`particle_on_start` is a JSON object defined by three parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "particle_offset_towards_interactor",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the particle will appear closer to who performed the interaction."
				},
				{
					"Name": "particle_type",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Name of the particle system to run"
				},
				{
					"Name": "particle_y_offset",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "Vertical offset of the particle system"
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " spawn_items" },
		{
			"type": "other",
			"data": "`spawn_items` is a JSON object defined by one parameter. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Type": "table",
					"Name": "_not set_",
					"Default Value": "String",
					"Description": "File path, relative to the Behavior Pack's path, to the loot table file."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:interact": {
					"interactions": [
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "has_equipment",
											"domain": "hand",
											"subject": "other",
											"value": "bucket:0"
										}
									]
								}
							},
							"add_items": {
								"table": "loot_tables/gameplay/entities/cow_milking.json"
							},
							"cooldown": 0,
							"cooldown_after_being_attacked": 0,
							"hurt_item": 0,
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"swing": true,
							"use_item": true,
							"transform_to_item": "bucket:1",
							"play_sounds": "milk",
							"interact_text": "action.interact.milk",
							"spawn_entities": "minecraft:cow_adult",
							"spawn_items": {
								"table": "loot_tables/entities/cow.json"
							}
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " mooshroom" },
		{
			"type": "code",
			"data": {
				"minecraft:interact": {
					"interactions": [
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "bowl"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "has_component",
											"operator": "!=",
											"value": "minecraft:transformation"
										}
									]
								},
								"event": "minecraft:flowerless",
								"target": "self"
							},
							"add_items": {
								"table": "loot_tables/gameplay/entities/mooshroom_milking.json"
							},
							"use_item": true,
							"play_sounds": "milk_suspiciously",
							"interact_text": "action.interact.moostew"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:2"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 7
										}
									]
								},
								"event": "minecraft:ate_allium",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:3"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 3
										}
									]
								},
								"event": "minecraft:ate_bluet",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:1"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 6
										}
									]
								},
								"event": "minecraft:ate_orchid",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:9"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 1
										}
									]
								},
								"event": "minecraft:ate_cornflower",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "yellow_flower"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 5
										}
									]
								},
								"event": "minecraft:ate_dandelion",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:10"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 4
										}
									]
								},
								"event": "minecraft:ate_lily",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:8"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 8
										}
									]
								},
								"event": "minecraft:ate_daisy",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:0"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 0
										}
									]
								},
								"event": "minecraft:ate_poppy",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"any_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:4"
										},
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:5"
										},
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:6"
										},
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "red_flower:7"
										}
									],
									"all_of": [
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 2
										}
									]
								},
								"event": "minecraft:ate_tulip",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "wither_rose"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										},
										{
											"test": "is_mark_variant",
											"subject": "self",
											"operator": "!=",
											"value": 9
										}
									]
								},
								"event": "minecraft:ate_rose",
								"target": "self"
							},
							"use_item": true,
							"play_sounds": "eat",
							"particle_on_start": {
								"particle_type": "smoke",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.feed"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "shears"
										},
										{
											"test": "has_component",
											"operator": "!=",
											"value": "minecraft:transformation"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 0
										}
									]
								},
								"event": "become_cow",
								"target": "self"
							},
							"use_item": false,
							"hurt_item": 1,
							"play_sounds": "shear",
							"spawn_items": {
								"table": "loot_tables/entities/mooshroom_shear.json"
							},
							"particle_on_start": {
								"particle_type": "largeexplode",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.mooshear"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "shears"
										},
										{
											"test": "has_component",
											"operator": "!=",
											"value": "minecraft:transformation"
										},
										{
											"test": "is_variant",
											"subject": "self",
											"operator": "==",
											"value": 1
										}
									]
								},
								"event": "become_cow",
								"target": "self"
							},
							"use_item": false,
							"hurt_item": 1,
							"play_sounds": "shear",
							"spawn_items": {
								"table": "loot_tables/entities/brown_mooshroom_shear.json"
							},
							"particle_on_start": {
								"particle_type": "largeexplode",
								"particle_y_offset": 0.25,
								"particle_offset_towards_interactor": true
							},
							"interact_text": "action.interact.mooshear"
						},
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "bucket:0"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										}
									]
								}
							},
							"use_item": true,
							"transform_to_item": "bucket:1",
							"play_sounds": "milk",
							"interact_text": "action.interact.milk"
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/mooshroom.json",
			"range": [67, 326]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:interact`"
		},
		{
			"type": "list",
			"data": [
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[tnt_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt_minecart.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)"
			]
		}
	],
	"minecraftComponent_inventory": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "docsbryce",
				"ms.author": "v-bbortree",
				"title": "Entity Documentation - minecraft:inventory",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:inventory"
		},
		{
			"type": "other",
			"data": "`minecraft:inventory` defines how an entity's inventory is managed."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "additional_slots_per_strength",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Number of slots that this entity can gain per extra strength"
				},
				{
					"Name": "can_be_siphoned_from",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the contents of this inventory can be removed by a hopper"
				},
				{
					"Name": "container_type",
					"Default Value": "none",
					"Type": "String",
					"Description": "Type of container this entity has. Can be horse, minecart_chest, chest_boat, minecart_hopper, inventory, container or hopper"
				},
				{
					"Name": "inventory_size",
					"Default Value": "5",
					"Type": "Integer",
					"Description": "Number of slots the container has"
				},
				{
					"Name": "private",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the entity will not drop its inventory on death"
				},
				{
					"Name": "restrict_to_owner",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the entity's inventory can only be accessed by its owner or itself"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:inventory": {
					"additional_slots_per_strength": 0,
					"can_be_siphoned_from": false,
					"inventory_size": 5,
					"private": false,
					"restrict_to_owner": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " chest_minecart" },
		{
			"type": "code",
			"data": {
				"minecraft:inventory": {
					"container_type": "minecart_chest",
					"inventory_size": 27,
					"can_be_siphoned_from": true
				}
			},
			"language": "json"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:inventory`"
		},
		{
			"type": "list",
			"data": [
				"[chest_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/chest_minecart.md)",
				"[command_block_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/command_block_minecart.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)"
			]
		}
	],
	"minecraftComponent_item_hopper": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:item_hopper",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:item_hopper"
		},
		{
			"type": "other",
			"data": "`minecraft:item_hopper` allows an entity to function like a `hopper` block."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:item_hopper": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " hopper_minecart" },
		{
			"type": "code",
			"data": { "minecraft:item_hopper": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/hopper_minecart.json",
			"range": [13, 15]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:item_hopper`"
		},
		{
			"type": "list",
			"data": [
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)"
			]
		}
	],
	"minecraftComponent_jump.dynamic": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:jump.dynamic",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:jump.dynamic"
		},
		{
			"type": "other",
			"data": "`minecraft:jump.dynamic` defines a dynamic type jump control that will change jump properties based on the speed modifier of the mob."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:jump.dynamic": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " rabbit" },
		{
			"type": "code",
			"data": { "minecraft:jump.dynamic": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/rabbit.json",
			"range": [129, 130]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:jump.dynamic`"
		},
		{
			"type": "list",
			"data": [
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)"
			]
		}
	],
	"minecraftComponent_jump.static": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:jump.static",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:jump.static"
		},
		{
			"type": "other",
			"data": "`minecraft:jump.static` gives the entity the ability to jump."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "jump_power",
					"Default Value": "0.42",
					"Type": "Decimal",
					"Description": "The initial vertical velocity for the jump"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:jump.static": { "jump_power": 0.42 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " horse" },
		{
			"type": "code",
			"data": { "minecraft:jump.static": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/horse.json",
			"range": [351, 352]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:jump.static`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_leashable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:leashable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:leashable"
		},
		{
			"type": "other",
			"data": "`minecraft:leashable` allows this entity to be leashed and defines the conditions and events for this entity when is leashed."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "can_be_stolen",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, players can leash this entity even if it is already leashed to another mob."
				},
				{
					"Name": "hard_distance",
					"Default Value": "6",
					"Type": "Decimal",
					"Description": "Distance in blocks at which the leash stiffens, restricting movement."
				},
				{
					"Name": "max_distance",
					"Default Value": "10",
					"Type": "Decimal",
					"Description": "Distance in blocks at which the leash breaks."
				},
				{
					"Name": "on_leash",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when this entity is leashed."
				},
				{
					"Name": "on_unleash",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when this entity is unleashed."
				},
				{
					"Name": "soft_distance",
					"Default Value": "4",
					"Type": "Decimal",
					"Description": "Distance in blocks at which the 'spring' effect starts acting to keep this entity close to the entity that leashed it."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:leashable": {
					"soft_distance": 4,
					"hard_distance": 6,
					"max_distance": 10,
					"on_leash": {
						"event": "minecraft:on_leash",
						"target": "self"
					},
					"on_unleash": {
						"event": "minecraft:on_unleash",
						"target": "self"
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " wolf" },
		{
			"type": "code",
			"data": {
				"minecraft:leashable": {
					"soft_distance": 4,
					"hard_distance": 6,
					"max_distance": 10,
					"on_leash": {
						"event": "minecraft:on_leash",
						"target": "self"
					},
					"on_unleash": {
						"event": "minecraft:on_unleash",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/wolf.json",
			"range": [237, 249]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:leashable`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)"
			]
		}
	],
	"minecraftComponent_lookat": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:lookat",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:lookat"
		},
		{
			"type": "other",
			"data": "`minecraft:lookat` defines the behavior when another entity looks at this entity."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "allow_invulnerable",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, invulnerable entities (e.g. Players in creative mode) are considered valid targets."
				},
				{
					"Name": "filters",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "Defines the entities that can trigger this component."
				},
				{
					"Name": "look_cooldown",
					"Default Value": "[0, 0]",
					"Type": "Range [a, b]",
					"Description": "The range for the random amount of time during which the entity is 'cooling down' and won't get angered or look for a target."
				},
				{
					"Name": "look_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The event identifier to run when the entities specified in filters look at this entity."
				},
				{
					"Name": "search_radius",
					"Default Value": "10",
					"Type": "Decimal",
					"Description": "Maximum distance this entity will look for another entity looking at it."
				},
				{
					"Name": "set_target",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, this entity will set the attack target as the entity that looked at it."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:lookat": {
					"allow_invulnerable": false,
					"filters": { "test": "has_target" },
					"look_cooldown": [0, 0],
					"look_event": "minecraft:get_angry",
					"search_radius": 10,
					"set_target": true
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " enderman" },
		{
			"type": "code",
			"data": {
				"minecraft:lookat": {
					"search_radius": 64,
					"set_target": true,
					"look_cooldown": 5,
					"filters": {
						"all_of": [
							{
								"subject": "other",
								"test": "is_family",
								"value": "player"
							},
							{
								"test": "has_equipment",
								"domain": "head",
								"subject": "other",
								"operator": "not",
								"value": "carved_pumpkin"
							}
						]
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/enderman.json",
			"range": [93, 113]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:lookat`"
		},
		{
			"type": "list",
			"data": [
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)"
			]
		}
	],
	"minecraftComponent_managed_wandering_trader": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:managed_wandering_trader",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:managed_wandering_trader"
		},
		{
			"type": "other",
			"data": "`minecraft:managed_wandering_trader` manages the entity's ability to trade."
		},
		{ "type": "alert", "data": "NOTE" },
		{
			"type": "quote",
			"data": "This behavior can only be used by the `wandering_trader` entity type."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:managed_wandering_trader": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " wandering_trader" },
		{
			"type": "code",
			"data": { "minecraft:managed_wandering_trader": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/wandering_trader.json",
			"range": [13, 14]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:managed_wandering_trader`"
		},
		{
			"type": "list",
			"data": [
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)"
			]
		}
	],
	"minecraftComponent_mob_effect": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:mob_effect",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:mob_effect"
		},
		{
			"type": "other",
			"data": "`minecraft:mob_effect` applies a mob effect to entities that get within range."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "[entity_filter](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "The set of entities that are valid to apply the mob effect to."
				},
				{
					"Name": "effect_range",
					"Default Value": "0.2",
					"Type": "Decimal",
					"Description": "How close a hostile entity must be to have the mob effect applied."
				},
				{
					"Name": "effect_time",
					"Default Value": "10",
					"Type": "Integer",
					"Description": "How long the applied mob effect lasts in seconds."
				},
				{
					"Name": "mob_effect",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The mob effect that is applied to entities that enter this entities effect range."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:mob_effect": {
					"entity_filter": {
						"test": "has_damage",
						"subject": "self",
						"operator": "not",
						"value": "poison"
					},
					"effect_range": 0.2,
					"effect_time": 10,
					"mob_effect": "poison"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " pufferfish" },
		{
			"type": "code",
			"data": {
				"minecraft:mob_effect": {
					"effect_range": 0.2,
					"mob_effect": "poison",
					"effect_time": 10,
					"entity_filter": {
						"any_of": [
							{
								"test": "is_family",
								"subject": "other",
								"value": "player"
							},
							{
								"test": "is_family",
								"subject": "other",
								"value": "monster"
							}
						]
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/pufferfish.json",
			"range": [91, 101]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:mob_effect`"
		},
		{
			"type": "list",
			"data": [
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)"
			]
		}
	],
	"minecraftComponent_movement.amphibious": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.amphibious",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.amphibious"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.amphibious` allows the mob to swim in water and walk on land."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:movement.amphibious": { "max_turn": 30 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " turtle" },
		{
			"type": "code",
			"data": { "minecraft:movement.amphibious": { "max_turn": 5 } },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/turtle.json",
			"range": [171, 173]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.amphibious`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)"
			]
		}
	],
	"minecraftComponent_movement.basic": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.basic",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.basic"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.basic` defines the movement of an entity."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:movement.basic": { "max_turn": 30 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " horse" },
		{
			"type": "code",
			"data": { "minecraft:movement.basic": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/horse.json",
			"range": [349, 350]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.basic`"
		},
		{
			"type": "list",
			"data": [
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_movement.fly": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.fly",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.fly"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.fly` causes the mob to fly."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:movement.fly": { "max_turn": 30 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " parrot" },
		{
			"type": "code",
			"data": { "minecraft:movement.fly": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/parrot.json",
			"range": [142, 143]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.fly`"
		},
		{
			"type": "list",
			"data": [
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)"
			]
		}
	],
	"minecraftComponent_movement.generic": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.generic",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.generic"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.generic` allows a mob to fly, swim, climb, etc."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:movement.generic": { "max_turn": 30 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " drowned" },
		{
			"type": "code",
			"data": { "minecraft:movement.generic": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/drowned.json",
			"range": [136, 137]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.generic`"
		},
		{
			"type": "list",
			"data": [
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)"
			]
		}
	],
	"minecraftComponent_movement.hover": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.hover",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.hover"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.hover` causes the mob to hover."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:movement.hover": { "max_turn": 30 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " bee" },
		{
			"type": "code",
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/bee.json",
			"range": [478]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.hover`"
		},
		{
			"type": "list",
			"data": [
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)"
			]
		}
	],
	"minecraftComponent_movement.jump": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.jump",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.jump"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.jump` causes the mob to jump as it moves with a specified delay between jumps."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "jump_delay",
					"Default Value": "[0.0, 0.0]",
					"Type": "Range [a, b]",
					"Description": "Delay after landing when using the slime move control."
				},
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:movement.jump": {
					"jump_delay": [0, 0],
					"max_turn": 30
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " slime" },
		{
			"type": "code",
			"data": { "minecraft:movement.jump": { "jump_delay": [0.5, 1.5] } },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/slime.json",
			"range": [66, 68]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.jump`"
		},
		{
			"type": "list",
			"data": [
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)"
			]
		}
	],
	"minecraftComponent_movement.skip": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.skip",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.skip"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.skip` causes the mob to hop as it moves."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:movement.skip": { "max_turn": 30 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " rabbit" },
		{
			"type": "code",
			"data": { "minecraft:movement.skip": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/rabbit.json",
			"range": [127, 128]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.skip`"
		},
		{
			"type": "list",
			"data": [
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)"
			]
		}
	],
	"minecraftComponent_movement.sway": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:movement.sway",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:movement.sway"
		},
		{
			"type": "other",
			"data": "`minecraft:movement.sway` causes the mob to sway side to side giving the impression it is swimming."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_turn",
					"Default Value": "30.0",
					"Type": "Decimal",
					"Description": "The maximum number in degrees the mob can turn per tick."
				},
				{
					"Name": "sway_amplitude",
					"Default Value": "0.05",
					"Type": "Decimal",
					"Description": "Strength of the sway movement."
				},
				{
					"Name": "sway_frequency",
					"Default Value": "0.5",
					"Type": "Decimal",
					"Description": "Multiplier for the frequency of the sway movement."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:movement.sway": {
					"max_turn": 30,
					"sway_amplitude": 0.05,
					"sway_frequency": 0.5
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " fish" },
		{
			"type": "code",
			"data": { "minecraft:movement.sway": { "sway_amplitude": 0 } },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/fish.json",
			"range": [69, 71]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:movement.sway`"
		},
		{
			"type": "list",
			"data": [
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)"
			]
		}
	],
	"minecraftComponent_nameable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:nameable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:nameable"
		},
		{
			"type": "other",
			"data": "`minecraft:nameable` allows this entity to be named (e.g. using a name tag)."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "allow_name_tag_renaming",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, this entity can be renamed with name tags"
				},
				{
					"Name": "always_show",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the name will always be shown"
				},
				{
					"Name": "default_trigger",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Trigger to run when the entity gets named"
				},
				{
					"Name": "name_actions",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Describes the special names for this entity and the events to call when the entity acquires those names"
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " name_actions" },
		{
			"type": "other",
			"data": "`name_actions` is a JSON object defined by two parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "name_filter",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "List of special names that will cause the events defined in 'on_named' to fire"
				},
				{
					"Name": "on_named",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to be called when this entity acquires the name specified in 'name_filter'"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:nameable": {
					"allow_name_tag_renaming": true,
					"always_show": false,
					"default_trigger": {
						"event": "minecraft:celebrate",
						"target": "self"
					},
					"name_actions": [
						{
							"name_filter": "bacon",
							"on_named": {
								"event": "minecraft:spawn_child",
								"target": "self"
							}
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " cat" },
		{
			"type": "code",
			"data": { "minecraft:nameable": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/cat.json",
			"range": [288, 289]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:nameable`"
		},
		{
			"type": "list",
			"data": [
				"[armor_stand](../../../../Source/VanillaBehaviorPack_Snippets/entities/armor_stand.md)",
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[npc](../../../../Source/VanillaBehaviorPack_Snippets/entities/npc.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_navigation.climb": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:navigation.climb",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:navigation.climb"
		},
		{
			"type": "other",
			"data": "`minecraft:navigation.climb` allows this entity to generate paths that include vertical walls like the vanilla Spiders do."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "avoid_damage_blocks",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid blocks that cause damage when finding a path"
				},
				{
					"Name": "avoid_portals",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path"
				},
				{
					"Name": "avoid_sun",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths"
				},
				{
					"Name": "avoid_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid water when creating a path"
				},
				{
					"Name": "blocks_to_avoid",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Tells the pathfinder which blocks to avoid when creating a path"
				},
				{
					"Name": "can_breach",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)"
				},
				{
					"Name": "can_break_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door and break it"
				},
				{
					"Name": "can_jump",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump up blocks"
				},
				{
					"Name": "can_open_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door"
				},
				{
					"Name": "can_open_iron_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door"
				},
				{
					"Name": "can_pass_doors",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether a path can be created through a door"
				},
				{
					"Name": "can_path_from_air",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can start pathing when in the air"
				},
				{
					"Name": "can_path_over_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the lava"
				},
				{
					"Name": "can_path_over_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the water"
				},
				{
					"Name": "can_sink",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water"
				},
				{
					"Name": "can_swim",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path"
				},
				{
					"Name": "can_walk",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground outside water"
				},
				{
					"Name": "can_walk_in_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel in lava like walking on ground"
				},
				{
					"Name": "is_amphibious",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground underwater"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.climb": {
					"avoid_damage_blocks": false,
					"avoid_portals": false,
					"avoid_sun": false,
					"avoid_water": false,
					"blocks_to_avoid": [],
					"can_breach": false,
					"can_break_doors": false,
					"can_jump": true,
					"can_open_doors": false,
					"can_open_iron_doors": false,
					"can_pass_doors": true,
					"can_path_from_air": false,
					"can_path_over_lava": false,
					"can_path_over_water": false,
					"can_sink": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": false,
					"is_amphibious": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " spider" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.climb": { "can_path_over_water": true }
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/spider.json",
			"range": [179, 181]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:navigation.climb`"
		},
		{
			"type": "list",
			"data": [
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)"
			]
		}
	],
	"minecraftComponent_navigation.float": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:navigation.float",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:navigation.float"
		},
		{
			"type": "other",
			"data": "`minecraft:navigation.float` allows this entity to generate paths by flying around the air like the regular Ghast."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "avoid_damage_blocks",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid blocks that cause damage when finding a path"
				},
				{
					"Name": "avoid_portals",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path"
				},
				{
					"Name": "avoid_sun",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths"
				},
				{
					"Name": "avoid_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid water when creating a path"
				},
				{
					"Name": "blocks_to_avoid",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Tells the pathfinder which blocks to avoid when creating a path"
				},
				{
					"Name": "can_breach",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)"
				},
				{
					"Name": "can_break_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door and break it"
				},
				{
					"Name": "can_jump",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump up blocks"
				},
				{
					"Name": "can_open_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door"
				},
				{
					"Name": "can_open_iron_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door"
				},
				{
					"Name": "can_pass_doors",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether a path can be created through a door"
				},
				{
					"Name": "can_path_from_air",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can start pathing when in the air"
				},
				{
					"Name": "can_path_over_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the lava"
				},
				{
					"Name": "can_path_over_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the water"
				},
				{
					"Name": "can_sink",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water"
				},
				{
					"Name": "can_swim",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path"
				},
				{
					"Name": "can_walk",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground outside water"
				},
				{
					"Name": "can_walk_in_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel in lava like walking on ground"
				},
				{
					"Name": "is_amphibious",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground underwater"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.float": {
					"avoid_damage_blocks": false,
					"avoid_portals": false,
					"avoid_sun": false,
					"avoid_water": false,
					"blocks_to_avoid": [],
					"can_breach": false,
					"can_break_doors": false,
					"can_jump": true,
					"can_open_doors": false,
					"can_open_iron_doors": false,
					"can_pass_doors": true,
					"can_path_from_air": false,
					"can_path_over_lava": false,
					"can_path_over_water": false,
					"can_sink": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": false,
					"is_amphibious": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " ghast" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.float": { "can_path_over_water": true }
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/ghast.json",
			"range": [36, 38]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:navigation.float`"
		},
		{
			"type": "list",
			"data": [
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)"
			]
		}
	],
	"minecraftComponent_navigation.fly": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:navigation.fly",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:navigation.fly"
		},
		{
			"type": "other",
			"data": "`minecraft:navigation.fly` allows this entity to generate paths in the air like the vanilla Parrots do."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "avoid_damage_blocks",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid blocks that cause damage when finding a path"
				},
				{
					"Name": "avoid_portals",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path"
				},
				{
					"Name": "avoid_sun",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths"
				},
				{
					"Name": "avoid_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid water when creating a path"
				},
				{
					"Name": "blocks_to_avoid",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Tells the pathfinder which blocks to avoid when creating a path"
				},
				{
					"Name": "can_breach",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)"
				},
				{
					"Name": "can_break_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door and break it"
				},
				{
					"Name": "can_jump",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump up blocks"
				},
				{
					"Name": "can_open_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door"
				},
				{
					"Name": "can_open_iron_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door"
				},
				{
					"Name": "can_pass_doors",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether a path can be created through a door"
				},
				{
					"Name": "can_path_from_air",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can start pathing when in the air"
				},
				{
					"Name": "can_path_over_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the lava"
				},
				{
					"Name": "can_path_over_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the water"
				},
				{
					"Name": "can_sink",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water"
				},
				{
					"Name": "can_swim",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path"
				},
				{
					"Name": "can_walk",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground outside water"
				},
				{
					"Name": "can_walk_in_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel in lava like walking on ground"
				},
				{
					"Name": "is_amphibious",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground underwater"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.fly": {
					"avoid_damage_blocks": false,
					"avoid_portals": false,
					"avoid_sun": false,
					"avoid_water": false,
					"blocks_to_avoid": [],
					"can_breach": false,
					"can_break_doors": false,
					"can_jump": true,
					"can_open_doors": false,
					"can_open_iron_doors": false,
					"can_pass_doors": true,
					"can_path_from_air": false,
					"can_path_over_lava": false,
					"can_path_over_water": false,
					"can_sink": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": false,
					"is_amphibious": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " parrot" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.fly": {
					"can_path_over_water": true,
					"can_path_from_air": true
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/parrot.json",
			"range": [138, 141]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:navigation.fly`"
		},
		{
			"type": "list",
			"data": [
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)"
			]
		}
	],
	"minecraftComponent_navigation.generic": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:navigation.generic",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:navigation.generic"
		},
		{
			"type": "other",
			"data": "`minecraft:navigation.generic` allows this entity to generate paths by walking, swimming, flying and/or climbing around and jumping up and down a block."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "avoid_damage_blocks",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid blocks that cause damage when finding a path"
				},
				{
					"Name": "avoid_portals",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path"
				},
				{
					"Name": "avoid_sun",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths"
				},
				{
					"Name": "avoid_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid water when creating a path"
				},
				{
					"Name": "blocks_to_avoid",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Tells the pathfinder which blocks to avoid when creating a path"
				},
				{
					"Name": "can_breach",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)"
				},
				{
					"Name": "can_break_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door and break it"
				},
				{
					"Name": "can_jump",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump up blocks"
				},
				{
					"Name": "can_open_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door"
				},
				{
					"Name": "can_open_iron_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door"
				},
				{
					"Name": "can_pass_doors",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether a path can be created through a door"
				},
				{
					"Name": "can_path_from_air",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can start pathing when in the air"
				},
				{
					"Name": "can_path_over_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the lava"
				},
				{
					"Name": "can_path_over_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the water"
				},
				{
					"Name": "can_sink",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water"
				},
				{
					"Name": "can_swim",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path"
				},
				{
					"Name": "can_walk",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground outside water"
				},
				{
					"Name": "can_walk_in_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel in lava like walking on ground"
				},
				{
					"Name": "is_amphibious",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground underwater"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.generic": {
					"avoid_damage_blocks": false,
					"avoid_portals": false,
					"avoid_sun": false,
					"avoid_water": false,
					"blocks_to_avoid": [],
					"can_breach": false,
					"can_break_doors": false,
					"can_jump": true,
					"can_open_doors": false,
					"can_open_iron_doors": false,
					"can_pass_doors": true,
					"can_path_from_air": false,
					"can_path_over_lava": false,
					"can_path_over_water": false,
					"can_sink": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": false,
					"is_amphibious": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " fish" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.generic": {
					"is_amphibious": false,
					"can_path_over_water": false,
					"can_swim": true,
					"can_walk": false,
					"can_breach": false,
					"can_sink": false
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/fish.json",
			"range": [54, 61]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:navigation.generic`"
		},
		{
			"type": "list",
			"data": [
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)"
			]
		}
	],
	"minecraftComponent_navigation.hover": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:navigation.hover",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:navigation.hover"
		},
		{
			"type": "other",
			"data": "`minecraft:navigation.hover` allows this entity to generate paths in the air like the vanilla Bees do. Keeps them from falling out of the skies and doing predictive movement."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "avoid_damage_blocks",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid blocks that cause damage when finding a path"
				},
				{
					"Name": "avoid_portals",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path"
				},
				{
					"Name": "avoid_sun",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths"
				},
				{
					"Name": "avoid_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid water when creating a path"
				},
				{
					"Name": "blocks_to_avoid",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Tells the pathfinder which blocks to avoid when creating a path"
				},
				{
					"Name": "can_breach",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)"
				},
				{
					"Name": "can_break_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door and break it"
				},
				{
					"Name": "can_jump",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump up blocks"
				},
				{
					"Name": "can_open_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door"
				},
				{
					"Name": "can_open_iron_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door"
				},
				{
					"Name": "can_pass_doors",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether a path can be created through a door"
				},
				{
					"Name": "can_path_from_air",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can start pathing when in the air"
				},
				{
					"Name": "can_path_over_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the lava"
				},
				{
					"Name": "can_path_over_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the water"
				},
				{
					"Name": "can_sink",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water"
				},
				{
					"Name": "can_swim",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path"
				},
				{
					"Name": "can_walk",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground outside water"
				},
				{
					"Name": "can_walk_in_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel in lava like walking on ground"
				},
				{
					"Name": "is_amphibious",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground underwater"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.hover": {
					"avoid_damage_blocks": false,
					"avoid_portals": false,
					"avoid_sun": false,
					"avoid_water": false,
					"blocks_to_avoid": [],
					"can_breach": false,
					"can_break_doors": false,
					"can_jump": true,
					"can_open_doors": false,
					"can_open_iron_doors": false,
					"can_pass_doors": true,
					"can_path_from_air": false,
					"can_path_over_lava": false,
					"can_path_over_water": false,
					"can_sink": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": false,
					"is_amphibious": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " bee" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.hover": {
					"can_path_over_water": true,
					"can_sink": false,
					"can_pass_doors": false,
					"can_path_from_air": true,
					"avoid_water": true,
					"avoid_damage_blocks": true,
					"avoid_sun": false
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/bee.json",
			"range": [469, 477]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:navigation.hover`"
		},
		{
			"type": "list",
			"data": [
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)"
			]
		}
	],
	"minecraftComponent_navigation.swim": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:navigation.swim",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:navigation.swim"
		},
		{
			"type": "other",
			"data": "`minecraft:navigation.swim` allows this entity to generate paths that include water."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "avoid_damage_blocks",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid blocks that cause damage when finding a path"
				},
				{
					"Name": "avoid_portals",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path"
				},
				{
					"Name": "avoid_sun",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths"
				},
				{
					"Name": "avoid_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid water when creating a path"
				},
				{
					"Name": "blocks_to_avoid",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Tells the pathfinder which blocks to avoid when creating a path"
				},
				{
					"Name": "can_breach",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)"
				},
				{
					"Name": "can_break_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door and break it"
				},
				{
					"Name": "can_jump",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump up blocks"
				},
				{
					"Name": "can_open_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door"
				},
				{
					"Name": "can_open_iron_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door"
				},
				{
					"Name": "can_pass_doors",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether a path can be created through a door"
				},
				{
					"Name": "can_path_from_air",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can start pathing when in the air"
				},
				{
					"Name": "can_path_over_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the lava"
				},
				{
					"Name": "can_path_over_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the water"
				},
				{
					"Name": "can_sink",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water"
				},
				{
					"Name": "can_swim",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path"
				},
				{
					"Name": "can_walk",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground outside water"
				},
				{
					"Name": "can_walk_in_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel in lava like walking on ground"
				},
				{
					"Name": "is_amphibious",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground underwater"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.swim": {
					"avoid_damage_blocks": false,
					"avoid_portals": false,
					"avoid_sun": false,
					"avoid_water": false,
					"blocks_to_avoid": [],
					"can_breach": false,
					"can_break_doors": false,
					"can_jump": true,
					"can_open_doors": false,
					"can_open_iron_doors": false,
					"can_pass_doors": true,
					"can_path_from_air": false,
					"can_path_over_lava": false,
					"can_path_over_water": false,
					"can_sink": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": false,
					"is_amphibious": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{
			"type": "other",
			"data": "No entities currently use `minecraft:navigation.swim`."
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:navigation.swim`"
		},
		{
			"type": "other",
			"data": "No entities currently use `minecraft:navigation.swim`."
		}
	],
	"minecraftComponent_navigation.walk": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:navigation.walk",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:navigation.walk"
		},
		{
			"type": "other",
			"data": "`minecraft:navigation.walk` allows this entity to generate paths by walking around and jumping up and down a block like regular mobs."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "avoid_damage_blocks",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid blocks that cause damage when finding a path"
				},
				{
					"Name": "avoid_portals",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path"
				},
				{
					"Name": "avoid_sun",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths"
				},
				{
					"Name": "avoid_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder to avoid water when creating a path"
				},
				{
					"Name": "blocks_to_avoid",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Tells the pathfinder which blocks to avoid when creating a path"
				},
				{
					"Name": "can_breach",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)"
				},
				{
					"Name": "can_break_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door and break it"
				},
				{
					"Name": "can_jump",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can jump up blocks"
				},
				{
					"Name": "can_open_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door"
				},
				{
					"Name": "can_open_iron_doors",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door"
				},
				{
					"Name": "can_pass_doors",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether a path can be created through a door"
				},
				{
					"Name": "can_path_from_air",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder that it can start pathing when in the air"
				},
				{
					"Name": "can_path_over_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the lava"
				},
				{
					"Name": "can_path_over_water",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel on the surface of the water"
				},
				{
					"Name": "can_sink",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water"
				},
				{
					"Name": "can_swim",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path"
				},
				{
					"Name": "can_walk",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground outside water"
				},
				{
					"Name": "can_walk_in_lava",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can travel in lava like walking on ground"
				},
				{
					"Name": "is_amphibious",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Tells the pathfinder whether or not it can walk on the ground underwater"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.walk": {
					"avoid_damage_blocks": false,
					"avoid_portals": false,
					"avoid_sun": false,
					"avoid_water": false,
					"blocks_to_avoid": [],
					"can_breach": false,
					"can_break_doors": false,
					"can_jump": true,
					"can_open_doors": false,
					"can_open_iron_doors": false,
					"can_pass_doors": true,
					"can_path_from_air": false,
					"can_path_over_lava": false,
					"can_path_over_water": false,
					"can_sink": true,
					"can_swim": false,
					"can_walk": true,
					"can_walk_in_lava": false,
					"is_amphibious": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " villager" },
		{
			"type": "code",
			"data": {
				"minecraft:navigation.walk": {
					"is_amphibious": true,
					"can_path_over_water": true,
					"can_pass_doors": true,
					"can_open_doors": true,
					"can_walk": true,
					"avoid_water": true
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/villager.json",
			"range": [361, 368]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:navigation.walk`"
		},
		{
			"type": "list",
			"data": [
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker_bullet](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker_bullet.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_out_of_control": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:out_of_control",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:out_of_control"
		},
		{
			"type": "other",
			"data": "`minecraft:out_of_control` defines the entity's 'out of control' state."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:out_of_control": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " boat" },
		{
			"type": "other",
			"data": "In the `boat` entity, `minecraft:out_of_control` is used in conjunction with `minecraft:buoyant`to create a custom event."
		},
		{
			"type": "code",
			"data": {
				"minecraft:above_bubble_column_up": {
					"minecraft:buoyant": {
						"base_buoyancy": 1,
						"apply_gravity": true,
						"simulate_waves": false,
						"liquid_blocks": [
							"minecraft:water",
							"minecraft:flowing_water"
						],
						"drag_down_on_buoyancy_removed": 0.7
					},
					"minecraft:out_of_control": {}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/boat.json",
			"range": [80, 93]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:out_of_control`"
		},
		{
			"type": "list",
			"data": [
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)"
			]
		}
	],
	"minecraftComponent_peek": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:peek",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:peek"
		},
		{
			"type": "other",
			"data": "`minecraft:peek` defines the entity's 'peek' behavior, defining the events that should be called during it."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "on_close",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when the entity is done peeking."
				},
				{
					"Name": "on_open",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when the entity starts peeking."
				},
				{
					"Name": "on_target_open",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when the entity's target entity starts peeking."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:peek": {
					"on_close": { "event": "minecraft:stop_peeping" },
					"on_open": { "event": "minecraft:start_peeping" },
					"on_target_open": { "event": "minecraft:ive_been_spotted" }
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " shulker" },
		{
			"type": "code",
			"data": {
				"minecraft:peek": {
					"on_open": { "event": "minecraft:on_open" },
					"on_close": { "event": "minecraft:on_close" },
					"on_target_open": { "event": "minecraft:on_open" }
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/shulker.json",
			"range": [140, 150]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:peek`"
		},
		{
			"type": "list",
			"data": [
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)"
			]
		}
	],
	"minecraftComponent_persistent": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:persistent",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:persistent"
		},
		{
			"type": "other",
			"data": "`minecraft:persistent` defines whether an entity should be persistent in the game world."
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:persistent": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " armor_stand" },
		{
			"type": "code",
			"data": { "minecraft:persistent": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/armor_stand.json",
			"range": [39, 40]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:persistent`"
		},
		{
			"type": "list",
			"data": [
				"[armor_stand](../../../../Source/VanillaBehaviorPack_Snippets/entities/armor_stand.md)",
				"[ender_dragon](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_dragon.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[npc](../../../../Source/VanillaBehaviorPack_Snippets/entities/npc.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)"
			]
		}
	],
	"minecraftComponent_physics": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:physics",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:physics"
		},
		{
			"type": "other",
			"data": "`minecraft:physics` defines physics properties of an entity, including if it is affected by gravity or if it collides with objects."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "has_collision",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether or not the object collides with things."
				},
				{
					"Name": "has_gravity",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether or not the entity is affected by gravity."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:physics": {
					"has_collision": true,
					"has_gravity": true
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " player" },
		{
			"type": "code",
			"data": { "minecraft:physics": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/player.json",
			"range": [106, 107]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:physics`"
		},
		{
			"type": "list",
			"data": [
				"[area_effect_cloud](../../../../Source/VanillaBehaviorPack_Snippets/entities/area_effect_cloud.md)",
				"[armor_stand](../../../../Source/VanillaBehaviorPack_Snippets/entities/armor_stand.md)",
				"[arrow](../../../../Source/VanillaBehaviorPack_Snippets/entities/arrow.md)",
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bat](../../../../Source/VanillaBehaviorPack_Snippets/entities/bat.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chest_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/chest_minecart.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[command_block_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/command_block_minecart.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[dragon_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/dragon_fireball.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[egg](../../../../Source/VanillaBehaviorPack_Snippets/entities/egg.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[ender_crystal](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_crystal.md)",
				"[ender_dragon](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_dragon.md)",
				"[ender_pearl](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_pearl.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[eye_of_ender_signal](../../../../Source/VanillaBehaviorPack_Snippets/entities/eye_of_ender_signal.md)",
				"[fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireball.md)",
				"[fireworks_rocket](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireworks_rocket.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[fishing_hook](../../../../Source/VanillaBehaviorPack_Snippets/entities/fishing_hook.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[lingering_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/lingering_potion.md)",
				"[llama_spit](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama_spit.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/minecart.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[npc](../../../../Source/VanillaBehaviorPack_Snippets/entities/npc.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[shulker_bullet](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker_bullet.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[small_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/small_fireball.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[snowball](../../../../Source/VanillaBehaviorPack_Snippets/entities/snowball.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[splash_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/splash_potion.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[thrown_trident](../../../../Source/VanillaBehaviorPack_Snippets/entities/thrown_trident.md)",
				"[tnt_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt_minecart.md)",
				"[tnt](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt.md)",
				"[tripod_camera](../../../../Source/VanillaBehaviorPack_Snippets/entities/tripod_camera.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[vex](../../../../Source/VanillaBehaviorPack_Snippets/entities/vex.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither_skull_dangerous](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull_dangerous.md)",
				"[wither_skull](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[xp_bottle](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_bottle.md)",
				"[xp_orb](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_orb.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_preferred_path": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:preferred_path",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:preferred_path"
		},
		{
			"type": "other",
			"data": "`minecraft:preferred_path` specifies costing information for mobs that prefer to walk on preferred paths."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "default_block_cost",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Cost for non-preferred blocks"
				},
				{
					"Name": "jump_cost",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Added cost for jumping up a node"
				},
				{
					"Name": "max_fall_blocks",
					"Default Value": "3",
					"Type": "Integer",
					"Description": "Distance mob can fall without taking damage"
				},
				{
					"Name": "preferred_path_blocks",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "A list of blocks with their associated cost"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:preferred_path": {
					"default_block_cost": 2,
					"jump_cost": 0,
					"max_fall_blocks": 3,
					"preferred_path_blocks": []
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " village_v2" },
		{
			"type": "code",
			"data": {
				"minecraft:preferred_path": {
					"max_fall_blocks": 1,
					"jump_cost": 5,
					"default_block_cost": 1.5,
					"preferred_path_blocks": [
						{ "cost": 0, "blocks": ["grass_path"] },
						{
							"cost": 1,
							"blocks": [
								"cobblestone",
								"stone",
								"stonebrick",
								"sandstone",
								"mossy_cobblestone",
								"stone_slab",
								"stone_slab2",
								"stone_slab3",
								"stone_slab4",
								"double_stone_slab",
								"double_stone_slab2",
								"double_stone_slab3",
								"double_stone_slab4",
								"wooden_slab",
								"double_wooden_slab",
								"planks",
								"brick_block",
								"nether_brick",
								"red_nether_brick",
								"end_bricks",
								"red_sandstone",
								"stained_glass",
								"glass",
								"glowstone",
								"prismarine",
								"emerald_block",
								"diamond_block",
								"lapis_block",
								"gold_block",
								"redstone_block",
								"purple_glazed_terracotta",
								"white_glazed_terracotta",
								"orange_glazed_terracotta",
								"magenta_glazed_terracotta",
								"light_blue_glazed_terracotta",
								"yellow_glazed_terracotta",
								"lime_glazed_terracotta",
								"pink_glazed_terracotta",
								"gray_glazed_terracotta",
								"silver_glazed_terracotta",
								"cyan_glazed_terracotta",
								"blue_glazed_terracotta",
								"brown_glazed_terracotta",
								"green_glazed_terracotta",
								"red_glazed_terracotta",
								"black_glazed_terracotta"
							]
						},
						{
							"cost": 50,
							"blocks": [
								"bed",
								"lectern",
								"composter",
								"grindstone",
								"blast_furnace",
								"smoker",
								"fletching_table",
								"cartography_table",
								"brewing_stand",
								"smithing_table",
								"cauldron",
								"barrel",
								"loom",
								"stonecutter"
							]
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/villager_v2.json",
			"range": [1152, 1234]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:preferred_path`"
		},
		{
			"type": "list",
			"data": [
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)"
			]
		}
	],
	"minecraftComponent_projectile": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:projectile",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:projectile"
		},
		{
			"type": "other",
			"data": "`minecraft:projectile` allows the entity to be a thrown entity."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "angle_offset",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Determines the angle at which the projectile is thrown"
				},
				{
					"Name": "catch_fire",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the entity hit will be set on fire"
				},
				{
					"Name": "crit_particle_on_hurt",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the projectile will produce additional particles when a critical hit happens"
				},
				{
					"Name": "destroy_on_hurt",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, this entity will be destroyed when hit"
				},
				{
					"Name": "filter",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Entity Definitions defined here can't be hurt by the projectile"
				},
				{
					"Name": "fire_affected_by_griefing",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, whether the projectile causes fire is affected by the mob griefing game rule"
				},
				{
					"Name": "gravity",
					"Default Value": "0.05",
					"Type": "Decimal",
					"Description": "The gravity applied to this entity when thrown. The higher the value, the faster the entity falls"
				},
				{
					"Name": "hit_sound",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The sound that plays when the projectile hits something"
				},
				{
					"Name": "homing",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the projectile homes in to the nearest entity"
				},
				{
					"Name": "inertia",
					"Default Value": "0.99",
					"Type": "Decimal",
					"Description": "The fraction of the projectile's speed maintained every frame while traveling in air"
				},
				{
					"Name": "is_dangerous",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the projectile will be treated as dangerous to the players"
				},
				{
					"Name": "knockback",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, the projectile will knock back the entity it hits"
				},
				{
					"Name": "lightning",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the entity hit will be struck by lightning"
				},
				{
					"Name": "liquid_inertia",
					"Default Value": "0.6",
					"Type": "Decimal",
					"Description": "The fraction of the projectile's speed maintained every frame while traveling in water"
				},
				{
					"Name": "multiple_targets",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, the projectile can hit multiple entities per flight"
				},
				{
					"Name": "offset",
					"Default Value": "[0, 0, 0]",
					"Type": "Vector [a, b, c]",
					"Description": "The offset from the entity's anchor where the projectile will spawn"
				},
				{
					"Name": "on_fire_time",
					"Default Value": "5",
					"Type": "Decimal",
					"Description": "Time in seconds that the entity hit will be on fire for"
				},
				{
					"Name": "particle",
					"Default Value": "iconcrack",
					"Type": "String",
					"Description": "Particle to use upon collision"
				},
				{
					"Name": "potion_effect",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "Defines the effect the arrow will apply to the entity it hits"
				},
				{
					"Name": "power",
					"Default Value": "1.3",
					"Type": "Decimal",
					"Description": "Determines the velocity of the projectile"
				},
				{
					"Name": "reflect_on_hurt",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, this entity will be reflected back when hit"
				},
				{
					"Name": "semi_random_diff_damage",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, damage will be randomized based on damage and speed"
				},
				{
					"Name": "shoot_sound",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The sound that plays when the projectile is shot"
				},
				{
					"Name": "shoot_target",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, the projectile will be shot towards the target of the entity firing it"
				},
				{
					"Name": "should_bounce",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the projectile will bounce upon hit"
				},
				{
					"Name": "splash_potion",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, the projectile will be treated like a splash potion"
				},
				{
					"Name": "splash_range",
					"Default Value": "4",
					"Type": "Decimal",
					"Description": "Radius in blocks of the 'splash' effect"
				},
				{
					"Name": "uncertainty_base",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "The base accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel \\* uncertaintyMultiplier"
				},
				{
					"Name": "uncertainty_multiplier",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Determines how much difficulty affects accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel \\* uncertaintyMultiplier"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:projectile": {
					"angle_offset": 0,
					"catch_fire": false,
					"crit_particle_on_hurt": false,
					"destroy_on_hurt": false,
					"fire_affected_by_griefing": false,
					"gravity": 0.05,
					"homing": false,
					"inertia": 0.99,
					"is_dangerous": false,
					"knockback": true,
					"lightning": false,
					"liquid_inertia": 0.6,
					"multiple_targets": true,
					"offset": [0, 0.5, 0],
					"on_fire_time": 5,
					"particle": "ironcrack",
					"potion_effect": -1,
					"power": 1.3,
					"reflect_on_hurt": false,
					"semi_random_diff_damage": false,
					"shoot_target": true,
					"should_bounce": false,
					"splash_potion": false,
					"splash_range": 4,
					"uncertainty_base": 0,
					"uncertainty_multiplier": 0
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " arrow" },
		{
			"type": "code",
			"data": {
				"minecraft:projectile": {
					"on_hit": {
						"impact_damage": {
							"damage": [1, 5],
							"knockback": true,
							"semi_random_diff_damage": false,
							"destroy_on_hit": true
						},
						"stick_in_ground": { "shake_time": 0.35 },
						"arrow_effect": {}
					},
					"hit_sound": "bow.hit",
					"power": 1.6,
					"gravity": 0.05,
					"uncertainty_base": 16,
					"uncertainty_multiplier": 4,
					"anchor": 1,
					"should_bounce": true,
					"offset": [0, -0.1, 0]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/arrow.json",
			"range": [12, 34]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:projectile`"
		},
		{
			"type": "list",
			"data": [
				"[arrow](../../../../Source/VanillaBehaviorPack_Snippets/entities/arrow.md)",
				"[dragon_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/dragon_fireball.md)",
				"[egg](../../../../Source/VanillaBehaviorPack_Snippets/entities/egg.md)",
				"[ender_pearl](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_pearl.md)",
				"[fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireball.md)",
				"[fishing_hook](../../../../Source/VanillaBehaviorPack_Snippets/entities/fishing_hook.md)",
				"[lingering_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/lingering_potion.md)",
				"[llama_spit](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama_spit.md)",
				"[shulker_bullet](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker_bullet.md)",
				"[small_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/small_fireball.md)",
				"[snowball](../../../../Source/VanillaBehaviorPack_Snippets/entities/snowball.md)",
				"[splash_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/splash_potion.md)",
				"[thrown_trident](../../../../Source/VanillaBehaviorPack_Snippets/entities/thrown_trident.md)",
				"[wither_skull_dangerous](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull_dangerous.md)",
				"[wither_skull](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull.md)",
				"[xp_bottle](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_bottle.md)"
			]
		}
	],
	"minecraftComponent_pushable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:pushable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:pushable"
		},
		{
			"type": "other",
			"data": "`minecraft:pushable` defines what can push an entity between other entities and pistons."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "is_pushable",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether the entity can be pushed by other entities."
				},
				{
					"Name": "is_pushable_by_piston",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "Whether the entity can be pushed by pistons safely."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:pushable": {
					"is_pushable": true,
					"is_pushable_by_piston": true
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " minecart" },
		{
			"type": "code",
			"data": {
				"minecraft:pushable": {
					"is_pushable": true,
					"is_pushable_by_piston": true
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/minecart.json",
			"range": [37, 40]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:pushable`"
		},
		{
			"type": "list",
			"data": [
				"[armor_stand](../../../../Source/VanillaBehaviorPack_Snippets/entities/armor_stand.md)",
				"[arrow](../../../../Source/VanillaBehaviorPack_Snippets/entities/arrow.md)",
				"[axolotl](../../../../Source/VanillaBehaviorPack_Snippets/entities/axolotl.md)",
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chest_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/chest_minecart.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[command_block_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/command_block_minecart.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[dolphin](../../../../Source/VanillaBehaviorPack_Snippets/entities/dolphin.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[dragon_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/dragon_fireball.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[egg](../../../../Source/VanillaBehaviorPack_Snippets/entities/egg.md)",
				"[elder_guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/elder_guardian.md)",
				"[ender_crystal](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_crystal.md)",
				"[ender_pearl](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_pearl.md)",
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)",
				"[endermite](../../../../Source/VanillaBehaviorPack_Snippets/entities/endermite.md)",
				"[evocation_illager](../../../../Source/VanillaBehaviorPack_Snippets/entities/evocation_illager.md)",
				"[eye_of_ender_signal](../../../../Source/VanillaBehaviorPack_Snippets/entities/eye_of_ender_signal.md)",
				"[fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireball.md)",
				"[fireworks_rocket](../../../../Source/VanillaBehaviorPack_Snippets/entities/fireworks_rocket.md)",
				"[fish](../../../../Source/VanillaBehaviorPack_Snippets/entities/fish.md)",
				"[fishing_hook](../../../../Source/VanillaBehaviorPack_Snippets/entities/fishing_hook.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[glow_squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/glow_squid.md)",
				"[goat](../../../../Source/VanillaBehaviorPack_Snippets/entities/goat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[iron_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/iron_golem.md)",
				"[lingering_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/lingering_potion.md)",
				"[llama_spit](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama_spit.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[magma_cube](../../../../Source/VanillaBehaviorPack_Snippets/entities/magma_cube.md)",
				"[minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/minecart.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[phantom](../../../../Source/VanillaBehaviorPack_Snippets/entities/phantom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[rabbit](../../../../Source/VanillaBehaviorPack_Snippets/entities/rabbit.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[salmon](../../../../Source/VanillaBehaviorPack_Snippets/entities/salmon.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[silverfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/silverfish.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[slime](../../../../Source/VanillaBehaviorPack_Snippets/entities/slime.md)",
				"[small_fireball](../../../../Source/VanillaBehaviorPack_Snippets/entities/small_fireball.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[snowball](../../../../Source/VanillaBehaviorPack_Snippets/entities/snowball.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[splash_potion](../../../../Source/VanillaBehaviorPack_Snippets/entities/splash_potion.md)",
				"[squid](../../../../Source/VanillaBehaviorPack_Snippets/entities/squid.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[thrown_trident](../../../../Source/VanillaBehaviorPack_Snippets/entities/thrown_trident.md)",
				"[tnt_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt_minecart.md)",
				"[tnt](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt.md)",
				"[tropicalfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/tropicalfish.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[vindicator](../../../../Source/VanillaBehaviorPack_Snippets/entities/vindicator.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[witch](../../../../Source/VanillaBehaviorPack_Snippets/entities/witch.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[wither_skull_dangerous](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull_dangerous.md)",
				"[wither_skull](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skull.md)",
				"[wither](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[xp_bottle](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_bottle.md)",
				"[xp_orb](../../../../Source/VanillaBehaviorPack_Snippets/entities/xp_orb.md)",
				"[zoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/zoglin.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_raid_trigger": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:raid_trigger",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:raid_trigger"
		},
		{
			"type": "other",
			"data": "`minecraft:raid_trigger` attempts to trigger a raid at the entity's location."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "triggered_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to run we attempt to trigger a raid on the village."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:raid_trigger": {
					"triggered_event": "minecraft:prepare_for_war"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " player" },
		{
			"type": "code",
			"data": {
				"minecraft:raid_trigger": {
					"triggered_event": {
						"event": "minecraft:remove_raid_trigger",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/player.json",
			"range": [36, 41]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:raid_trigger`"
		},
		{
			"type": "list",
			"data": [
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)"
			]
		}
	],
	"minecraftComponent_rail_movement": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:rail_movement",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:rail_movement"
		},
		{
			"type": "other",
			"data": "`minecraft:rail_movement` defines the entity's movement on the rails. An entity with this component is only allowed to move on the rail."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "max_speed",
					"Default Value": "0.4",
					"Type": "Decimal",
					"Description": "Maximum speed that this entity will move at when on the rail."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:rail_movement": { "max_speed": 0.4 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " minecart" },
		{
			"type": "code",
			"data": { "minecraft:rail_movement": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/minecart.json",
			"range": [21, 22]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:rail_movement`"
		},
		{
			"type": "list",
			"data": [
				"[chest_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/chest_minecart.md)",
				"[command_block_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/command_block_minecart.md)",
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)",
				"[minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/minecart.md)",
				"[tnt_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt_minecart.md)"
			]
		}
	],
	"minecraftComponent_rail_sensor": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:rail_sensor",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:rail_sensor"
		},
		{
			"type": "other",
			"data": "`minecraft:rail_sensor` defines the entity's behavior when passing over an activated or deactivated rail."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "check_block_types",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, on tick this entity will trigger its on_deactivate behavior"
				},
				{
					"Name": "eject_on_activate",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, this entity will eject all of its riders when it passes over an activated rail"
				},
				{
					"Name": "eject_on_deactivate",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, this entity will eject all of its riders when it passes over a deactivated rail"
				},
				{
					"Name": "on_activate",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when the rail is activated"
				},
				{
					"Name": "on_deactivate",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when the rail is deactivated"
				},
				{
					"Name": "tick_command_block_on_activate",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, command blocks will start ticking when passing over an activated rail"
				},
				{
					"Name": "tick_command_block_on_deactivate",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If false, command blocks will stop ticking when passing over a deactivated rail"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:rail_sensor": {
					"check_block_types": false,
					"eject_on_activate": true,
					"eject_on_deactivate": false,
					"on_activate": {
						"event": "minecraft:command_block_activate"
					},
					"on_deactivate": { "event": "minecraft:hopper_activate" },
					"tick_command_block_on_activate": true,
					"tick_command_block_on_deactivate": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " minecart" },
		{
			"type": "code",
			"data": { "minecraft:rail_sensor": { "eject_on_activate": true } },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/minecart.json",
			"range": [32, 34]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:rail_sensor`"
		},
		{
			"type": "list",
			"data": [
				"[command_block_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/command_block_minecart.md)",
				"[hopper_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/hopper_minecart.md)",
				"[minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/minecart.md)",
				"[tnt_minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/tnt_minecart.md)"
			]
		}
	],
	"minecraftComponent_ravager_blocked": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:ravager_blocked",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:ravager_blocked"
		},
		{
			"type": "other",
			"data": "`minecraft:ravager_blocked` defines the ravager's response to their melee attack being blocked."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "knockback_strength",
					"Default Value": "3.0",
					"Type": "Decimal",
					"Description": "The strength with which blocking entities should be knocked back"
				},
				{
					"Name": "reaction_choices",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "A list of weighted responses to the melee attack being blocked"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:ravager_blocked": {
					"knockback_strength": 3,
					"reaction_choices": []
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " ravager" },
		{
			"type": "code",
			"data": {
				"minecraft:ravager_blocked": {
					"knockback_strength": 3,
					"reaction_choices": [
						{
							"weight": 1,
							"value": {
								"event": "minecraft:become_stunned",
								"target": "self"
							}
						},
						{ "weight": 1 }
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/ravager.json",
			"range": [232, 247]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:ravager_blocked`"
		},
		{
			"type": "list",
			"data": [
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)"
			]
		}
	],
	"minecraftComponent_rideable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:rideable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:rideable"
		},
		{
			"type": "other",
			"data": "`minecraft:rideable` determines whether this entity can be ridden. Allows specifying the different seat positions and quantity."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "controlling_seat",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "The seat that designates the driver of the entity. This is only observed by the horse/boat styles of riding; minecarts/entities with \"minecraft:controlled_by_player\" give control to any player in any seat."
				},
				{
					"Name": "crouching_skip_interact",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, this entity can't be interacted with if the entity interacting with it is crouching"
				},
				{
					"Name": "family_types",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of entities that can ride this entity"
				},
				{
					"Name": "interact_text",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The text to display when the player can interact with the entity when playing with Touch-screen controls"
				},
				{
					"Name": "priority",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "This field may exist in old data but isn't used by minecraft:rideable."
				},
				{
					"Name": "pull_in_entities",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, this entity will pull in entities that are in the correct family_types into any available seats"
				},
				{
					"Name": "rider_can_interact",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If true, this entity will be picked when looked at by the rider"
				},
				{
					"Name": "seat_count",
					"Default Value": "1",
					"Type": "Integer",
					"Description": "The number of entities that can ride this entity at the same time"
				},
				{
					"Name": "seats",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of positions and number of riders for each position for entities riding this entity"
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " seats" },
		{
			"type": "other",
			"data": "`seats` is a list defined by five parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "lock_rider_rotation",
					"Default Value": "181",
					"Type": "Decimal",
					"Description": "Angle in degrees that a rider is allowed to rotate while riding this entity. Omit this property for no limit"
				},
				{
					"Name": "max_rider_count",
					"Default Value": "seat_count",
					"Type": "Integer",
					"Description": "Defines the maximum number of riders that can be riding this entity for this seat to be valid"
				},
				{
					"Name": "min_rider_count",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Defines the minimum number of riders that need to be riding this entity before this seat can be used"
				},
				{
					"Name": "position",
					"Default Value": "[0, 0, 0]",
					"Type": "Vector [a, b, c]",
					"Description": "Position of this seat relative to this entity's position"
				},
				{
					"Name": "rotate_rider_by",
					"Default Value": "0",
					"Type": "Molang",
					"Description": "Offset to rotate riders by"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:rideable": {
					"controlling_seat": 0,
					"crouching_skip_interact": true,
					"family_types": [],
					"priority": 0,
					"pull_in_entities": false,
					"rider_can_interact": false,
					"seat_count": 1,
					"seats": {
						"lock_rider_rotation": 181,
						"max_rider_count": "seat_count",
						"min_rider_count": 0,
						"position": [0, 0, 0],
						"rotate_rider_by": 0
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " boat" },
		{
			"type": "code",
			"data": {
				"minecraft:rideable": {
					"seat_count": 2,
					"interact_text": "action.interact.ride.boat",
					"pull_in_entities": true,
					"seats": [
						{
							"position": [0, -0.2, 0],
							"min_rider_count": 0,
							"max_rider_count": 1,
							"rotate_rider_by": -90,
							"lock_rider_rotation": 90
						},
						{
							"position": [0.2, -0.2, 0],
							"min_rider_count": 2,
							"max_rider_count": 2,
							"rotate_rider_by": "query.has_any_family('blaze', 'creeper', 'enderman', 'illager', 'magmacube', 'piglin', 'player', 'skeleton', 'slime', 'villager', 'wandering_trader', 'witch', 'zombie', 'zombie_pigman') ? -90 : 0",
							"lock_rider_rotation": 90
						},
						{
							"position": [-0.6, -0.2, 0],
							"min_rider_count": 2,
							"max_rider_count": 2,
							"rotate_rider_by": "query.has_any_family('blaze', 'creeper', 'enderman', 'illager', 'magmacube', 'piglin', 'player', 'skeleton', 'slime', 'villager', 'wandering_trader', 'witch', 'zombie', 'zombie_pigman') ? -90 : 0",
							"lock_rider_rotation": 90
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/boat.json",
			"range": [26, 56]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:rideable`"
		},
		{
			"type": "list",
			"data": [
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[cave_spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/cave_spider.md)",
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[cow](../../../../Source/VanillaBehaviorPack_Snippets/entities/cow.md)",
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[minecart](../../../../Source/VanillaBehaviorPack_Snippets/entities/minecart.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[sheep](../../../../Source/VanillaBehaviorPack_Snippets/entities/sheep.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[spider](../../../../Source/VanillaBehaviorPack_Snippets/entities/spider.md)",
				"[strider](../../../../Source/VanillaBehaviorPack_Snippets/entities/strider.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_scaffolding_climber": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:scaffolding_climber",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:scaffolding_climber"
		},
		{
			"type": "other",
			"data": "`minecraft:scaffolding_climber` allows the player to detect and manuever on the scaffolding block."
		},
		{ "type": "alert", "data": "IMPORTANT" },
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:scaffolding_climber": {} },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{
			"type": "other",
			"data": "No entities currently use `minecraft:scaffolding_climber`"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:scaffolding_climber`"
		},
		{
			"type": "other",
			"data": "No entities currently use `minecraft:scaffolding_climber`"
		}
	],
	"minecraftComponent_scale_by_age": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:scale_by_age",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:scale_by_age"
		},
		{
			"type": "other",
			"data": "`minecraft:scale_by_age` defines the entity's size interpolation based on the entity's age."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "end_scale",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "Ending scale of the entity when it's fully grown."
				},
				{
					"Name": "start_scale",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "Initial scale of the newborn entity."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:scale_by_age": { "end_scale": 1, "start_scale": 1 }
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " horse" },
		{
			"type": "code",
			"data": {
				"minecraft:scale_by_age": { "start_scale": 0.5, "end_scale": 1 }
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/horse.json",
			"range": [15, 18]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:scale_by_age`"
		},
		{
			"type": "list",
			"data": [
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)",
				"[skeleton_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton_horse.md)",
				"[zombie_horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_horse.md)"
			]
		}
	],
	"minecraftComponent_scheduler": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:scheduler",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:scheduler"
		},
		{
			"type": "other",
			"data": "`minecraft:scheduler` fires off scheduled mob events at time of day events."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "scheduled_events",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of triggers that fire when the conditions match the given filter criteria. If any filter criteria overlap the first defined event will be picked."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:scheduler": {
					"scheduled_events": [
						{
							"filters": [
								{ "test": "has_damage", "value": false },
								{ "test": "is_daytime", "value": false }
							],
							"event": "minecraft:sleepy_time"
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " fox" },
		{
			"type": "code",
			"data": {
				"minecraft:scheduler": {
					"min_delay_secs": 0,
					"max_delay_secs": 0,
					"scheduled_events": [
						{
							"filters": [
								{ "test": "is_sleeping", "value": true }
							],
							"event": "minecraft:ambient_sleep"
						},
						{
							"filters": {
								"all_of": [
									{ "test": "is_daytime", "value": false },
									{
										"test": "distance_to_nearest_player",
										"operator": ">",
										"value": 16
									}
								]
							},
							"event": "minecraft:ambient_night"
						},
						{
							"filters": {
								"all_of": [
									{ "test": "is_sleeping", "value": false },
									{
										"any_of": [
											{
												"test": "is_daytime",
												"value": true
											},
											{
												"test": "distance_to_nearest_player",
												"operator": "<=",
												"value": 16
											}
										]
									}
								]
							},
							"event": "minecraft:ambient_normal"
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/fox.json",
			"range": [660, 694]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:scheduler`"
		},
		{
			"type": "list",
			"data": [
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)"
			]
		}
	],
	"minecraftComponent_shareables": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "docsbryce",
				"ms.author": "v-bbortree",
				"title": "Entity Documentation - minecraft:shareables",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:shareables"
		},
		{
			"type": "other",
			"data": "`minecraft:shareables` defines a list of items the mob wants to share or pick up."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "all_items",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "A bucket for all other items in the game. Note this category is always least priority items."
				},
				{
					"Name": "all_items_max_amount",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "Maximum number of this item the mob will hold."
				},
				{
					"Name": "all_items_surplus_amount",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "Number of this item considered extra that the entity wants to share."
				},
				{
					"Name": "all_items_want_amount",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "Number of this item this entity wants to share."
				},
				{
					"Name": "items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of items that the entity wants to share."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " items" },
		{
			"type": "other",
			"data": "`items` is a list defined by eleven parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "admire",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Mob will admire the item after picking up by looking at it. For this to happen the mob needs to have an [Admire](minecraftComponent_admire_item.md) component and an [Admire](../EntityGoals/minecraftBehavior_admire_item.md) goal."
				},
				{
					"Name": "barter",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Mob will barter for the item after picking it up. For this to work the mob needs to have a [Barter](minecraftComponent_barter.md) component and a [Barter](../EntityGoals/minecraftBehavior_barter.md) goal."
				},
				{
					"Name": "consume_item",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Determines whether the mob will consume the item or not."
				},
				{
					"Name": "craft_into",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Defines the item this entity wants to craft with the item defined by \"item\". Should be an item name."
				},
				{
					"Name": "item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The name of the item. Aux value can be specified, for instance `minecraft:skull:1`."
				},
				{
					"Name": "max_amount",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "Maximum number of this item the mob will hold."
				},
				{
					"Name": "pickup_limit",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "Maximum number of this item the mob will pick up during a single goal tick."
				},
				{
					"Name": "pickup_only",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "Determines whether the mob can only pickup the item and not drop it."
				},
				{
					"Name": "priority",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "Prioritizes which items the entity prefers. 0 is the highest priority."
				},
				{
					"Name": "stored_in_inventory",
					"Default Value": "_not set_",
					"Type": "Boolean",
					"Description": "Determines whether the mob will try to put the item in its inventory if it has the inventory component and if it can't be equipped."
				},
				{
					"Name": "surplus_amount",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "Number of this item considered extra that the entity wants to share."
				},
				{
					"Name": "want_amount",
					"Default Value": "_not set_",
					"Type": "Integer",
					"Description": "Number of this item this entity wants to have."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "other",
			"data": "In this example, an entity wants to be able to make `bread` from `wheat`. Since bread requires 3 total wheat, the entity will want a total of 3 and will consider 4 or more as surplus."
		},
		{
			"type": "code",
			"data": {
				"minecraft:shareables": {
					"all_items": true,
					"all_items_max_amount": 1,
					"all_items_surplus_amount": 4,
					"all_items_want_amount": 3,
					"items": [
						{
							"item": "minecraft:wheat",
							"admire": false,
							"barter": false,
							"consume_item": false,
							"craft_into": "minecraft:bread",
							"priority": 0,
							"max_amount": 3,
							"pickup_limit": -1,
							"pickup_only": true,
							"store_in_inventory": true,
							"surplus_amount": 4,
							"want_amount": 3
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " wither_skeleton" },
		{
			"type": "code",
			"data": {
				"minecraft:shareables": {
					"items": [
						{
							"item": "minecraft:netherite_sword",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 0
						},
						{
							"item": "minecraft:diamond_sword",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 1
						},
						{
							"item": "minecraft:iron_sword",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 2
						},
						{
							"item": "minecraft:stone_sword",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 3
						},
						{
							"item": "minecraft:golden_sword",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 4
						},
						{
							"item": "minecraft:wooden_sword",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 5
						},
						{
							"item": "minecraft:wooden_shovel",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:stone_shovel",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:golden_shovel",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:iron_shovel",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:diamond_shovel",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:netherite_shovel",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:wooden_pickaxe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:stone_pickaxe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:golden_pickaxe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:iron_pickaxe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:diamond_pickaxe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:netherite_pickaxe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:wooden_axe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:stone_axe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:golden_axe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:iron_axe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:diamond_axe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:netherite_axe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:wooden_hoe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:stone_hoe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:golden_hoe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:iron_hoe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:diamond_hoe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:netherite_hoe",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:netherite_helmet",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 0
						},
						{
							"item": "minecraft:diamond_helmet",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 1
						},
						{
							"item": "minecraft:iron_helmet",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 2
						},
						{
							"item": "minecraft:chainmail_helmet",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 3
						},
						{
							"item": "minecraft:golden_helmet",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 4
						},
						{
							"item": "minecraft:leather_helmet",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 5
						},
						{
							"item": "minecraft:turtle_helmet",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 6
						},
						{
							"item": "minecraft:skull:0",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 7
						},
						{
							"item": "minecraft:skull:1",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 7
						},
						{
							"item": "minecraft:carved_pumpkin",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 7
						},
						{
							"item": "minecraft:netherite_chestplate",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 0
						},
						{
							"item": "minecraft:diamond_chestplate",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 1
						},
						{
							"item": "minecraft:iron_chestplate",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 2
						},
						{
							"item": "minecraft:chainmail_chestplate",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 3
						},
						{
							"item": "minecraft:golden_chestplate",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 4
						},
						{
							"item": "minecraft:leather_chestplate",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 5
						},
						{
							"item": "minecraft:netherite_leggings",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 0
						},
						{
							"item": "minecraft:diamond_leggings",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 1
						},
						{
							"item": "minecraft:iron_leggings",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 2
						},
						{
							"item": "minecraft:chainmail_leggings",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 3
						},
						{
							"item": "minecraft:golden_leggings",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 4
						},
						{
							"item": "minecraft:leather_leggings",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 5
						},
						{
							"item": "minecraft:netherite_boots",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 0
						},
						{
							"item": "minecraft:diamond_boots",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 1
						},
						{
							"item": "minecraft:iron_boots",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 2
						},
						{
							"item": "minecraft:chainmail_boots",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 3
						},
						{
							"item": "minecraft:golden_boots",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 4
						},
						{
							"item": "minecraft:leather_boots",
							"want_amount": 1,
							"surplus_amount": 1,
							"priority": 5
						}
					]
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/wither_skeleton.json",
			"range": [59, 410]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:shareables`"
		},
		{
			"type": "list",
			"data": [
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[fox](../../../../Source/VanillaBehaviorPack_Snippets/entities/fox.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[wither_skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/wither_skeleton.md)",
				"[zombie_pigman](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_pigman.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_shooter": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:shooter(entity)",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:shooter (Entity)"
		},
		{
			"type": "other",
			"data": "`minecraft:shooter` defines the entity's ranged attack behavior."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "aux_val",
					"Default Value": "-1",
					"Type": "Integer",
					"Description": "ID of the Potion effect to be applied on hit"
				},
				{
					"Name": "def",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Actor definition to use as projectile for the ranged attack. The actor definition must have the projectile component to be able to be shot as a projectile"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:shooter": {
					"aux_val": -1,
					"def": "minecraft:small_fireball"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " ghast" },
		{
			"type": "code",
			"data": { "minecraft:shooter": { "def": "minecraft:fireball" } },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/ghast.json",
			"range": [48, 50]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:shooter`"
		},
		{
			"type": "list",
			"data": [
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[ender_dragon](../../../../Source/VanillaBehaviorPack_Snippets/entities/ender_dragon.md)",
				"[ghast](../../../../Source/VanillaBehaviorPack_Snippets/entities/ghast.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[pillager](../../../../Source/VanillaBehaviorPack_Snippets/entities/pillager.md)",
				"[shulker](../../../../Source/VanillaBehaviorPack_Snippets/entities/shulker.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)"
			]
		}
	],
	"minecraftComponent_sittable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:sittable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:sittable"
		},
		{
			"type": "other",
			"data": "`minecraft:sittable` defines the entity's 'sit' state."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "sit_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to run when the entity enters the 'sit' state"
				},
				{
					"Name": "stand_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to run when the entity exits the 'sit' state"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:sittable": {
					"sit_event": "minecraft:taking_a_seat",
					"stand_event": "minecraft:time_to_go"
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " cat" },
		{
			"type": "code",
			"data": { "minecraft:sittable": {} },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/cat.json",
			"range": [151, 152]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:sittable`"
		},
		{
			"type": "list",
			"data": [
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)"
			]
		}
	],
	"minecraftComponent_spawn_entity": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:spawn_entity",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:spawn_entity"
		},
		{
			"type": "other",
			"data": "`minecraft:spawn_entity` adds a timer after which this entity will spawn another entity or item (similar to vanilla's chicken's egg-laying behavior)."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "entities",
					"Default Value": "_not set_",
					"Type": "List of entities",
					"Description": "A list of entities to spawn in"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Entities" },
		{
			"type": "table",
			"data": [
				{
					"Name": "filters",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "If present, the specified entity will only spawn if the filter evaluates to true."
				},
				{
					"Name": "max_wait_time",
					"Default Value": "600",
					"Type": "Integer",
					"Description": "Maximum amount of time to randomly wait in seconds before another entity is spawned."
				},
				{
					"Name": "min_wait_time",
					"Default Value": "300",
					"Type": "Integer",
					"Description": "Minimum amount of time to randomly wait in seconds before another entity is spawned."
				},
				{
					"Name": "num_to_spawn",
					"Default Value": "1",
					"Type": "Integer",
					"Description": "The number of entities of this type to spawn each time that this triggers."
				},
				{
					"Name": "should_leash",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, this the spawned entity will be leashed to the parent."
				},
				{
					"Name": "single_use",
					"Default Value": "false",
					"Type": "Boolean",
					"Description": "If true, this component will only ever spawn the specified entity once."
				},
				{
					"Name": "spawn_entity",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Identifier of the entity to spawn, leave empty to spawn the item defined by \"spawn_item\" instead."
				},
				{
					"Name": "spawn_event",
					"Default Value": "minecraft:entity_born",
					"Type": "String",
					"Description": "Event to call when the entity is spawned."
				},
				{
					"Name": "spawn_item",
					"Default Value": "egg",
					"Type": "String",
					"Description": "Item identifier of the item to spawn."
				},
				{
					"Name": "spawn_method",
					"Default Value": "born",
					"Type": "String",
					"Description": "Method to use to spawn the entity."
				},
				{
					"Name": "spawn_sound",
					"Default Value": "plop",
					"Type": "String",
					"Description": "Identifier of the sound effect to play when the entity is spawned."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:spawn_entity": {
					"entities": [
						{
							"filters": [
								{ "test": "is_daytime", "value": false }
							],
							"max_wait_time": 600,
							"min_wait_time": 300,
							"num_to_spawn": 1,
							"should_leash": false,
							"single_use": false,
							"spawn_event": "minecraft:entity_born",
							"spawn_item": "egg",
							"spawn_method": "born",
							"spawn_sound": "plop"
						}
					]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " chicken" },
		{
			"type": "code",
			"data": {
				"minecraft:spawn_entity": {
					"entities": {
						"min_wait_time": 300,
						"max_wait_time": 600,
						"spawn_sound": "plop",
						"spawn_item": "egg",
						"filters": {
							"test": "rider_count",
							"subject": "self",
							"operator": "==",
							"value": 0
						}
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/chicken.json",
			"range": [74, 84]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:spawn_entity`"
		},
		{
			"type": "list",
			"data": [
				"[chicken](../../../../Source/VanillaBehaviorPack_Snippets/entities/chicken.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)"
			]
		}
	],
	"minecraftComponent_tameable": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-josjones",
				"ms.author": "v-josjones",
				"title": "Entity Documentation - minecraft:tameable",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:tameable"
		},
		{
			"type": "other",
			"data": "`minecraft:tameable` defines the rules for a mob to be tamed by the player."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "probability",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "The chance of taming the entity with each item use between 0.0 and 1.0, where 1.0 is 100%"
				},
				{
					"Name": "tame_event",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to run when this entity becomes tamed"
				},
				{
					"Name": "tame_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of items that can be used to tame this entity"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:tameable": {
					"probability": 0.33,
					"tame_items": "bone",
					"tame_event": {
						"event": "minecraft:on_tame",
						"target": "self"
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " wolf" },
		{
			"type": "code",
			"data": {
				"minecraft:tameable": {
					"probability": 0.33,
					"tame_items": "bone",
					"tame_event": {
						"event": "minecraft:on_tame",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/wolf.json",
			"range": [112, 119]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:tameable`"
		},
		{
			"type": "list",
			"data": [
				"[cat](../../../../Source/VanillaBehaviorPack_Snippets/entities/cat.md)",
				"[parrot](../../../../Source/VanillaBehaviorPack_Snippets/entities/parrot.md)",
				"[wolf](../../../../Source/VanillaBehaviorPack_Snippets/entities/wolf.md)"
			]
		}
	],
	"minecraftComponent_tamemount": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:tamemount",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:tamemount"
		},
		{
			"type": "other",
			"data": "`minecraft:tamemount` allows the Entity to be tamed by mounting it."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "attempt_temper_mod",
					"Default Value": "5",
					"Type": "Integer",
					"Description": "The amount the entity's temper will increase when mounted."
				},
				{
					"Name": "autoRejectItems",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "The list of items that, if carried while interacting with the entity, will anger it."
				},
				{
					"Name": "feed_items",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "The list of items that can be used to increase the entity's temper and speed up the taming process."
				},
				{
					"Name": "feed_text",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The text that shows in the feeding interact button."
				},
				{
					"Name": "max_temper",
					"Default Value": "100",
					"Type": "Integer",
					"Description": "The maximum value for the entity's random starting temper."
				},
				{
					"Name": "min_temper",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "The minimum value for the entity's random starting temper."
				},
				{
					"Name": "ride_text",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "The text that shows in the riding interact button."
				},
				{
					"Name": "tame_event",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event that triggers when the entity becomes tamed."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " autoRejectItems" },
		{
			"type": "other",
			"data": "`autoRejectItems` is a JSON Object defined by one parameter. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Name of the item this entity dislikes and will cause it to get angry if used while untamed."
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " feed_items" },
		{
			"type": "other",
			"data": "`feed_items` is a JSON Object defined by one parameter. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "item",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Name of the item this entity likes and can be used to increase this entity's temper."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:tamemount": {
					"min_temper": 0,
					"max_temper": 100,
					"feed_text": "action.interact.feed",
					"ride_text": "action.interact.mount",
					"feed_items": [{ "item": "wheat", "temper_mod": 3 }],
					"auto_reject_items": [{ "item": "horsearmorleather" }],
					"tame_event": {
						"event": "minecraft:on_tame",
						"target": "self"
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " horse" },
		{
			"type": "code",
			"data": {
				"minecraft:tamemount": {
					"min_temper": 0,
					"max_temper": 100,
					"feed_text": "action.interact.feed",
					"ride_text": "action.interact.mount",
					"feed_items": [
						{ "item": "wheat", "temper_mod": 3 },
						{ "item": "sugar", "temper_mod": 3 },
						{ "item": "apple", "temper_mod": 3 },
						{ "item": "golden_carrot", "temper_mod": 5 },
						{ "item": "golden_apple", "temper_mod": 10 },
						{ "item": "appleEnchanted", "temper_mod": 10 }
					],
					"auto_reject_items": [
						{ "item": "horsearmorleather" },
						{ "item": "horsearmoriron" },
						{ "item": "horsearmorgold" },
						{ "item": "horsearmordiamond" },
						{ "item": "saddle" }
					],
					"tame_event": {
						"event": "minecraft:on_tame",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/horse.json",
			"range": [99, 151]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:tamemount`"
		},
		{
			"type": "list",
			"data": [
				"[donkey](../../../../Source/VanillaBehaviorPack_Snippets/entities/donkey.md)",
				"[horse](../../../../Source/VanillaBehaviorPack_Snippets/entities/horse.md)",
				"[llama](../../../../Source/VanillaBehaviorPack_Snippets/entities/llama.md)",
				"[mule](../../../../Source/VanillaBehaviorPack_Snippets/entities/mule.md)"
			]
		}
	],
	"minecraftComponent_target_nearby_sensor": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:target_nearby_sensor",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:target_nearby_sensor"
		},
		{
			"type": "other",
			"data": "`minecraft:target_nearby_sensor` defines the entity's range within which it can see or sense other entities to target them."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "inside_range",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "Maximum distance in blocks that another entity will be considered in the 'inside' range"
				},
				{
					"Name": "must_see",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Whether the other entity needs to be visible to trigger 'inside' events"
				},
				{
					"Name": "on_inside_range",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when an entity gets in the inside range. Can specify 'event' for the name of the event and 'target' for the target of the event"
				},
				{
					"Name": "on_outside_range",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when an entity gets in the outside range. Can specify 'event' for the name of the event and 'target' for the target of the event"
				},
				{
					"Name": "on_vision_lost_inside_range",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Event to call when an entity exits visual range. Can specify 'event' for the name of the event and 'target' for the target of the event"
				},
				{
					"Name": "outside_range",
					"Default Value": "5",
					"Type": "Decimal",
					"Description": "Maximum distance in blocks that another entity will be considered in the 'outside' range"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:target_nearby_sensor": {
					"inside_range": 1,
					"must_see": false,
					"on_inside_range": {
						"event": "minecraft:i_see_you",
						"target": "self"
					},
					"on_outside_range": {
						"event": "minecraft:where_did_you_go",
						"target": "self"
					},
					"on_vision_lost_inside_range": {
						"event": "minecraft:ill_find_you",
						"target": "self"
					},
					"outside_range": 5
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " creeper" },
		{
			"type": "code",
			"data": {
				"minecraft:target_nearby_sensor": {
					"inside_range": 2.5,
					"outside_range": 6,
					"must_see": true,
					"on_inside_range": {
						"event": "minecraft:start_exploding",
						"target": "self"
					},
					"on_outside_range": {
						"event": "minecraft:stop_exploding",
						"target": "self"
					},
					"on_vision_lost_inside_range": {
						"event": "minecraft:stop_exploding",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/creeper.json",
			"range": [122, 138]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:target_nearby_sensor`"
		},
		{
			"type": "list",
			"data": [
				"[blaze](../../../../Source/VanillaBehaviorPack_Snippets/entities/blaze.md)",
				"[creeper](../../../../Source/VanillaBehaviorPack_Snippets/entities/creeper.md)",
				"[drowned](../../../../Source/VanillaBehaviorPack_Snippets/entities/drowned.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)"
			]
		}
	],
	"minecraftComponent_teleport": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:teleport",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:teleport"
		},
		{
			"type": "other",
			"data": "`minecraft:teleport` defines an entity's teleporting behavior."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "dark_teleport_chance",
					"Default Value": "0.01",
					"Type": "Decimal",
					"Description": "Modifies the chance that the entity will teleport if the entity is in darkness"
				},
				{
					"Name": "light_teleport_chance",
					"Default Value": "0.01",
					"Type": "Decimal",
					"Description": "Modifies the chance that the entity will teleport if the entity is in daylight"
				},
				{
					"Name": "max_random_teleport_time",
					"Default Value": "20",
					"Type": "Decimal",
					"Description": "Maximum amount of time in seconds between random teleports"
				},
				{
					"Name": "min_random_teleport_time",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Minimum amount of time in seconds between random teleports"
				},
				{
					"Name": "random_teleport_cube",
					"Default Value": "[32, 16, 32]",
					"Type": "Vector [a, b, c]",
					"Description": "Entity will teleport to a random position within the area defined by this cube"
				},
				{
					"Name": "random_teleports",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, the entity will teleport randomly"
				},
				{
					"Name": "target_distance",
					"Default Value": "16",
					"Type": "Decimal",
					"Description": "Maximum distance the entity will teleport when chasing a target"
				},
				{
					"Name": "target_teleport_chance",
					"Default Value": "1",
					"Type": "Decimal",
					"Description": "The chance that the entity will teleport between 0.0 and 1.0. 1.0 means 100%"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:teleport": {
					"dark_teleport_chance": 0.01,
					"light_teleport_chance": 0.01,
					"max_random_teleport_time": 20,
					"min_random_teleport_time": 0,
					"random_teleport_cube": [32, 16, 32],
					"random_teleports": true,
					"target_distance": 16,
					"target_teleport_chance": 1
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " enderman" },
		{
			"type": "code",
			"data": {
				"minecraft:teleport": {
					"random_teleports": true,
					"max_random_teleport_time": 30,
					"random_teleport_cube": [32, 32, 32],
					"target_distance": 16,
					"target_teleport_chance": 0.05,
					"light_teleport_chance": 0.05
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/enderman.json",
			"range": [85, 92]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:teleport`"
		},
		{
			"type": "list",
			"data": [
				"[enderman](../../../../Source/VanillaBehaviorPack_Snippets/entities/enderman.md)"
			]
		}
	],
	"minecraftComponent_tick_world": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:tick_world",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:tick_world"
		},
		{
			"type": "other",
			"data": "`minecraft:tick_world` defines if the entity ticks the world and the radius around it to tick."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "distance_to_players",
					"Default Value": "128",
					"Type": "Decimal",
					"Description": "The distance at which the closest player has to be before this entity despawns. This option will be ignored if never_despawn is true. Min: 128 blocks."
				},
				{
					"Name": "never_despawn",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, this entity will not despawn even if players are far away. If false, distance_to_players will be used to determine when to despawn."
				},
				{
					"Name": "radius",
					"Default Value": "2",
					"Type": "Integer",
					"Description": "The area around the entity to tick. Default: 2. Allowed range: 2-6. Must be a positive integer."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:tick_world": {
					"distance_to_players": 128,
					"never_despawn": true,
					"radius": 2
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{
			"type": "other",
			"data": "No entities currently use `minecraft:tick_world`"
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:tick_world`"
		},
		{
			"type": "other",
			"data": "No entities currently use `minecraft:tick_world`"
		}
	],
	"minecraftComponent_timer": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:timer",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:timer"
		},
		{
			"type": "other",
			"data": "`minecraft:timer` adds a timer after which an event will fire."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "looping",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, the timer will restart every time after it fires."
				},
				{
					"Name": "randomInterval",
					"Default Value": "True",
					"Type": "Boolean",
					"Description": "If true, the amount of time on the timer will be random between the min and max values specified in time."
				},
				{
					"Name": "random_time_choices",
					"Default Value": "[ ]",
					"Type": "List",
					"Description": "This is a list of objects, representing one value in seconds that can be picked before firing the event and an optional weight. Incompatible with time."
				},
				{
					"Name": "time",
					"Default Value": "[0.0, 0.0]",
					"Type": "Range [a, b]",
					"Description": "Amount of time in seconds for the timer. Can be specified as a number or a pair of numbers (min and max). Incompatible with random_time_choices."
				},
				{
					"Name": "time_down_event",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Contains any events to fire when the time on the timer runs out."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:timer": {
					"looping": true,
					"randomInterval": true,
					"time": [0, 0],
					"time_down_event": { "event": "minecraft:times_up" }
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " husk" },
		{
			"type": "code",
			"data": {
				"minecraft:timer": {
					"looping": false,
					"time": 30,
					"time_down_event": {
						"event": "minecraft:convert_to_zombie"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/husk.json",
			"range": [31, 37]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:timer`"
		},
		{
			"type": "list",
			"data": [
				"[bee](../../../../Source/VanillaBehaviorPack_Snippets/entities/bee.md)",
				"[boat](../../../../Source/VanillaBehaviorPack_Snippets/entities/boat.md)",
				"[guardian](../../../../Source/VanillaBehaviorPack_Snippets/entities/guardian.md)",
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[player](../../../../Source/VanillaBehaviorPack_Snippets/entities/player.md)",
				"[pufferfish](../../../../Source/VanillaBehaviorPack_Snippets/entities/pufferfish.md)",
				"[ravager](../../../../Source/VanillaBehaviorPack_Snippets/entities/ravager.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[wandering_trader](../../../../Source/VanillaBehaviorPack_Snippets/entities/wandering_trader.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_trade_table": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:trade_table",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:trade_table"
		},
		{
			"type": "other",
			"data": "`minecraft:trade_table` defines this entity's ability to trade with players."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "convert_trades_economy",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1."
				},
				{
					"Name": "display_name",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Name to be displayed while trading with this entity."
				},
				{
					"Name": "new_screen",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Used to determine if trading with entity opens the new trade screen."
				},
				{
					"Name": "persist_trades",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades."
				},
				{
					"Name": "table",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "File path relative to the behavior pack root for this entity's trades."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:trade_table": {
					"convert_trades_economy": false,
					"display_name": "What are you buying?",
					"new_screen": false,
					"persist_trades": false
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " villager" },
		{
			"type": "code",
			"data": {
				"minecraft:trade_table": {
					"display_name": "entity.villager.farmer",
					"table": "trading/farmer_trades.json",
					"convert_trades_economy": true
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/villager.json",
			"range": [125, 129]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:trade_table`"
		},
		{
			"type": "list",
			"data": [
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)"
			]
		}
	],
	"minecraftComponent_trail": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:trail",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:trail"
		},
		{
			"type": "other",
			"data": "`minecraft:trail` causes an entity to leave a trail of blocks as it moves about the world."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "block_type",
					"Default Value": "\"air\"",
					"Type": "String",
					"Description": "The type of block you wish to be spawned by the entity as it move about the world. Solid blocks may not be spawned at an offset of (0,0,0)."
				},
				{
					"Name": "[spawn_filter](../FilterList.md)",
					"Default Value": "_not set_",
					"Type": "Minecraft Filter",
					"Description": "One or more conditions that must be met in order to cause the chosen block type to spawn."
				},
				{
					"Name": "spawn_offset",
					"Default Value": "[0, 0, 0]",
					"Type": "Vector [a, b, c]",
					"Description": "The distance from the entities current position to spawn the block. Capped at up to 16 blocks away. The X value is left/right(-/+), the Z value is backward/forward(-/+), the Y value is below/above(-/+)."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:trail": {
					"block_type": "air",
					"spawn_filter": { "test": "is_daytime", "value": true },
					"spawn_offset": [0, 0, 0]
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " snow_golem" },
		{
			"type": "code",
			"data": {
				"minecraft:trail": {
					"block_type": "minecraft:snow_layer",
					"spawn_filter": {
						"test": "is_temperature_value",
						"operator": "<",
						"value": 0.81
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/snow_golem.json",
			"range": [120, 123]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:trail`"
		},
		{
			"type": "list",
			"data": [
				"[snow_golem](../../../../Source/VanillaBehaviorPack_Snippets/entities/snow_golem.md)"
			]
		}
	],
	"minecraftComponent_transformation": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:transformation",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:transformation"
		},
		{
			"type": "other",
			"data": "`minecraft:transformation` defines an entity's transformation from the current definition into another."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "add",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "List of components to add to the entity after the transformation"
				},
				{
					"Name": "begin_transform_sound",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Sound to play when the transformation starts"
				},
				{
					"Name": "drop_equipment",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Cause the entity to drop all equipment upon transformation"
				},
				{
					"Name": "drop_inventory",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Cause the entity to drop all items in inventory upon transformation"
				},
				{
					"Name": "into",
					"Default Value": "_not set_",
					"Type": "",
					"Description": "String",
					"": "Entity Definition that this entity will transform into.",
					"undefined": ""
				},
				{
					"Name": "keep_level",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If this entity has trades and has leveled up, it should maintain that level after transformation.",
					"": "Entity Definition that this entity will transform into.",
					"undefined": ""
				},
				{
					"Name": "keep_owner",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "If this entity is owned by another entity, it should remain owned after transformation.",
					"": "Entity Definition that this entity will transform into.",
					"undefined": ""
				},
				{
					"Name": "preserve_equipment",
					"Default Value": "False",
					"Type": "Boolean",
					"Description": "Cause the entity to keep equipment after going through transformation",
					"": "Entity Definition that this entity will transform into.",
					"undefined": ""
				},
				{
					"Name": "transformation_sound",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Sound to play when the entity is done transforming",
					"": "Entity Definition that this entity will transform into.",
					"undefined": ""
				},
				{
					"Name": "delay",
					"Default Value": "_not set_",
					"Type": "JSON Object",
					"Description": "Defines the properties of the delay for the transformation",
					"": "Entity Definition that this entity will transform into.",
					"undefined": ""
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " add" },
		{
			"type": "other",
			"data": "`add` is a JSON Object defined by ten parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "component_groups",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "Names of component groups to add"
				}
			]
		},
		{ "type": "heading", "level": 3, "data": " delay" },
		{
			"type": "other",
			"data": "`delay` is a JSON Object defined by six parameters. Each item has the following properties:"
		},
		{
			"type": "table",
			"data": [
				{
					"Name": "block_assist_chance",
					"Default Value": "0.0",
					"Type": "Decimal",
					"Description": "Chance that the entity will look for nearby blocks that can speed up the transformation. Value must be between 0.0 and 1.0"
				},
				{
					"Name": "block_chance",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Chance that, once a block is found, will help speed up the transformation"
				},
				{
					"Name": "block_max",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Maximum number of blocks the entity will look for to aid in the transformation. If not defined or set to 0, it will be set to the block radius"
				},
				{
					"Name": "block_radius",
					"Default Value": "0",
					"Type": "Integer",
					"Description": "Distance in Blocks that the entity will search for blocks that can help the transformation"
				},
				{
					"Name": "block_types",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "List of blocks that can help the transformation of this entity"
				},
				{
					"Name": "value",
					"Default Value": "0",
					"Type": "Decimal",
					"Description": "Time in seconds before the entity transforms"
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:transformation": {
					"into": "minecraft:drowned<minecraft:as_adult>",
					"transformation_sound": "convert_to_drowned",
					"drop_equipment": false,
					"drop_inventory": false,
					"keep_level": false,
					"delay": {
						"block_assist_chance": 0,
						"block_radius": 0,
						"block_max": 0,
						"value": 10
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " husk" },
		{
			"type": "code",
			"data": {
				"minecraft:transformation": {
					"into": "minecraft:zombie<minecraft:as_adult>",
					"transformation_sound": "convert_to_drowned",
					"drop_equipment": true,
					"delay": { "value": 15 }
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/husk.json",
			"range": [41, 48]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:transformation`"
		},
		{
			"type": "list",
			"data": [
				"[hoglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/hoglin.md)",
				"[husk](../../../../Source/VanillaBehaviorPack_Snippets/entities/husk.md)",
				"[mooshroom](../../../../Source/VanillaBehaviorPack_Snippets/entities/mooshroom.md)",
				"[pig](../../../../Source/VanillaBehaviorPack_Snippets/entities/pig.md)",
				"[piglin_brute](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin_brute.md)",
				"[piglin](../../../../Source/VanillaBehaviorPack_Snippets/entities/piglin.md)",
				"[skeleton](../../../../Source/VanillaBehaviorPack_Snippets/entities/skeleton.md)",
				"[stray](../../../../Source/VanillaBehaviorPack_Snippets/entities/stray.md)",
				"[villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager_v2.md)",
				"[villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/villager.md)",
				"[zombie_villager_v2](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager_v2.md)",
				"[zombie_villager](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie_villager.md)",
				"[zombie](../../../../Source/VanillaBehaviorPack_Snippets/entities/zombie.md)"
			]
		}
	],
	"minecraftComponent_trusting": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:trusting",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:trusting"
		},
		{
			"type": "other",
			"data": "`minecraft:trusting` defines the rules for a mob to trust players."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "probability",
					"Default Value": "1.00",
					"Type": "Decimal",
					"Description": "The chance of the entity trusting with each item use between 0.0 and 1.0, where 1.0 is 100%."
				},
				{
					"Name": "trust_event",
					"Default Value": "_not set_",
					"Type": "String",
					"Description": "Event to run when this entity becomes trusting."
				},
				{
					"Name": "trust_items",
					"Default Value": "_not set_",
					"Type": "List",
					"Description": "The list of items that can be used to get the entity to trust players."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": {
				"minecraft:trusting": {
					"probability": 1,
					"trust_items": ["emerald", "gold"],
					"trust_event": {
						"event": "minecraft:trust",
						"target": "self"
					}
				}
			},
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " ocelot" },
		{
			"type": "code",
			"data": {
				"minecraft:trusting": {
					"probability": 0.33,
					"trust_items": ["fish", "salmon"],
					"trust_event": {
						"event": "minecraft:on_trust",
						"target": "self"
					}
				}
			},
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/ocelot.json",
			"range": [41, 47]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:trusting`"
		},
		{
			"type": "list",
			"data": [
				"[ocelot](../../../../Source/VanillaBehaviorPack_Snippets/entities/ocelot.md)"
			]
		}
	],
	"minecraftComponent_water_movement": [
		{
			"type": "yamlHeader",
			"data": {
				"author": "v-jeffreykim",
				"ms.author": "v-jeffreykim",
				"title": "Entity Documentation - minecraft:water_movement",
				"ms.prod": "gaming"
			}
		},
		{
			"type": "heading",
			"level": 1,
			"data": " Entity Documentation - minecraft:water_movement"
		},
		{
			"type": "other",
			"data": "`minecraft:water_movement` defines the speed with which an entity can move through water."
		},
		{ "type": "heading", "level": 2, "data": " Parameters" },
		{
			"type": "table",
			"data": [
				{
					"Name": "drag_factor",
					"Default Value": "0.8",
					"Type": "Decimal",
					"Description": "Drag factor to determine movement speed when in water."
				}
			]
		},
		{ "type": "heading", "level": 2, "data": " Example" },
		{
			"type": "code",
			"data": { "minecraft:water_movement": { "drag_factor": 0.8 } },
			"language": "json"
		},
		{ "type": "heading", "level": 2, "data": " Vanilla entities examples" },
		{ "type": "heading", "level": 3, "data": " panda" },
		{
			"type": "code",
			"data": { "minecraft:water_movement": { "drag_factor": 0.98 } },
			"language": "json",
			"source": "../../../../Source/VanillaBehaviorPack/entities/panda.json",
			"range": [389, 391]
		},
		{
			"type": "heading",
			"level": 2,
			"data": " Vanilla entities using `minecraft:water_movement`"
		},
		{
			"type": "list",
			"data": [
				"[panda](../../../../Source/VanillaBehaviorPack_Snippets/entities/panda.md)",
				"[polar_bear](../../../../Source/VanillaBehaviorPack_Snippets/entities/polar_bear.md)",
				"[turtle](../../../../Source/VanillaBehaviorPack_Snippets/entities/turtle.md)"
			]
		}
	]
}
